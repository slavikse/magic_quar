{"version":3,"sources":["webpack:///./node_modules/aframe-extras/src/controls/touch-controls.js","webpack:///./node_modules/aframe-physics-system/src/drivers/network-driver.js","webpack:///./node_modules/core-js/modules/_html.js","webpack:///./node_modules/cannon/src/shapes/Particle.js","webpack:///./node_modules/cannon/src/utils/TupleDictionary.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/three-to-cannon/lib/THREE.quickhull.js","webpack:///./node_modules/aframe-physics-system/src/drivers/driver.js","webpack:///./node_modules/cannon/src/math/JacobianElement.js","webpack:///./node_modules/webworkify/index.js","webpack:///./node_modules/cannon/src/shapes/Trimesh.js","webpack:///./node_modules/three-pathfinding/src/BinaryHeap.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/cannon/src/collision/ArrayCollisionMatrix.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/aframe-extras/src/loaders/fbx-model.js","webpack:///./node_modules/aframe-extras/src/loaders/object-model.js","webpack:///./node_modules/aframe-extras/src/controls/checkpoint-controls.js","webpack:///./node_modules/aframe-extras/src/primitives/a-grid.js","webpack:///./node_modules/cannon/src/objects/SPHSystem.js","webpack:///./node_modules/cannon/src/utils/Vec3Pool.js","webpack:///./node_modules/aframe-extras/src/misc/normal-material.js","webpack:///./node_modules/three-pathfinding/src/Channel.js","webpack:///./node_modules/aframe-extras/src/primitives/a-hexgrid.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/cannon/src/utils/EventTarget.js","webpack:///./node_modules/cannon/src/shapes/Sphere.js","webpack:///./node_modules/aframe-extras/lib/default-hex-grid.js","webpack:///./node_modules/cannon/src/equations/RotationalEquation.js","webpack:///./node_modules/cannon/src/equations/FrictionEquation.js","webpack:///./node_modules/aframe-extras/lib/fetch-script.js","webpack:///./node_modules/cannon/src/utils/Octree.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/aframe-extras/src/misc/jump-ability.js","webpack:///./node_modules/aframe-physics-system/src/drivers/webworkify-debug.js","webpack:///./node_modules/cannon/src/collision/Ray.js","webpack:///./node_modules/three-pathfinding/src/Builder.js","webpack:///./node_modules/aframe-extras/lib/GamepadButton.js","webpack:///./node_modules/cannon/src/constraints/PointToPointConstraint.js","webpack:///./node_modules/three-pathfinding/src/index.js","webpack:///./node_modules/aframe-physics-system/src/drivers/worker-driver.js","webpack:///./node_modules/cannon/src/collision/GridBroadphase.js","webpack:///./node_modules/aframe-extras/src/controls/gamepad-controls.js","webpack:///./node_modules/aframe-extras/src/misc/mesh-smooth.js","webpack:///./node_modules/aframe-extras/src/primitives/a-tube.js","webpack:///./node_modules/aframe-extras/src/pathfinding/nav-mesh.js","webpack:///./node_modules/aframe-physics-system/src/constants.js","webpack:///./node_modules/aframe-extras/src/controls/index.js","webpack:///./node_modules/aframe-extras/src/pathfinding/system.js","webpack:///./node_modules/cannon/src/math/Mat3.js","webpack:///./node_modules/aframe-extras/src/pathfinding/nav-agent.js","webpack:///./node_modules/cannon/src/shapes/Heightfield.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/aframe-extras/src/misc/kinematic-body.js","webpack:///./node_modules/aframe-extras/lib/FBXLoader.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/aframe-extras/src/misc/sphere-collider.js","webpack:///./node_modules/aframe-physics-system/lib/CANNON-shape2mesh.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/cannon/src/equations/Equation.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/aframe-extras/lib/keyboard.polyfill.js","webpack:///./node_modules/cannon/src/math/Vec3.js","webpack:///./node_modules/cannon/src/constraints/HingeConstraint.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/vuex/dist/vuex.esm.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/cannon/src/equations/RotationalMotorEquation.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/aframe-extras/index.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/cannon/src/material/Material.js","webpack:///./node_modules/cannon/src/collision/ObjectCollisionMatrix.js","webpack:///./node_modules/cannon/src/world/World.js","webpack:///./node_modules/cannon/src/solver/GSSolver.js","webpack:///./node_modules/aframe-extras/src/loaders/animation-mixer.js","webpack:///./node_modules/three-pathfinding/src/utils.js","webpack:///./node_modules/cannon/src/Cannon.js","webpack:///./node_modules/aframe-physics-system/index.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/cannon/src/objects/WheelInfo.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/aframe-physics-system/src/utils/protocol.js","webpack:///./node_modules/cannon/src/shapes/Cylinder.js","webpack:///./node_modules/cannon/src/solver/Solver.js","webpack:///./node_modules/cannon/src/objects/RigidVehicle.js","webpack:///./node_modules/three-pathfinding/src/AStar.js","webpack:///./node_modules/cannon/src/solver/SplitSolver.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/aframe-extras/src/misc/cube-env-map.js","webpack:///./node_modules/three-to-cannon/index.js","webpack:///./node_modules/cannon/src/equations/ContactEquation.js","webpack:///./node_modules/aframe-physics-system/src/drivers/local-driver.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/cannon/src/world/Narrowphase.js","webpack:///./node_modules/cannon/src/shapes/ConvexPolyhedron.js","webpack:///./node_modules/cannon/src/collision/OverlapKeeper.js","webpack:///./node_modules/cannon/src/shapes/Shape.js","webpack:///./node_modules/aframe-extras/src/misc/index.js","webpack:///./node_modules/cannon/src/constraints/ConeTwistConstraint.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/aframe-physics-system/src/components/body/body.js","webpack:///./node_modules/cannon/src/objects/Spring.js","webpack:///./node_modules/aframe-extras/src/primitives/index.js","webpack:///./node_modules/cannon/src/math/Transform.js","webpack:///./node_modules/aframe-extras/src/misc/checkpoint.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/cannon/src/constraints/DistanceConstraint.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/cannon/src/constraints/Constraint.js","webpack:///./node_modules/aframe-physics-system/src/components/shape/shape.js","webpack:///./node_modules/cannon/src/material/ContactMaterial.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/cannon/src/objects/RaycastVehicle.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/cannon/src/utils/Pool.js","webpack:///./node_modules/cannon/src/constraints/LockConstraint.js","webpack:///./node_modules/aframe-extras/src/misc/grab.js","webpack:///./node_modules/aframe-extras/src/controls/movement-controls.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/aframe-extras/src/controls/keyboard-controls.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/cannon/src/collision/NaiveBroadphase.js","webpack:///./node_modules/aframe-physics-system/src/components/math/velocity.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/aframe-physics-system/src/drivers/worker.js","webpack:///./node_modules/cannon/src/equations/ConeEquation.js","webpack:///./node_modules/aframe-physics-system/src/utils/math.js","webpack:///./node_modules/cannon/src/collision/SAPBroadphase.js","webpack:///./node_modules/cannon/src/math/Quaternion.js","webpack:///./node_modules/aframe-extras/src/primitives/a-ocean.js","webpack:///./node_modules/aframe-physics-system/src/components/body/static-body.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/aframe-extras/src/loaders/index.js","webpack:///./node_modules/cannon/src/collision/Broadphase.js","webpack:///./node_modules/aframe-extras/src/pathfinding/index.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/aframe-physics-system/src/drivers/event.js","webpack:///./node_modules/aframe-extras/lib/GamepadButtonEvent.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/aframe-physics-system/src/system.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/cannon/src/collision/AABB.js","webpack:///./node_modules/aframe-extras/lib/PLYLoader.js","webpack:///./node_modules/aframe-physics-system/src/drivers/ammo-driver.js","webpack:///./node_modules/aframe-physics-system/src/components/constraint.js","webpack:///./node_modules/cannon/src/shapes/Plane.js","webpack:///./node_modules/aframe-physics-system/src/components/body/dynamic-body.js","webpack:///./node_modules/aframe-extras/src/loaders/ply-model.js","webpack:///./node_modules/aframe-extras/src/loaders/gltf-model-legacy.js","webpack:///./node_modules/cannon/src/objects/Body.js","webpack:///./node_modules/cannon/src/shapes/Box.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/aframe-physics-system/src/components/math/index.js","webpack:///./node_modules/cannon/src/utils/Utils.js","webpack:///./node_modules/aframe-extras/src/controls/trackpad-controls.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/aframe-extras/lib/hex-grid.min.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/aframe-extras/src/loaders/json-model.js","webpack:///./node_modules/cannon/src/collision/RaycastResult.js"],"names":["module","exports","AFRAME","registerComponent","schema","enabled","default","init","this","dVelocity","THREE","Vector3","bindMethods","play","addEventListeners","pause","removeEventListeners","set","remove","sceneEl","el","canvasEl","canvas","addEventListener","onTouchStart","onTouchEnd","bind","removeEventListener","isVelocityActive","data","isMoving","getVelocityDelta","z","clone","e","preventDefault","Driver","__webpack_require__","NetworkDriver","Error","prototype","constructor","document","documentElement","Particle","Shape","Vec3","call","type","types","PARTICLE","calculateLocalInertia","mass","target","volume","updateBoundingSphereRadius","boundingSphereRadius","calculateWorldAABB","pos","quat","min","max","copy","TupleDictionary","keys","get","i","j","temp","value","key","push","reset","length","pop","it","NUM_POINTS","extremes","dcur","v0","v1","v2","v3","N","D","ab","ac","suba","subb","normal","diff","subaA","subaB","subC","faces","faceStack","process","points","cull","shift","norm","ca","ba","a","b","c","subVectors","crossVectors","normalize","getNormal","face","undefined","p0","p1","p2","assignPoints","pointset","dots","sort","aItem","bItem","x","dot","index","visiblePoints","splice","currentFace","visibleFaces","apex","indexOf","compareFace","nextIndex","hasOneVisibleFace","perimeter","edgeIndex","allPoints","concat","isSharedEdge","cEdgeIndex","f","l","distSqPointSegment","bc","geometry","vertices","slice","y","distanceToSquared","Math","abs","v0Index","v1Index","v2Index","v3Index","tetrahedron","sign","reverse","pointsCloned","ll","Face3","normalsNeedUpdate","abstractMethod","step","destroy","addBody","removeBody","applyBodyMethod","updateBodyProperties","addMaterial","addContactMaterial","addConstraint","removeConstraint","getContacts","JacobianElement","spatial","rotational","multiplyElement","element","multiplyVectors","bundleFn","arguments","sources","cache","stringify","JSON","fn","options","wkey","cacheKeys","Object","exp","floor","pow","random","toString","wcache","skey","scache","workerSources","resolveSources","depPath","depKey","src","map","join","URL","window","webkitURL","mozURL","msURL","blob","Blob","bare","workerUrl","createObjectURL","worker","Worker","objectURL","Trimesh","Transform","AABB","Octree","indices","TRIMESH","Float32Array","Int16Array","normals","aabb","edges","scale","tree","updateEdges","updateNormals","updateAABB","updateTree","computeNormals_n","lowerBound","upperBound","triangleAABB","i3","_getUnscaledVertex","setFromPoints","insert","removeEmptyNodes","unscaledAABB","getTrianglesInAABB","result","isx","isy","isz","u","aabbQuery","setScale","wasUniform","isUniform","n","getVertex","va","vb","vc","computeNormal","add","indexA","indexB","split","parseInt","getEdgeVertex","firstOrSecond","vertexStore","vertexIndex","getEdgeVector_va","getEdgeVector_vb","getEdgeVector","vectorStore","vsub","cb","cross","isZero","out","getWorldVertex","pointToWorldFrame","getTriangleVertices","cli_aabb","computeLocalAABB","computeLocalAABB_worldVert","v","max2","norm2","sqrt","calculateWorldAABB_frame","calculateWorldAABB_aabb","frame","position","quaternion","toWorldFrame","PI","createTorus","radius","tube","radialSegments","tubularSegments","arc","cos","sin","d","BinaryHeap","[object Object]","scoreFunction","content","sinkDown","end","bubbleUp","node","parentN","parent","elemScore","child2N","child1N","child1Score","swap","child1","child2","child2Score","TypeError","ArrayCollisionMatrix","matrix","setNumObjects","redefine","safe","FBXLoader","crossorigin","model","update","loader","setCrossOrigin","load","setObject3D","emit","format","removeObject3D","ObjectLoader","object","traverse","o","SkinnedMesh","material","skinning","bones","EPS","mode","oneOf","animateSpeed","active","checkpoint","isNavMeshConstrained","offset","targetPosition","setCheckpoint","sync","distanceTo","setAttribute","components","updateNavLocation","getVelocity","setLength","getAttribute","object3D","getWorldPosition","getOffset","sub","registerPrimitive","defaultComponents","primitive","width","height","rotation","repeat","mappings","SPHSystem","particles","density","smoothingRadius","speedOfSound","viscosity","eps","pressures","densities","neighbors","particle","idx","SPHSystem_getNeighbors_dist","getNeighbors","id","R2","dist","p","SPHSystem_update_dist","SPHSystem_update_a_pressure","SPHSystem_update_a_visc","SPHSystem_update_gradW","SPHSystem_update_r_vec","SPHSystem_update_u","cs","numNeighbors","sum","len","weight","w","a_pressure","a_visc","gradW","r_vec","Pij","nabla","neighbor","r","gradw","mult","vadd","velocity","nablaw","force","h","rVec","resultVec","Vec3Pool","Pool","constructObject","MeshNormalMaterial","flatShading","applyMaterial","isMesh","utils","Channel","portals","left","right","pts","portalApex","portalLeft","portalRight","apexIndex","leftIndex","rightIndex","triarea2","vequal","path","vg","defaultHexGrid","Primitive","hexgrid","Component","dependencies","fetch","then","response","json","addMesh","grid","HexGrid","fromJSON","board","Board","generateTilemap","group","materialComponent","anObject","aFunction","SPECIES","O","S","C","EventTarget","listener","_listeners","listeners","hasEventListener","hasAnyEventListener","dispatchEvent","event","listenerArray","Sphere","Number","SPHERE","I","axes","ax","size","cellSize","extrudeSettings","amount","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","autogenerated","cells","q","s","walkable","userData","RotationalEquation","Equation","bodyA","bodyB","maxForce","axisA","axisB","maxAngle","tmpVec1","tmpVec2","computeB","ni","nj","nixnj","njxni","GA","jacobianElementA","GB","jacobianElementB","g","GW","computeGW","GiMf","computeGiMf","B","FrictionEquation","slipForce","ri","rj","t","FrictionEquation_computeB_temp1","FrictionEquation_computeB_temp2","bi","bj","rixt","rjxt","negate","getScriptId","Date","now","ceil","createScript","url","script","createElement","async","removeScript","getElementById","parentNode","removeChild","appendScript","firstScript","getElementsByTagName","insertBefore","fetchScriptInternal","Promise","resolve","reject","timeout","scriptId","timeoutId","setTimeout","disableTimeout","clearTimeout","ok","fetchScript","settings","OctreeNode","root","children","maxDepth","elementData","level","nodeData","contains","subdivided","subdivide","halfDiagonal","child","queue","overlaps","Array","apply","tmpAABB","rayQuery","ray","treeTransform","getAABB","toLocalFrame","Constructor","name","forbiddenField","ACCEL_G","EASING","on","playerHeight","maxJumps","distance","debug","numJumps","beginJump","events","bindings","collide","onCollide","hasOwnProperty","initialVelocity","webworkifyDebug","targetA","targetB","setTarget","postMessage","msg","Ray","Quaternion","RaycastResult","from","to","_direction","precision","checkCollisionResponse","skipBackfaces","collisionFilterMask","collisionFilterGroup","ANY","hasHit","callback","CLOSEST","ALL","tmpArray","intersectWorld","world","_updateDirection","broadphase","intersectBodies","pointInTriangle","dot00","dot01","dot02","dot11","dot12","intersectBody_xi","intersectBody_qi","intersectBody","body","collisionResponse","xi","qi","shapes","shape","shapeOrientations","vmult","shapeOffsets","intersectShape","_shouldStop","bodies","distanceFromIntersection","intersectMethod","intersectPoint","intersectBox","reportedShape","intersectConvex","convexPolyhedronRepresentation","BOX","intersectPlane","direction","worldNormal","planeToFrom","planeToTo","n_dot_dir","planePointToFrom","dir_scaled_with_t","hitPointWorld","reportIntersection","PLANE","intersectConvexOptions","faceList","worldPillarOffset","intersectHeightfield_localRay","intersectHeightfield_index","intersectHeightfield","elementSize","localRay","pointToLocalFrame","iMinX","iMinY","iMaxX","iMaxY","getIndexOfPosition","getAabbAtIndex","overlapsRay","getConvexTrianglePillar","pillarOffset","pillarConvex","HEIGHTFIELD","Ray_intersectSphere_intersectionPoint","Ray_intersectSphere_normal","intersectSphere","delta","intersectionPoint","lerp","d1","d2","intersectConvex_normal","intersectConvex_vector","vector","faceNormals","fromToDistance","Nfaces","fi","faceNormal","scalar","CONVEXPOLYHEDRON","intersectTrimesh_normal","intersectTrimesh_localDirection","intersectTrimesh_localFrom","intersectTrimesh_localTo","intersectTrimesh_worldNormal","intersectTrimesh_worldIntersectPoint","intersectTrimesh_triangles","intersectTrimesh_treeTransform","intersectTrimesh","mesh","triangles","localDirection","localFrom","localTo","worldIntersectPoint","vectorToLocalFrame","fromToDistanceSquared","distanceSquared","trianglesIndex","squaredDistance","vectorToWorldFrame","hitFaceIndex","intersect","polygonId","Builder","navMesh","_buildNavigationMesh","zone","forEach","roundNumber","groups","_buildPolygonGroups","findPolygonIndex","newGroup","neighbours","_getSharedVerticesInOrder","centroid","vertexIds","computeCentroids","mergeVertices","_buildPolygonsFromGeometry","navigationMesh","polygons","polygonGroups","groupCount","spreadGroupId","polygon","neighbour","matches","array_intersect","faceVertexUvs","_buildPolygonNeighbours","aList","bList","sharedVertices","vId","includes","assign","FACE_1","FACE_2","FACE_3","FACE_4","L_SHOULDER_1","R_SHOULDER_1","L_SHOULDER_2","R_SHOULDER_2","SELECT","START","DPAD_UP","DPAD_DOWN","DPAD_LEFT","DPAD_RIGHT","VENDOR","PointToPointConstraint","Constraint","ContactEquation","pivotA","pivotB","equationX","equationY","equationZ","equations","minForce","AStar","Path","zones","buildZone","zoneID","closestNodeGroup","measuredDistance","groupID","nearPosition","nearRange","candidates","sample","checkPolygon","nodes","closestNode","closestDistance","Infinity","isVectorInPolygon","startPosition","getClosestNode","farthestNode","paths","search","getPortalFromTo","channel","nextPolygon","stringPull","clampStep","point","plane","Plane","triangle","Triangle","closestPoint","start","endTarget","nodeQueue","nodeDepth","setFromCoplanarPoints","projectPoint","currentNode","closestPointToPoint","depth","webworkify","Event","protocol","ID","WorkerDriver","fps","engine","interpolate","interpBufferSize","interpolationBufferSize","contacts","frameDelay","frameBuffer","_onMessage","worldConfig","INIT","prevFrame","nextFrame","timestamp","performance","mix","deserializeInterpBodyUpdate","terminate","STEP","deserializeBodyUpdate","assignID","ADD_BODY","serializeBody","REMOVE_BODY","bodyID","methodName","args","APPLY_BODY_METHOD","toArray","UPDATE_BODY_PROPERTIES","getMaterial","materialConfig","ADD_MATERIAL","matName1","matName2","contactMaterialConfig","ADD_CONTACT_MATERIAL","materialName1","materialName2","constraint","ADD_CONSTRAINT","serializeConstraint","REMOVE_CONSTRAINT","constraintID","message","deserializeContact","GridBroadphase","Broadphase","aabbMin","aabbMax","nx","ny","nz","nbins","bins","binLengths","GridBroadphase_collisionPairs_d","collisionPairs","pairs1","pairs2","numObjects","xstep","ystep","zstep","xmax","ymax","zmax","xmin","ymin","zmin","xmult","ymult","zmult","binsizeX","binsizeY","binsizeZ","binRadius","COMPOUND","Nbins","addBoxToBins","x0","y0","z0","x1","y1","z1","xoff0","yoff0","zoff0","xoff1","yoff1","zoff1","xoff","yoff","zoff","si","worldNormalNeedsUpdate","computeWorldNormal","planeNormal","xreset","yreset","zreset","yi","zi","aabbNeedsUpdate","computeAABB","binLength","bin","needBroadphaseCollision","intersectionTest","makePairsUnique","GamepadButton","GamepadButtonEvent","JOYSTICK_EPS","controller","camera","rotationSensitivity","scene","prevTime","buttons","pitch","Object3D","degToRad","yaw","addBehavior","tick","dt","updateButtonState","updateRotation","isConnected","dpad","getDpad","joystick0","getJoystick","inputX","inputY","isRotationActive","joystick1","lookControls","hasLookControls","pitchObject","yawObject","lookVector","multiplyScalar","gamepad","getGamepad","pressed","localGamepad","navigator","getGamepads","proxyControls","proxyGamepad","getButton","getAxis","Vector2","connected","getID","detail","computeVertexNormals","segments","closed","console","error","curve","CatmullRomCurve3","TubeGeometry","MeshPhongMaterial","Mesh","system","systems","nav","hasLoadedNavMesh","loadNavMesh","getObject3D","navMeshGeometry","isBufferGeometry","Geometry","fromBufferGeometry","updateMatrixWorld","applyMatrix","matrixWorld","setNavMeshGeometry","GRAVITY","MAX_INTERVAL","ITERATIONS","CONTACT_MATERIAL","friction","restitution","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRegularization","pathfinder","ZONE","registerSystem","agents","Set","setZoneData","createZone","agent","getNavMesh","addAgent","ctrl","removeAgent","delete","getPath","findPath","getGroup","getNode","Mat3","elements","identity","setZero","setTrace","vec3","getTrace","smult","mmult","m","k","solve","nr","nc","eqns","np","kp","multiplier","isNaN","row","column","source","sep","setRotationFromQuaternion","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","transpose","Mt","M","destination","speed","raycaster","Raycaster","vDest","vDelta","vNext","warn","vCurrent","vWaypoint","gazeTarget","lookAt","origin","intersections","intersectObject","ConvexPolyhedron","Utils","Heightfield","defaults","maxValue","minValue","updateMinValue","updateMaxValue","cacheEnabled","_cachedPillars","setHeightValueAtIndex","clearCachedConvexTrianglePillar","getRectMinMax","clamp","getHeightAt_idx","getHeightAt_weights","getHeightAt_a","getHeightAt_b","getHeightAt_c","getTriangleAt","edgeClamp","lowerDist2","upperDist2","upper","getTriangle","getNormalAt_a","getNormalAt_b","getNormalAt_c","getNormalAt_e0","getNormalAt_e1","barycentricWeights","ay","bx","by","cx","cy","getNormalAt","e0","e1","getHeightAt","getCacheConvexTrianglePillarKey","getUpperTriangle","getCachedConvexTrianglePillar","setCachedConvexTrianglePillar","convex","offsetResult","verts","computeNormals","computeEdges","MAX_VALUE","setHeightsFromImage","image","context","getContext","drawImage","imageData","getImageData","unshift","defer","port","ctx","invoke","html","cel","global","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","ONREADYSTATECHANGE","run","Function","nextTick","port2","port1","onmessage","importScripts","appendChild","clear","userHeight","linearDamping","enableSlopes","physics","addComponent","CANNON","Body","fixedRotation","addShape","hasAttribute","removeComponent","beforeStep","normalizedVelocity","currentSurfaceNormal","groundNormal","groundBody","didCollide","groundHeight","maxInterval","contact","projectOnPlane","raycastToGround","driver","gravity","groundVelocity","hitNormal","vFrom","vTo","hitNormalWorld","LoaderUtils","extractUrlBase","Loader","decodeText","array","TextDecoder","decode","parseConnections","FBXTree","connectionMap","Map","rawConnections","Connections","connections","rawConnection","fromID","toID","relationship","has","parents","parentRelationship","childRelationship","parseImages","images","blobs","Objects","videoNodes","Video","nodeID","videoNode","Filename","arrayBufferContent","Content","ArrayBuffer","byteLength","base64Content","parseImage","filename","fileName","RelativeFilename","extension","lastIndexOf","toLowerCase","Uint8Array","parseTextures","textureMap","textureNodes","Texture","texture","parseTexture","textureNode","loadTexture","attrName","wrapModeU","WrapModeU","wrapModeV","WrapModeV","valueU","valueV","wrapS","RepeatWrapping","ClampToEdgeWrapping","wrapT","values","Scaling","currentPath","setPath","parseMaterials","materialMap","materialNodes","Material","parseMaterial","materialNode","ShadingModel","parameters","parseParameters","MeshLambertMaterial","color","setValues","properties","BumpFactor","bumpScale","Diffuse","Color","fromArray","DisplacementFactor","displacementScale","ReflectionFactor","reflectivity","Specular","specular","Shininess","shininess","Emissive","emissive","EmissiveFactor","emissiveIntensity","parseFloat","Opacity","opacity","transparent","bumpMap","getTexture","displacementMap","emissiveMap","normalMap","envMap","mapping","EquirectangularReflectionMapping","specularMap","alphaMap","LayeredTexture","parseDeformers","skeletons","DeformerNodes","Deformer","deformerNode","attrType","relationships","skeleton","parseSkeleton","geometryID","deformerNodes","rawBones","subDeformerNode","rawBone","weights","transform","Matrix4","transformLink","TransformLink","linkMode","Mode","Indexes","Weights","parseGeometries","geometryMap","geometryNodes","geo","parseGeometry","geometryNode","parseMeshGeometry","parseNurbsGeometry","modelNodes","Model","reduce","preTransform","modelNode","GeometricRotation","makeRotationFromEuler","Euler","setPosition","GeometricTranslation","genGeometry","vertexPositions","Vertices","vertexIndices","PolygonVertexIndex","vertexBuffer","normalBuffer","colorsBuffer","uvsBuffer","materialIndexBuffer","vertexWeightsBuffer","weightsIndicesBuffer","LayerElementColor","colorInfo","getColors","LayerElementMaterial","materialInfo","getMaterials","LayerElementNormal","normalInfo","getNormals","LayerElementUV","uvInfo","getUVs","weightTable","polygonIndex","faceLength","displayedWeightsWarning","vertexPositionIndexes","faceColors","faceUVs","faceWeights","faceWeightIndices","polygonVertexIndex","endOfFace","weightIndices","getData","wt","wIndex","Weight","weightIndex","currentWeight","currentIndex","comparedWeight","comparedWeightIndex","comparedWeightArray","tmp","mappingType","materialIndex","uv","BufferGeometry","positionAttribute","Float32BufferAttribute","applyToBufferAttribute","addAttribute","FBX_Deformer","normalAttribute","normalMatrix","Matrix3","getNormalMatrix","uvBuffer","prevMaterialIndex","startIndex","addGroup","lastGroup","lastIndex","count","NormalNode","MappingInformationType","referenceType","ReferenceInformationType","buffer","Normals","indexBuffer","NormalIndex","NormalsIndex","dataSize","UVNode","UV","UVIndex","ColorNode","Colors","ColorIndex","MaterialNode","Materials","materialIndices","manager","DefaultLoadingManager","onLoad","onProgress","onError","self","resourceDirectory","FileLoader","setResponseType","parse","itemError","FBXBuffer","isFbxFormatBinary","BinaryParser","FBXText","convertArrayBufferToString","isFbxFormatASCII","getFbxVersion","TextParser","textures","TextureLoader","materials","sceneGraph","parseScene","dataArray","GetData","ByPolygonVertex","Direct","infoObject","IndexToDirect","ByPolygon","ByVertice","AllSame","NURBSCurve","order","Order","startKnot","endKnot","degree","knots","KnotVector","controlPoints","pointsValues","Points","Vector4","Form","getPoints","positions","vertex","BufferAttribute","Group","modelMap","parseModels","setLookAtProperties","parentConnections","connection","bindSkeleton","addAnimations","createAmbientLight","buildSkeleton","createCamera","createLight","createMesh","createCurve","PropertyBinding","sanitizeNodeName","setModelTransforms","bone","subBone","Bone","cameraAttribute","attr","NodeAttribute","CameraProjectionType","nearClippingPlane","NearPlane","farClippingPlane","FarPlane","innerWidth","innerHeight","AspectWidth","AspectHeight","aspect","fov","FieldOfView","focalLength","FocalLength","PerspectiveCamera","setFocalLength","OrthographicCamera","lightAttribute","LightType","intensity","Intensity","CastLightOnObject","FarAttenuationEnd","EnableFarAttenuation","decay","PointLight","DirectionalLight","angle","InnerAngle","penumbra","OuterAngle","SpotLight","CastShadows","castShadow","attributes","vertexColors","VertexColors","LineBasicMaterial","linewidth","Line","GlobalSettings","ambientColor","AmbientColor","AmbientLight","lookAtTarget","Lcl_Translation","enums","RotationOrder","Lcl_Rotation","Lcl_Scaling","PreRotation","preRotations","setFromEuler","currentRotation","multiply","setFromQuaternion","bindMatrices","parsePoseNodes","geoID","geoRelationships","geoConnParent","Skeleton","BindPoseNode","Pose","poseNodes","PoseNode","isArray","poseNode","Node","Matrix","parseAnimations","AnimationCurve","curveNodesMap","parseAnimationCurveNodes","parseAnimationCurves","layersMap","parseAnimationLayers","rawClips","parseAnimStacks","rawCurveNodes","AnimationCurveNode","rawCurveNode","match","curveNode","curves","rawCurves","animationCurve","times","KeyTime","convertFBXTimeToSeconds","KeyValueFloat","animationCurveID","animationCurveRelationship","axis","rawLayers","AnimationLayer","layerCurveNodes","modelID","rawModel","modelName","initialPosition","initialRotation","initialScale","rawStacks","AnimationStack","layer","animations","rawClip","clip","addClip","tracks","rawTracks","generateTracks","AnimationClip","T","positionTrack","generateVectorTrack","R","rotationTrack","generateRotationTrack","scaleTrack","initialValue","getTimesForAllAxes","getKeyframeTrackValues","VectorKeyframeTrack","euler","quaternionValues","premultiply","QuaternionKeyframeTrack","prevValue","xIndex","yIndex","zIndex","time","xValue","yValue","zValue","filter","elem","BinaryReader","littleEndian","dv","DataView","CORRECT","text","cursor","read","num","versionRegExp","version","parseNumberArray","val","append","getPrevNode","nodeStack","currentIndent","getCurrentNode","getCurrentProp","currentProp","pushStack","popStack","setCurrentProp","currentPropName","allNodes","line","matchComment","matchEmpty","matchBeginning","matchProperty","matchEnd","parseNodeBegin","parseNodeProperty","parseNodePropertyContinued","property","nodeName","trim","replace","nodeAttrs","attrs","parseNodeAttr","contentLine","propName","propValue","parentName","connProps","rest","parseNodeSpecialProperty","props","prop","innerPropName","innerPropType1","innerPropType2","innerPropFlag","innerPropValue","type2","flag","reader","skip","getUint32","log","endOfContent","parseNode","endOffset","getUint64","numProperties","nameLen","getUint8","getString","propertyList","parseProperty","singleProperty","subNode","parseSubNode","getBoolean","getFloat64","getFloat32","getInt32","getInt64","getArrayBuffer","getInt16","arrayLength","encoding","compressedLength","getBooleanArray","getFloat64Array","getFloat32Array","getInt32Array","getInt64Array","Zlib","inflate","Inflate","reader2","decompress","low","high","nullByte","iterator","entries","ret","objects","state","watch","observer","els","collisions","handleHit","handleHitEnd","MutationObserver","observe","childList","subtree","disconnect","objectEls","querySelectorAll","meshPosition","colliderScale","distanceMap","colliderRadius","box","extent","isEntity","Box3","setFromObject","getSize","getCenter","scaleFactor","scaleVec","getWorldScale","targetEl","addState","removeState","shape2mesh","obj","sphere_geometry","SphereGeometry","currentMaterial","particleGeo","particleMaterial","particleSize","PlaneGeometry","submesh","ground","receiveShadow","box_geometry","BoxGeometry","halfExtents","computeBoundingSphere","computeFaceNormals","cof","TAG","ARG","tryGet","callee","setSpookParams","stiffness","relaxation","timeStep","Gq","computeGq","xj","vi","vj","wi","angularVelocity","wj","computeGWlambda","vlambda","wlambda","iMfi","iMfj","invIi_vmult_taui","invIj_vmult_tauj","ti","torque","fj","tj","invMassi","invMassSolve","invMassj","invInertiaWorldSolve","computeGiMGt","invIi","invIj","addToWlambda_temp","addToWlambda","deltalambda","addScaledVector","computeC","isObject","is","classof","ITERATOR","Iterators","getIteratorMethod","nativeKeyboardEvent","KeyboardEvent","DOM_KEY_LOCATION_STANDARD","DOM_KEY_LOCATION_LEFT","DOM_KEY_LOCATION_RIGHT","DOM_KEY_LOCATION_NUMPAD","STANDARD","LEFT","RIGHT","NUMPAD","ss","String","os","platform","userAgent","browser","vendor","browser_os","mergeIf","baseTable","select","table","keyCode","remap","item","keyCodeToInfoTable","3","code","6","8","9","12","13","16","17","18","19","20","21","22","23","24","25","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","keyCap","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","location","92","93","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","144","145","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","186","187","188","189","190","191","192","219","220","221","222","226","229","246","247","248","249","250","251","254","59","61","10","keyIdentifierTable","locationTable","224","codeToKeyTable","ShiftLeft","ShiftRight","ControlLeft","ControlRight","AltLeft","AltRight","OSLeft","OSRight","NumpadEnter","Space","Digit0","shiftKey","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadMultiply","NumpadAdd","NumpadComma","NumpadSubtract","NumpadDecimal","NumpadDivide","Semicolon","Equal","Comma","Minus","Period","Slash","Backquote","BracketLeft","Backslash","BracketRight","Quote","IntlBackslash","keyFixTable","Esc","Nonconvert","Left","Up","Right","Down","Del","Menu","MediaNextTrack","MediaPreviousTrack","SelectMedia","HalfWidth","FullWidth","RomanCharacters","Crsel","Exsel","Zoom","codeTable","nativeLocation","_","keyInfoForEvent","which","keyInfo","keyLocation","keyIdentifier","entry","queryKeyCap","locale","define","defineProperty","desc","getOwnPropertyDescriptor","identifyKey","ZERO","UNIT_X","UNIT_Y","UNIT_Z","vx","vy","vz","crossmat","invN","unit","ninv","lengthSquared","px","py","pz","vmul","Vec3_tangents_n","Vec3_tangents_randVec","tangents","t1","t2","inorm","randVec","almostEquals","almostZero","antip_neg","isAntiparallelTo","HingeConstraint","RotationalMotorEquation","r1","rotationalEquation1","r2","rotationalEquation2","motor","motorEquation","enableMotor","disableMotor","setMotorSpeed","targetVelocity","setMotorMaxForce","HingeConstraint_update_tmpVec1","HingeConstraint_update_tmpVec2","worldAxisA","worldAxisB","store","uid","Symbol","USE_SYMBOL","$exports","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","existing","beforeCreate","__webpack_exports__","hide","SRC","TO_STRING","$toString","TPL","inspectSource","isFunction","emptyObject","freeze","isUndef","isDef","isTrue","isFalse","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","isFinite","toNumber","makeMap","str","expectsLowerCase","create","list","isReservedAttribute","arr","hasOwn","cached","hit","camelizeRE","camelize","toUpperCase","capitalize","charAt","hyphenateRE","hyphenate","polyfillBind","boundFn","_length","nativeBind","extend","_from","toObject","res","noop","no","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","charCodeAt","def","enumerable","writable","configurable","bailRE","parsePath","test","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","weexPlatform","UA","isIE","isIE9","isEdge","isIOS","nativeWatch","supportsPassive","opts","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Reflect","ownKeys","Dep","subs","addSub","removeSub","depend","addDep","notify","targetStack","pushTarget","_target","popTarget","VNode","tag","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","defineProperties","createEmptyVNode","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","method","original","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","__proto__","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","getter","setter","childOb","dependArray","newVal","del","items","strats","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","methods","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","_props","getType","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","withMacroTask","_withTask","_resolve","seenObjects","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","base","__esModule","toStringTag","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","forceRender","$forceUpdate","reason","component","delay","getFirstComponentChild","initEvents","_events","_hasHookEvent","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","provideKey","provideDefault","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","componentVNodeHooks","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","applyNS","registerDeepBindings","style","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","RegExp","KeepAlive","include","exclude","created","destroyed","mounted","ref$1","builtInComponents","initGlobalAPI","configDef","util","acceptValue","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","createElementNS","namespace","createTextNode","createComment","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","offsetHeight","moved","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","dy","top","platformComponents","applyMixin","vuexInit","$store","devtoolHook","devtoolPlugin","_devtoolHook","targetState","replaceState","subscribe","mutation","forEachValue","isPromise","Module","rawModule","runtime","_children","_rawModule","rawState","prototypeAccessors$1","namespaced","addChild","getChild","actions","mutations","getters","forEachChild","forEachGetter","forEachAction","forEachMutation","ModuleCollection","rawRootModule","register","targetModule","newModule","getNamespace","rawChildModule","unregister","Store","plugins","strict","_committing","_actions","_actionSubscribers","_mutations","_wrappedGetters","_modules","_modulesNamespaceMap","_subscribers","_watcherVM","dispatch","commit","payload","installModule","resetStoreVM","genericSubscribe","resetStore","hot","oldVm","_vm","wrappedGetters","$$state","enableStrictMode","_withCommit","rootState","parentState","getNestedState","moduleName","local","makeLocalContext","namespacedType","registerMutation","action","registerAction","registerGetter","noNamespace","_type","_payload","_options","unifyObjectStyle","makeLocalGetters","gettersProxy","splitPos","localType","rootGetters","catch","rawGetter","_Vue","all","subscribeAction","registerModule","preserveState","unregisterModule","hotUpdate","newOptions","committing","mapState","normalizeNamespace","states","normalizeMap","getModuleByNamespace","vuex","mapMutations","mapGetters","mapActions","createNamespacedHelpers","helper","index_esm","ArrayProto","that","un","dP","createDesc","idCounter","ObjectCollisionMatrix","World","GSSolver","Narrowphase","OverlapKeeper","ContactMaterial","NaiveBroadphase","allowSleep","frictionEquations","quatNormalizeSkip","quatNormalizeFast","stepnumber","default_dt","nextId","solver","constraints","narrowphase","collisionMatrix","collisionMatrixPrevious","bodyOverlapKeeper","shapeOverlapKeeper","contactmaterials","contactMaterialTable","defaultMaterial","defaultContactMaterial","doProfiling","profile","makeContactConstraints","integrate","accumulator","subsystems","addBodyEvent","removeBodyEvent","idToBodyMap","setWorld","tmpRay","getContactMaterial","m1","m2","collisionMatrixTick","initPosition","initVelocity","timeLastSleepy","initAngularVelocity","initQuaternion","rayTest","raycastClosest","raycastAll","raycastAny","getBodyById","getShapeById","bl","sl","cmat","nowOffset","timing","navigationStart","timeSinceLastCalled","maxSubSteps","internalStep","substeps","previousPosition","interpolatedPosition","previousQuaternion","slerp","interpolatedQuaternion","World_step_postStepEvent","World_step_preStepEvent","World_step_collideEvent","COLLIDE_EVENT_NAME","World_step_oldContacts","World_step_frictionEquationPool","World_step_p1","World_step_p2","profilingStart","DYNAMIC","frictionEquationPool","gx","gy","gz","Nsubsystems","Nconstraints","collideConnected","oldcontacts","NoldContacts","NoldFrictionEquations","addEquation","ncontacts","cm","sj","sleepState","SLEEPING","AWAKE","STATIC","speedSquaredB","speedLimitSquaredB","sleepSpeedLimit","_wakeUpAfterNarrowphase","speedSquaredA","speedLimitSquaredA","emitContactEvents","wakeUp","Neq","eq","removeAllEquations","ld","av","ad","angularDamping","preStep","quatNormalize","clearForces","postStep","sleepTick","additions","removals","beginContactEvent","endContactEvent","beginShapeContactEvent","shapeA","shapeB","endShapeContactEvent","hasBeginContact","hasEndContact","getDiff","hasBeginShapeContact","hasEndShapeContact","Solver","iterations","tolerance","GSSolver_solve_lambda","GSSolver_solve_invCs","GSSolver_solve_Bs","invC","deltalambdaTot","GWlambda","lambdaj","iter","maxIter","tolSquared","Nbodies","updateSolveMassProperties","invCs","Bs","lambda","linearFactor","angularFactor","invDt","LoopMode","LoopOnce","LoopRepeat","pingpong","LoopPingPong","wildcardToRegExp","regExpEscape","crossFadeDuration","repetitions","mixer","activeActions","AnimationMixer","loopDelta","stopAllAction","previousData","stopAction","playAction","fadeOut","stop","clips","re","clipAction","setDuration","setLoop","fadeIn","fl","divideScalar","decimals","newnumber","toFixed","vID","clockwiseMostSharedVertex","counterClockwiseMostSharedVertex","cList","newVertexIds","nextVertexId","previousVertexId","nextVertex","previousVertex","angleTo","goodNeighbours","setPolygonCentroid","results","dz","poly","pt","lowestPoint","highestPoint","polygonVertices","isPointInPoly","az","bz","shortest","nShortest","nOthers","Box","ConeTwistConstraint","Cylinder","DistanceConstraint","LockConstraint","RaycastVehicle","RigidVehicle","SAPBroadphase","SplitSolver","Spring","registerAll","bitmap","WheelInfo","chassisConnectionPointLocal","chassisConnectionPointWorld","directionLocal","directionWorld","axleLocal","axleWorld","suspensionRestLength","suspensionMaxLength","suspensionStiffness","dampingCompression","dampingRelaxation","frictionSlip","steering","deltaRotation","rollInfluence","maxSuspensionForce","isFrontWheel","clippedInvContactDotSuspension","suspensionRelativeVelocity","suspensionForce","skidInfo","suspensionLength","maxSuspensionTravel","useCustomSlidingRotationalSpeed","customSlidingRotationalSpeed","sliding","engineForce","brake","sideImpulse","forwardImpulse","raycastResult","worldTransform","isInContact","chassis_velocity_at_contactPoint","relpos","updateWheel","chassis","project","getVelocityAtWorldPoint","projVel","inv","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","iterFn","next","done","mathUtils","nextID","serializeShape","shapeMsg","serializeVec3","CYLINDER","radiusTop","radiusBottom","numSegments","deserializeShape","deserializeVec3","serializeQuaternion","deserializeQuaternion","prefix","sleepTimeLimit","updateMassProperties","message1","message2","weight1","weight2","deserializeBody","deserializeConstraint","TypedConstraint","serializeContact","bottomface","topface","theta","thetaN","removeEquation","eqs","wheelBodies","coordinateSystem","chassisBody","chassisShape","wheelAxes","wheelForces","addWheel","wheelBody","worldPosition","hingeConstraint","setSteeringValue","wheelIndex","motorTargetVelocity","setWheelForce","applyWheelForce","bodyTorque","addToWorld","removeFromWorld","worldAxis","getWheelSpeed","graph","cost","visited","openHeap","heap","curr","cleanUp","il","gScore","beenVisited","heuristic","rescoreElement","pos1","pos2","subsolver","nodePool","createNode","SplitSolver_solve_nodes","SplitSolver_solve_eqs","SplitSolver_solve_dummyWorld","getUnvisitedNode","Nnodes","bfs","visitFunc","bds","Neqs","sortById","dummyWorld","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","$export","anInstance","forOf","speciesConstructor","task","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","promise","FakePromise","exec","PromiseRejectionEvent","isThenable","isReject","chain","reaction","exited","fail","domain","_h","onHandleUnhandled","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","G","W","F","capability","$$reject","remaining","$index","alreadyCalled","race","core","SHARED","copyright","ensureMaterialArray","applyEnvMap","materialNames","meshMaterials","needsUpdate","enableBackground","CubeTextureLoader","object3dsetHandler","addedMaterialNames","removedMaterialNames","maintainedMaterialNames","setBackground","background","quickhull","PI_2","Type","HULL","MESH","mesh2shape","createBoundingBoxShape","createBoundingCylinderShape","createBoundingSphereShape","createConvexPolyhedron","getGeometry","createTrimeshShape","metadata","createBoxShape","createCylinderShape","createPlaneShape","createSphereShape","getVertices","computeBoundingBox","boundingBox","localPosition","lengthSq","translate","hull","orientation","majorAxis","cylinderAxis","minorAxes","sphereRadius","boundingSphere","meshes","getMeshes","combined","itemSize","decompose","tmpGeom","merge","dispose","fromGeometry","ContactEquation_computeB_temp1","ContactEquation_computeB_temp2","ContactEquation_computeB_temp3","rixn","rjxn","penetrationVec","ePlusOne","ContactEquation_getImpactVelocityAlongNormal_vi","ContactEquation_getImpactVelocityAlongNormal_vj","ContactEquation_getImpactVelocityAlongNormal_xi","ContactEquation_getImpactVelocityAlongNormal_xj","ContactEquation_getImpactVelocityAlongNormal_relVel","getImpactVelocityAlongNormal","relVel","LocalDriver","contactMaterial","solverIterations","deltaMS","mat1","mat2","PROTOTYPE","own","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","P","IS_BIND","expProto","U","SAFE_CLOSING","riter","skipClosing","contactPointPool","frictionResult","v3pool","currentContactMaterial","enableFrictionReduction","createContactEquation","overrideShapeA","overrideShapeB","matA","matB","createFrictionEquationsFromContact","contactEquation","outArray","mug","reducedMass","invMass","pool","c1","c2","frictionEquationRelaxation","averageNormal","averageContactPointA","averageContactPointB","createFrictionFromAverage","numContacts","f1","f2","invNumContacts","tmpQuat1","tmpQuat2","frictionPool","qj","bodyContactMaterial","justTest","KINEMATIC","shapeContactMaterial","resolver","retval","boxBox","rsi","rsj","convexConvex","boxConvex","boxParticle","convexParticle","sphereSphere","planeTrimesh_normal","planeTrimesh_relpos","planeTrimesh_projected","planeTrimesh","planeShape","trimeshShape","planePos","trimeshPos","planeQuat","trimeshQuat","planeBody","trimeshBody","projected","sphereTrimesh_normal","sphereTrimesh_relpos","sphereTrimesh_v","sphereTrimesh_v2","sphereTrimesh_edgeVertexA","sphereTrimesh_edgeVertexB","sphereTrimesh_edgeVector","sphereTrimesh_edgeVectorUnit","sphereTrimesh_localSpherePos","sphereTrimesh_tmp","sphereTrimesh_va","sphereTrimesh_vb","sphereTrimesh_vc","sphereTrimesh_localSphereAABB","sphereTrimesh_triangles","sphereTrimesh","sphereShape","spherePos","sphereQuat","sphereBody","edgeVertexA","edgeVertexB","edgeVector","edgeVectorUnit","localSpherePos","localSphereAABB","radiusSquared","positionAlongEdgeB","positionAlongEdgeA","point_on_plane_to_sphere","plane_to_sphere_ortho","spherePlane","pointInPolygon_edge","pointInPolygon_edge_x_normal","pointInPolygon_vtp","pointInPolygon","positiveResult","edge","edge_x_normal","vertex_to_p","box_to_sphere","sphereBox_ns","sphereBox_ns1","sphereBox_ns2","sphereBox_sides","sphereBox_sphere_to_corner","sphereBox_side_ns","sphereBox_side_ns1","sphereBox_side_ns2","sphereBox","sides","getSideNormals","found","side_ns","side_ns1","side_ns2","side_h","side_penetrations","side_dot1","side_dot2","side_distance","nsides","ns1","ns2","h1","h2","dot1","dot2","sphere_to_corner","release","edgeTangent","edgeCenter","orthogonal","Nsides","orthonorm","tdist","ndist","convex_to_sphere","sphereConvex_edge","sphereConvex_edgeUnit","sphereConvex_sphereToCorner","sphereConvex_worldCorner","sphereConvex_worldNormal","sphereConvex_worldPoint","sphereConvex_worldSpherePointClosestToPlane","sphereConvex_penetrationVec","sphereConvex_sphereToWorldPoint","sphereConvex","worldCorner","nfaces","worldPoint","worldSpherePointClosestToPlane","penetration","worldPointToSphere","faceVerts","Nverts","worldVertex","penetrationVec2","penetrationSpherePoint","Nfaceverts","edgeUnit","v1_to_xi","xi_to_p","planeBox","planeConvex","planeConvex_v","planeConvex_normal","planeConvex_relpos","planeConvex_projected","convexShape","planePosition","convexPosition","convexQuat","convexBody","convexConvex_sepAxis","convexConvex_q","faceListA","faceListB","sepAxis","findSeparatingAxis","clipAgainstHull","particlePlane_normal","particlePlane_relpos","particlePlane_projected","planeParticle","particleSphere_normal","sphereParticle","cqj","convexParticle_local","convexParticle_penetratedFaceNormal","convexParticle_vertexToParticle","convexParticle_worldPenetrationVec","penetratedFaceIndex","penetratedFaceNormal","worldPenetrationVec","minPenetration","conjugate","pointIsInside","worldVerticesNeedsUpdate","computeWorldVertices","worldFaceNormalsNeedsUpdate","computeWorldFaceNormals","worldVertices","worldFaceNormals","numDetectedFaces","boxHeightfield","convexHeightfield","convexHeightfield_tmp1","convexHeightfield_tmp2","convexHeightfield_faceList","hfShape","convexPos","hfPos","hfQuat","hfBody","localConvexPos","minMax","intersecting","sphereHeightfield_tmp1","sphereHeightfield_tmp2","sphereHeightfield","numContactsBefore","uniqueAxes","uniqueEdges","computeEdges_tmpEdge","numVertices","getFaceNormal","cah_WorldNormal","posA","quatA","hullB","posB","quatB","separatingNormal","minDist","maxDist","WorldNormal","closestFaceB","dmax","worldVertsB1","polyB","worldb","clipFaceAgainstHull","fsa_faceANormalWS3","fsa_Worldnormal1","fsa_deltaC","fsa_worldEdge0","fsa_worldEdge1","fsa_Cross","faceANormalWS3","Worldnormal1","deltaC","worldEdge0","worldEdge1","Cross","dmin","hullA","testSepAxis","numFacesA","curPlaneTests","numFacesB","maxminA","maxminB","maxA","minA","maxB","minB","d0","cli_aabbmin","cli_aabbmax","getPlaneConstantOfFace","face_i","cfah_faceANormalWS","cfah_edge0","cfah_WorldEdge0","cfah_worldPlaneAnormal1","cfah_planeNormalWS1","cfah_worldA1","cfah_localPlaneNormal","cfah_planeNormalWS","faceANormalWS","edge0","WorldEdge0","worldPlaneAnormal1","planeNormalWS1","worldA1","localPlaneNormal","planeNormalWS","worldVertsB2","pVtxIn","pVtxOut","closestFaceA","polyA","connectedFaces","numVerticesA","otherFace","localPlaneEq","planeEqWS","clipFaceAgainstPlane","inVertices","outVertices","planeConstant","n_dot_first","n_dot_last","numVerts","firstVertex","lastVertex","newv","worldVerts","aabbmin","aabbmax","worldNormals","tempWorldVertex","minx","miny","minz","maxx","maxy","maxz","getAveragePointLocal","transformAllPoints","ConvexPolyhedron_pointIsInside","ConvexPolyhedron_vToP","ConvexPolyhedron_vToPointInside","pointInside","vToP","vToPointInside","project_localAxis","project_localOrigin","localAxis","localOrigin","vs","previous","unpackAndPush","getKey","al","keyA","keyB","ConeEquation","coneEquation","twistEquation","twistAngle","cone","twist","valueOf","if","NaN","hasLoaded","initBody","shouldUpdateWireframe","isLoaded","isPlaying","_play","shouldUpdateBody","createWireframe","syncToPhysics","wireframe","_pause","prevData","updateProperties","syncFromPhysics","LineSegments","EdgesGeometry","inverse","syncWireframe","applyQuaternion","updateMatrix","parentEl","isScene","getWorldQuaternion","q1","q2","worldToLocal","restLength","damping","localAnchorA","localAnchorB","worldAnchorA","setWorldAnchorA","worldAnchorB","setWorldAnchorB","getWorldAnchorA","getWorldAnchorB","applyForce_r","applyForce_r_unit","applyForce_u","applyForce_f","applyForce_worldAnchorA","applyForce_worldAnchorB","applyForce_ri","applyForce_rj","applyForce_ri_x_f","applyForce_rj_x_f","applyForce_tmp","applyForce","r_unit","ri_x_f","rj_x_f","rlen","tmpQuat","pointToLocal","localPoint","pointToWorld","localVector","worldVector","fire","__g","distanceEquation","halfDist","DESCRIPTORS","KEY","wakeUpBodies","enable","disable","initShape","bodyEl","bodyType","_findType","DEG2RAD","stat","__e","wheelInfos","indexRightAxis","indexForwardAxis","indexUpAxis","tmpVec4","tmpVec5","tmpVec6","wheel","applyEngineForce","setBrake","preStepCallback","updateVehicle","getVehicleAxisWorld","axisIndex","numWheels","updateWheelTransform","currentVehicleSpeedKmHour","forwardWorld","castRay","updateSuspension","impulse","applyImpulse","updateFriction","hitNormalWorldScaledWithProj","fwd","vel","proj","proj2","deltaTime","chassisMass","w_it","susp_length","current_length","length_diff","susp_damping","projected_rel_vel","castRay_rayvector","castRay_target","rayvector","updateWheelTransformWorld","raylen","oldState","groundObject","hitDistance","minSuspensionLength","maxSuspensionLength","denominator","up","steeringOrn","setFromAxisAngle","rotatingOrn","directions","getWheelTransformWorld","updateFriction_surfNormalWS_scaled_proj","updateFriction_axle","updateFriction_forwardWS","sideFrictionStiffness2","surfNormalWS_scaled_proj","forwardWS","axle","numWheelsOnGround","axlei","wheelTrans","surfNormalWS","resolveSingleBilateral","sideFactor","fwdFactor","rollingFriction","slipInfo","defaultRollingFrictionImpulse","maxImpulse","calcRollingFriction","factor","maximp","maximpSide","maximpSquared","impulseSquared","rel_pos","rel_pos2","sideImp","calcRollingFriction_vel1","calcRollingFriction_vel2","calcRollingFriction_vel","body0","body1","frictionPosWorld","frictionDirectionWorld","j1","contactPosWorld","vel1","vel2","vrel","denom0","computeImpulseDenominator","denom1","jacDiagABInv","computeImpulseDenominator_r0","computeImpulseDenominator_c0","computeImpulseDenominator_vec","computeImpulseDenominator_m","r0","c0","vec","invInertiaWorld","resolveSingleBilateral_vel1","resolveSingleBilateral_vel2","resolveSingleBilateral_vel","body2","normalLenSqr","rel_vel","contactDamping","massTerm","macrotask","WebKitMutationObserver","head","flush","standalone","toggle","characterData","Nargs","resize","halfWay","xA","xB","yA","yB","zA","zB","r3","rotationalEquation3","GRABBED_STATE","grabbing","hitEl","onHit","onGripOpen","onGripClose","evt","COMPONENT_SUFFIX","MAX_DELTA","controls","fly","constrainToNavMesh","velocityCtrl","heading","navGroup","navNode","injectControls","clampedEnd","updateVelocityCtrl","updateVelocity","control","vector2","getPositionDelta","cameraEl","PROXY_FLAG","localKeys","keydown","onKeyDown","keyup","onKeyUp","blur","onBlur","attachEventListeners","getKeys","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","shouldCaptureKeyEvent","isPressed","isProxied","getKeyboard","IE8_DOM_DEFINE","toPrimitive","Attributes","afterStep","condition","isError","View","routerView","route","$route","_routerViewCache","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encode","encodeURIComponent","decodeURIComponent","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","parts","stringifyQuery","val2","trailingSlashRE","createRoute","record","redirectedFrom","router","stringifyQuery$$1","meta","fullPath","getFullPath","formatMatch","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","toTypes","eventTypes","Link","required","exact","exactActiveClass","$router","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","guardEvent","click","findAnchor","aData","aAttrs","metaKey","ctrlKey","defaultPrevented","button","currentTarget","installed","registerInstance","callVal","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","stack","segment","hashIndex","queryIndex","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","compile_1","compile","tokensToFunction_1","tokensToFunction","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","escaped","modifier","asterisk","partial","optional","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","token","attachKeys","flags","sensitive","regexpToRegexp","arrayToRegexp","regexp","stringToRegexp","endsWithDelimiter","regexpCompileCache","fillParams","routeMsg","filler","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","alias","aliases","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","resolvedPath","aliasedPath","aliasedMatch","aliasedRecord","positionStore","setupScroll","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","scrollToPosition","pageXOffset","pageYOffset","getElementPosition","docEl","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","supportsPushState","ua","Time","_key","genKey","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","flatten","History","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","listen","onReady","errorCb","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","postEnterCbs","enterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","pathname","HashHistory","checkFallback","ensureSlash","setupListeners","supportsScroll","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","createHref","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","AmmoDriver","stepSize","bodyMessages","setInterval","cosHalfTheta","sinHalfTheta","halfTheta","atan2","ratioA","ratioB","axisList","_addBodyHandler","_removeBodyHandler","insertionSortX","insertionSortY","insertionSortZ","sortList","checkBounds","biPos","bjPos","boundingRadius","boundA2","boundB1","autoDetectAxis","sumX","sumX2","sumY","sumY2","sumZ","sumZ2","centerX","centerY","centerZ","varianceX","varianceY","varianceZ","toAxisAngle","targetAxis","acos","sfv_t1","sfv_t2","setFromVectors","aw","bw","inorm2","normalizeFast","qx","qy","qz","qw","ix","iy","iz","iw","toEuler","attitude","bank","sqx","sqy","sqz","asin","c3","s1","s2","s3","toQuat","omega","cosom","sinom","scale0","scale1","half_dt","ocean","amplitude","amplitudeVariance","speedVariance","waves","ang","amp","shading","FlatShading","vprops","verticesNeedUpdate","StaticBody","useBoundingBoxes","doBoundingBoxBroadphase","doBoundingSphereBroadphase","Broadphase_collisionPairs_r","boundingRadiusSum2","Broadphase_makePairsUnique_temp","Broadphase_makePairsUnique_p1","Broadphase_makePairsUnique_p2","id1","id2","pairIndex","bsc_dist","boundingSphereCheck","toInteger","details","CONSTANTS","C_GRAV","C_MAT","networkUrl","workerFps","workerInterpolate","workerInterpBufferSize","workerEngine","workerDebug","__applyImpulse","__applyForce","PromiseCapability","$$resolve","skinSize","l1","u1","l2","u2","overlapsX","overlapsY","overlapsZ","getCorners","transformIntoFrame_corners","corners","corner","dirFracX","dirFracY","dirFracZ","t3","t4","t5","t6","tmin","tmax","PLYLoader","propertyNameMapping","scope","XHRLoader","setPropertyNameMapping","bin2str","buf","array_buffer","fromCharCode","isASCII","header","parseHeader","parseASCII","parseBinary","patternHeader","headerText","headerLength","lineType","lineValues","comments","lines","currentElement","make_ply_element_property","propertValues","countType","itemType","parseASCIINumber","parseASCIIElement","patternBody","currentElementCount","useColor","handleElement","postProcess","colors","elementsNeedUpdate","elementName","setRGB","red","green","blue","vertex_indices","vertex_index","binaryRead","dataview","at","little_endian","getInt8","getUint16","binaryReadElement","loc","pivot","targetPivot","createConstraint","tempNormal","maxVal","DynamicBody","createModel","System","getOrLoadGeometry","skipCache","cacheItem","LOADER_SRC","loadLoader","loaderPromise","GLTFLoader","gltfModel","inertia","invInertia","invInertiaSolve","SLEEPY","wakeupEvent","sleep","sleepyEvent","sleepEvent","speedSquared","speedLimitSquared","tmpVec","_offset","_orientation","updateBoundingRadius","computeAABB_shapeAABB","bodyQuat","shapeAABB","uiw_m1","uiw_m2","updateInertiaWorld","Body_applyForce_rotForce","relativePoint","rotForce","Body_applyLocalForce_worldForce","Body_applyLocalForce_relativePointWorld","applyLocalForce","localForce","worldForce","relativePointWorld","Body_applyImpulse_velo","Body_applyImpulse_rotVelo","velo","rotVelo","Body_applyLocalImpulse_worldImpulse","Body_applyLocalImpulse_relativePoint","applyLocalImpulse","localImpulse","worldImpulse","Body_updateMassProperties_halfExtents","fixed","calculateInertia","angularVelo","iMdt","tx","ty","tz","updateConvexPolyhedronRepresentation","sx","sy","sz","V","sixTargetVectors","ex","worldCornerTempPos","forEachWorldCorner","worldCornersTemp","wc","promiseCapability","_registered","zVel","onAxisMove","axis_data","VERSION","TAU","DEG_TO_RAD","RAD_TO_DEG","SQRT3","TILE","ENT","STR","HEX","SQR","ABS","tiles","tileGroup","overlay","finder","AStarFinder","setGrid","setEntityOnTile","cellToPixel","cell","heightOffset","tile","entity","addTile","snapTileToGrid","removeTile","removeAllTiles","getTileAtCell","cellToHash","snapToGrid","pixelToCell","getRandomTile","Tools","randomInt","generateOverlay","generateTiles","Cell","_calcCost","_priority","_visited","_parent","uniqueID","LinkedList","generateID","equals","numCells","_createVertex","cellShape","moveTo","lineTo","autoClose","cellGeo","cellShapeGeo","ShapeGeometry","_cellWidth","_cellLength","_hashDelimeter","_directions","_diagonals","_list","_vec3","_cel","_conversionVec","_geoCache","_matCache","TWO_THIRDS","_cubeRound","getCellAt","getRandomCell","clearPath","generateTile","ExtrudeGeometry","Tile","tileScale","generateTilePoly","MeshBasicMaterial","rotateOnAxis","generate","createPointsGeometry","getJSON","toJSON","round","SqrGrid","_fullCellSize","randomizeRGB","objectType","highlight","structure","_emissive","getHex","setHex","deselect","free","first","objToNodeMap","sortArray","addNode","swapObjects","showDebug","dump","moveUp","moveDown","_listener","signal","execute","detach","isBound","_destroy","_bindings","_prevParams","memorize","_shouldPropagate","validateListener","_registerListener","_indexOfListener","_addBinding","addOnce","removeAll","getNumListeners","halt","forget","Signal","allowDiagonal","heuristicFilter","compare","PathUtil","backtrace","biBacktrace","pathLength","expandPath","smoothenPath","isWalkableAt","compressPath","imageLoader","crossOrigin","LoadingManager","ImageLoader","sourceFile","MouseCaster","down","rightDown","pickedObject","selectedObject","allHits","screenPosition","_camera","_raycaster","_preventDefault","_onDocumentMouseMove","_onDocumentMouseDown","_onDocumentMouseUp","_onMouseWheel","OVER","OUT","DOWN","UP","CLICK","WHEEL","setFromCamera","clientX","clientY","stopPropagation","wheelDelta","Scene","alpha","antialias","clearColor","sortObjects","fog","light","lightPosition","cameraType","cameraPosition","orthoZoom","minDistance","maxDistance","zoomSpeed","noZoom","renderer","WebGLRenderer","setClearColor","container","contolled","OrbitControls","domElement","bottom","updateProjectionMatrix","setSize","attachTo","setPixelRatio","devicePixelRatio","updateOrthoZoom","focusOn","SelectionManager","mouse","onSelect","onDeselect","toggleSelection","onMouse","clearSelection","getShortRotation","nwf","Performance","elapsedTime","lastChild","radixSort","substring","XMLHttpRequest","onreadystatechange","status","statusText","responseText","open","setRequestHeader","send","eval","JSONLoader","mat","FaceColors","NoColors","morphTargets","morphNormals","MultiMaterial","rayFromWorld","rayToWorld"],"mappings":"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","file":"js/chunk-vendors.9f0f2587.js","sourcesContent":["/**\n * Touch-to-move-forward controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('touch-controls', {\n  schema: {\n    enabled: { default: true }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.bindMethods();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    const canvasEl = sceneEl.canvas;\n\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', this.addEventListeners.bind(this));\n      return;\n    }\n\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    canvasEl.addEventListener('touchend', this.onTouchEnd);\n  },\n\n  removeEventListeners: function () {\n    const canvasEl = this.el.sceneEl && this.el.sceneEl.canvas;\n    if (!canvasEl) { return; }\n\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    canvasEl.removeEventListener('touchend', this.onTouchEnd);\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -1 : 0;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    this.isMoving = true;\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    this.isMoving = false;\n    e.preventDefault();\n  }\n});\n","var Driver = require('./driver');\n\nfunction NetworkDriver () {\n  throw new Error('[NetworkDriver] Driver not implemented.');\n}\n\nNetworkDriver.prototype = new Driver();\nNetworkDriver.prototype.constructor = NetworkDriver;\n\nmodule.exports = NetworkDriver;\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","module.exports = Particle;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * Particle shape.\n * @class Particle\n * @constructor\n * @author schteppe\n * @extends Shape\n */\nfunction Particle(){\n    Shape.call(this);\n\n    this.type = Shape.types.PARTICLE;\n}\nParticle.prototype = new Shape();\nParticle.prototype.constructor = Particle;\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\nParticle.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    target.set(0, 0, 0);\n    return target;\n};\n\nParticle.prototype.volume = function(){\n    return 0;\n};\n\nParticle.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = 0;\n};\n\nParticle.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    // Get each axis max\n    min.copy(pos);\n    max.copy(pos);\n};\n","module.exports = TupleDictionary;\n\n/**\n * @class TupleDictionary\n * @constructor\n */\nfunction TupleDictionary() {\n\n    /**\n     * The data storage\n     * @property data\n     * @type {Object}\n     */\n    this.data = { keys:[] };\n}\n\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nTupleDictionary.prototype.get = function(i, j) {\n    if (i > j) {\n        // swap\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    return this.data[i+'-'+j];\n};\n\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\nTupleDictionary.prototype.set = function(i, j, value) {\n    if (i > j) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    var key = i+'-'+j;\n\n    // Check if key already exists\n    if(!this.get(i,j)){\n        this.data.keys.push(key);\n    }\n\n    this.data[key] = value;\n};\n\n/**\n * @method reset\n */\nTupleDictionary.prototype.reset = function() {\n    var data = this.data,\n        keys = data.keys;\n    while(keys.length > 0){\n        var key = keys.pop();\n        delete data[key];\n    }\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","/**\n\n  QuickHull\n  ---------\n\n  The MIT License\n\n  Copyright &copy; 2010-2014 three.js authors\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n  THE SOFTWARE.\n\n\n    @author mark lundin / http://mark-lundin.com\n\n    This is a 3D implementation of the Quick Hull algorithm.\n    It is a fast way of computing a convex hull with average complexity\n    of O(n log(n)).\n    It uses depends on three.js and is supposed to create THREE.Geometry.\n\n    It's also very messy\n\n */\n\nmodule.exports = (function(){\n\n\n  var faces     = [],\n    faceStack   = [],\n    i, NUM_POINTS, extremes,\n    max     = 0,\n    dcur, current, j, v0, v1, v2, v3,\n    N, D;\n\n  var ab, ac, ax,\n    suba, subb, normal,\n    diff, subaA, subaB, subC;\n\n  function reset(){\n\n    ab    = new THREE.Vector3(),\n    ac    = new THREE.Vector3(),\n    ax    = new THREE.Vector3(),\n    suba  = new THREE.Vector3(),\n    subb  = new THREE.Vector3(),\n    normal  = new THREE.Vector3(),\n    diff  = new THREE.Vector3(),\n    subaA = new THREE.Vector3(),\n    subaB = new THREE.Vector3(),\n    subC  = new THREE.Vector3();\n\n  }\n\n  //temporary vectors\n\n  function process( points ){\n\n    // Iterate through all the faces and remove\n    while( faceStack.length > 0  ){\n      cull( faceStack.shift(), points );\n    }\n  }\n\n\n  var norm = function(){\n\n    var ca = new THREE.Vector3(),\n      ba = new THREE.Vector3(),\n      N = new THREE.Vector3();\n\n    return function( a, b, c ){\n\n      ca.subVectors( c, a );\n      ba.subVectors( b, a );\n\n      N.crossVectors( ca, ba );\n\n      return N.normalize();\n    }\n\n  }();\n\n\n  function getNormal( face, points ){\n\n    if( face.normal !== undefined ) return face.normal;\n\n    var p0 = points[face[0]],\n      p1 = points[face[1]],\n      p2 = points[face[2]];\n\n    ab.subVectors( p1, p0 );\n    ac.subVectors( p2, p0 );\n    normal.crossVectors( ac, ab );\n    normal.normalize();\n\n    return face.normal = normal.clone();\n\n  }\n\n\n  function assignPoints( face, pointset, points ){\n\n    // ASSIGNING POINTS TO FACE\n    var p0 = points[face[0]],\n      dots = [], apex,\n      norm = getNormal( face, points );\n\n\n    // Sory all the points by there distance from the plane\n    pointset.sort( function( aItem, bItem ){\n\n\n      dots[aItem.x/3] = dots[aItem.x/3] !== undefined ? dots[aItem.x/3] : norm.dot( suba.subVectors( aItem, p0 ));\n      dots[bItem.x/3] = dots[bItem.x/3] !== undefined ? dots[bItem.x/3] : norm.dot( subb.subVectors( bItem, p0 ));\n\n      return dots[aItem.x/3] - dots[bItem.x/3] ;\n    });\n\n    //TODO :: Must be a faster way of finding and index in this array\n    var index = pointset.length;\n\n    if( index === 1 ) dots[pointset[0].x/3] = norm.dot( suba.subVectors( pointset[0], p0 ));\n    while( index-- > 0 && dots[pointset[index].x/3] > 0 )\n\n    var point;\n    if( index + 1 < pointset.length && dots[pointset[index+1].x/3] > 0 ){\n\n      face.visiblePoints  = pointset.splice( index + 1 );\n    }\n  }\n\n\n\n\n  function cull( face, points ){\n\n    var i = faces.length,\n      dot, visibleFace, currentFace,\n      visibleFaces = [face];\n\n    var apex = points.indexOf( face.visiblePoints.pop() );\n\n    // Iterate through all other faces...\n    while( i-- > 0 ){\n      currentFace = faces[i];\n      if( currentFace !== face ){\n        // ...and check if they're pointing in the same direction\n        dot = getNormal( currentFace, points ).dot( diff.subVectors( points[apex], points[currentFace[0]] ));\n        if( dot > 0 ){\n          visibleFaces.push( currentFace );\n        }\n      }\n    }\n\n    var index, neighbouringIndex, vertex;\n\n    // Determine Perimeter - Creates a bounded horizon\n\n    // 1. Pick an edge A out of all possible edges\n    // 2. Check if A is shared by any other face. a->b === b->a\n      // 2.1 for each edge in each triangle, isShared = ( f1.a == f2.a && f1.b == f2.b ) || ( f1.a == f2.b && f1.b == f2.a )\n    // 3. If not shared, then add to convex horizon set,\n        //pick an end point (N) of the current edge A and choose a new edge NA connected to A.\n        //Restart from 1.\n    // 4. If A is shared, it is not an horizon edge, therefore flag both faces that share this edge as candidates for culling\n    // 5. If candidate geometry is a degenrate triangle (ie. the tangent space normal cannot be computed) then remove that triangle from all further processing\n\n\n    var j = i = visibleFaces.length;\n    var isDistinct = false,\n      hasOneVisibleFace = i === 1,\n      cull = [],\n      perimeter = [],\n      edgeIndex = 0, compareFace, nextIndex,\n      a, b;\n\n    var allPoints = [];\n    var originFace = [visibleFaces[0][0], visibleFaces[0][1], visibleFaces[0][1], visibleFaces[0][2], visibleFaces[0][2], visibleFaces[0][0]];\n\n\n    if( visibleFaces.length === 1 ){\n      currentFace = visibleFaces[0];\n\n      perimeter = [currentFace[0], currentFace[1], currentFace[1], currentFace[2], currentFace[2], currentFace[0]];\n      // remove visible face from list of faces\n      if( faceStack.indexOf( currentFace ) > -1 ){\n        faceStack.splice( faceStack.indexOf( currentFace ), 1 );\n      }\n\n\n      if( currentFace.visiblePoints ) allPoints = allPoints.concat( currentFace.visiblePoints );\n      faces.splice( faces.indexOf( currentFace ), 1 );\n\n    }else{\n\n      while( i-- > 0  ){  // for each visible face\n\n        currentFace = visibleFaces[i];\n\n        // remove visible face from list of faces\n        if( faceStack.indexOf( currentFace ) > -1 ){\n          faceStack.splice( faceStack.indexOf( currentFace ), 1 );\n        }\n\n        if( currentFace.visiblePoints ) allPoints = allPoints.concat( currentFace.visiblePoints );\n        faces.splice( faces.indexOf( currentFace ), 1 );\n\n\n        var isSharedEdge;\n        cEdgeIndex = 0;\n\n        while( cEdgeIndex < 3 ){ // Iterate through it's edges\n\n          isSharedEdge = false;\n          j = visibleFaces.length;\n          a = currentFace[cEdgeIndex]\n          b = currentFace[(cEdgeIndex+1)%3];\n\n\n          while( j-- > 0 && !isSharedEdge ){ // find another visible faces\n\n            compareFace = visibleFaces[j];\n            edgeIndex = 0;\n\n            // isSharedEdge = compareFace == currentFace;\n            if( compareFace !== currentFace ){\n\n              while( edgeIndex < 3 && !isSharedEdge ){ //Check all it's indices\n\n                nextIndex = ( edgeIndex + 1 );\n                isSharedEdge = ( compareFace[edgeIndex] === a && compareFace[nextIndex%3] === b ) ||\n                         ( compareFace[edgeIndex] === b && compareFace[nextIndex%3] === a );\n\n                edgeIndex++;\n              }\n            }\n          }\n\n          if( !isSharedEdge || hasOneVisibleFace ){\n            perimeter.push( a );\n            perimeter.push( b );\n          }\n\n          cEdgeIndex++;\n        }\n      }\n    }\n\n    // create new face for all pairs around edge\n    i = 0;\n    var l = perimeter.length/2;\n    var f;\n\n    while( i < l ){\n      f = [ perimeter[i*2+1], apex, perimeter[i*2] ];\n      assignPoints( f, allPoints, points );\n      faces.push( f )\n      if( f.visiblePoints !== undefined  )faceStack.push( f );\n      i++;\n    }\n\n  }\n\n  var distSqPointSegment = function(){\n\n    var ab = new THREE.Vector3(),\n      ac = new THREE.Vector3(),\n      bc = new THREE.Vector3();\n\n    return function( a, b, c ){\n\n        ab.subVectors( b, a );\n        ac.subVectors( c, a );\n        bc.subVectors( c, b );\n\n        var e = ac.dot(ab);\n        if (e < 0.0) return ac.dot( ac );\n        var f = ab.dot( ab );\n        if (e >= f) return bc.dot(  bc );\n        return ac.dot( ac ) - e * e / f;\n\n      }\n\n  }();\n\n\n\n\n\n  return function( geometry ){\n\n    reset();\n\n\n    points    = geometry.vertices;\n    faces     = [],\n    faceStack   = [],\n    i       = NUM_POINTS = points.length,\n    extremes  = points.slice( 0, 6 ),\n    max     = 0;\n\n\n\n    /*\n     *  FIND EXTREMETIES\n     */\n    while( i-- > 0 ){\n      if( points[i].x < extremes[0].x ) extremes[0] = points[i];\n      if( points[i].x > extremes[1].x ) extremes[1] = points[i];\n\n      if( points[i].y < extremes[2].y ) extremes[2] = points[i];\n      if( points[i].y < extremes[3].y ) extremes[3] = points[i];\n\n      if( points[i].z < extremes[4].z ) extremes[4] = points[i];\n      if( points[i].z < extremes[5].z ) extremes[5] = points[i];\n    }\n\n\n    /*\n     *  Find the longest line between the extremeties\n     */\n\n    j = i = 6;\n    while( i-- > 0 ){\n      j = i - 1;\n      while( j-- > 0 ){\n          if( max < (dcur = extremes[i].distanceToSquared( extremes[j] )) ){\n        max = dcur;\n        v0 = extremes[ i ];\n        v1 = extremes[ j ];\n\n          }\n        }\n      }\n\n\n      // 3. Find the most distant point to the line segment, this creates a plane\n      i = 6;\n      max = 0;\n    while( i-- > 0 ){\n      dcur = distSqPointSegment( v0, v1, extremes[i]);\n      if( max < dcur ){\n        max = dcur;\n            v2 = extremes[ i ];\n          }\n    }\n\n\n      // 4. Find the most distant point to the plane.\n\n      N = norm(v0, v1, v2);\n      D = N.dot( v0 );\n\n\n      max = 0;\n      i = NUM_POINTS;\n      while( i-- > 0 ){\n        dcur = Math.abs( points[i].dot( N ) - D );\n          if( max < dcur ){\n            max = dcur;\n            v3 = points[i];\n      }\n      }\n\n\n\n      var v0Index = points.indexOf( v0 ),\n      v1Index = points.indexOf( v1 ),\n      v2Index = points.indexOf( v2 ),\n      v3Index = points.indexOf( v3 );\n\n\n    //  We now have a tetrahedron as the base geometry.\n    //  Now we must subdivide the\n\n      var tetrahedron =[\n        [ v2Index, v1Index, v0Index ],\n        [ v1Index, v3Index, v0Index ],\n        [ v2Index, v3Index, v1Index ],\n        [ v0Index, v3Index, v2Index ],\n    ];\n\n\n\n    subaA.subVectors( v1, v0 ).normalize();\n    subaB.subVectors( v2, v0 ).normalize();\n    subC.subVectors ( v3, v0 ).normalize();\n    var sign  = subC.dot( new THREE.Vector3().crossVectors( subaB, subaA ));\n\n\n    // Reverse the winding if negative sign\n    if( sign < 0 ){\n      tetrahedron[0].reverse();\n      tetrahedron[1].reverse();\n      tetrahedron[2].reverse();\n      tetrahedron[3].reverse();\n    }\n\n\n    //One for each face of the pyramid\n    var pointsCloned = points.slice();\n    pointsCloned.splice( pointsCloned.indexOf( v0 ), 1 );\n    pointsCloned.splice( pointsCloned.indexOf( v1 ), 1 );\n    pointsCloned.splice( pointsCloned.indexOf( v2 ), 1 );\n    pointsCloned.splice( pointsCloned.indexOf( v3 ), 1 );\n\n\n    var i = tetrahedron.length;\n    while( i-- > 0 ){\n      assignPoints( tetrahedron[i], pointsCloned, points );\n      if( tetrahedron[i].visiblePoints !== undefined ){\n        faceStack.push( tetrahedron[i] );\n      }\n      faces.push( tetrahedron[i] );\n    }\n\n    process( points );\n\n\n    //  Assign to our geometry object\n\n    var ll = faces.length;\n    while( ll-- > 0 ){\n      geometry.faces[ll] = new THREE.Face3( faces[ll][2], faces[ll][1], faces[ll][0], faces[ll].normal )\n    }\n\n    geometry.normalsNeedUpdate = true;\n\n    return geometry;\n\n  }\n\n}())\n","/**\n * Driver - defines limited API to local and remote physics controllers.\n */\n\nfunction Driver () {}\n\nmodule.exports = Driver;\n\n/******************************************************************************\n * Lifecycle\n */\n\n/* @param {object} worldConfig */\nDriver.prototype.init = abstractMethod;\n\n/* @param {number} deltaMS */\nDriver.prototype.step = abstractMethod;\n\nDriver.prototype.destroy = abstractMethod;\n\n/******************************************************************************\n * Bodies\n */\n\n/* @param {CANNON.Body} body */\nDriver.prototype.addBody = abstractMethod;\n\n/* @param {CANNON.Body} body */\nDriver.prototype.removeBody = abstractMethod;\n\n/**\n * @param {CANNON.Body} body\n * @param {string} methodName\n * @param {Array} args\n */\nDriver.prototype.applyBodyMethod = abstractMethod;\n\n/** @param {CANNON.Body} body */\nDriver.prototype.updateBodyProperties = abstractMethod;\n\n/******************************************************************************\n * Materials\n */\n\n/** @param {object} materialConfig */\nDriver.prototype.addMaterial = abstractMethod;\n\n/**\n * @param {string} materialName1\n * @param {string} materialName2\n * @param {object} contactMaterialConfig\n */\nDriver.prototype.addContactMaterial = abstractMethod;\n\n/******************************************************************************\n * Constraints\n */\n\n/* @param {CANNON.Constraint} constraint */\nDriver.prototype.addConstraint = abstractMethod;\n\n/* @param {CANNON.Constraint} constraint */\nDriver.prototype.removeConstraint = abstractMethod;\n\n/******************************************************************************\n * Contacts\n */\n\n/** @return {Array<object>} */\nDriver.prototype.getContacts = abstractMethod;\n\n/*****************************************************************************/\n\nfunction abstractMethod () {\n  throw new Error('Method not implemented.');\n}\n","module.exports = JacobianElement;\n\nvar Vec3 = require('./Vec3');\n\n/**\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\n * @class JacobianElement\n * @constructor\n */\nfunction JacobianElement(){\n\n    /**\n     * @property {Vec3} spatial\n     */\n    this.spatial = new Vec3();\n\n    /**\n     * @property {Vec3} rotational\n     */\n    this.rotational = new Vec3();\n}\n\n/**\n * Multiply with other JacobianElement\n * @method multiplyElement\n * @param  {JacobianElement} element\n * @return {Number}\n */\nJacobianElement.prototype.multiplyElement = function(element){\n    return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\n};\n\n/**\n * Multiply with two vectors\n * @method multiplyVectors\n * @param  {Vec3} spatial\n * @param  {Vec3} rotational\n * @return {Number}\n */\nJacobianElement.prototype.multiplyVectors = function(spatial,rotational){\n    return spatial.dot(this.spatial) + rotational.dot(this.rotational);\n};\n","var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\n\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n    var wkey;\n    var cacheKeys = Object.keys(cache);\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n        var key = cacheKeys[i];\n        var exp = cache[key].exports;\n        // Using babel as a transpiler to use esmodule, the export will always\n        // be an object with the default export as a property of it. To ensure\n        // the existing api and babel esmodule exports are both supported we\n        // check for both\n        if (exp === fn || exp && exp.default === fn) {\n            wkey = key;\n            break;\n        }\n    }\n\n    if (!wkey) {\n        wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n        var wcache = {};\n        for (var i = 0, l = cacheKeys.length; i < l; i++) {\n            var key = cacheKeys[i];\n            wcache[key] = key;\n        }\n        sources[wkey] = [\n            'function(require,module,exports){' + fn + '(self); }',\n            wcache\n        ];\n    }\n    var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n\n    var scache = {}; scache[wkey] = wkey;\n    sources[skey] = [\n        'function(require,module,exports){' +\n            // try to call default if defined to also support babel esmodule exports\n            'var f = require(' + stringify(wkey) + ');' +\n            '(f.default ? f.default : f)(self);' +\n        '}',\n        scache\n    ];\n\n    var workerSources = {};\n    resolveSources(skey);\n\n    function resolveSources(key) {\n        workerSources[key] = true;\n\n        for (var depPath in sources[key][1]) {\n            var depKey = sources[key][1][depPath];\n            if (!workerSources[depKey]) {\n                resolveSources(depKey);\n            }\n        }\n    }\n\n    var src = '(' + bundleFn + ')({'\n        + Object.keys(workerSources).map(function (key) {\n            return stringify(key) + ':['\n                + sources[key][0]\n                + ',' + stringify(sources[key][1]) + ']'\n            ;\n        }).join(',')\n        + '},{},[' + stringify(skey) + '])'\n    ;\n\n    var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n\n    var blob = new Blob([src], { type: 'text/javascript' });\n    if (options && options.bare) { return blob; }\n    var workerUrl = URL.createObjectURL(blob);\n    var worker = new Worker(workerUrl);\n    worker.objectURL = workerUrl;\n    return worker;\n};\n","module.exports = Trimesh;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Transform = require('../math/Transform');\nvar AABB = require('../collision/AABB');\nvar Octree = require('../utils/Octree');\n\n/**\n * @class Trimesh\n * @constructor\n * @param {array} vertices\n * @param {array} indices\n * @extends Shape\n * @example\n *     // How to make a mesh with a single triangle\n *     var vertices = [\n *         0, 0, 0, // vertex 0\n *         1, 0, 0, // vertex 1\n *         0, 1, 0  // vertex 2\n *     ];\n *     var indices = [\n *         0, 1, 2  // triangle 0\n *     ];\n *     var trimeshShape = new Trimesh(vertices, indices);\n */\nfunction Trimesh(vertices, indices) {\n    Shape.call(this);\n    this.type = Shape.types.TRIMESH;\n\n    /**\n     * @property vertices\n     * @type {Array}\n     */\n    this.vertices = new Float32Array(vertices);\n\n    /**\n     * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\n     * @property indices\n     * @type {Array}\n     */\n    this.indices = new Int16Array(indices);\n\n    /**\n     * The normals data.\n     * @property normals\n     * @type {Array}\n     */\n    this.normals = new Float32Array(indices.length);\n\n    /**\n     * The local AABB of the mesh.\n     * @property aabb\n     * @type {Array}\n     */\n    this.aabb = new AABB();\n\n    /**\n     * References to vertex pairs, making up all unique edges in the trimesh.\n     * @property {array} edges\n     */\n    this.edges = null;\n\n    /**\n     * Local scaling of the mesh. Use .setScale() to set it.\n     * @property {Vec3} scale\n     */\n    this.scale = new Vec3(1, 1, 1);\n\n    /**\n     * The indexed triangles. Use .updateTree() to update it.\n     * @property {Octree} tree\n     */\n    this.tree = new Octree();\n\n    this.updateEdges();\n    this.updateNormals();\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n    this.updateTree();\n}\nTrimesh.prototype = new Shape();\nTrimesh.prototype.constructor = Trimesh;\n\nvar computeNormals_n = new Vec3();\n\n/**\n * @method updateTree\n */\nTrimesh.prototype.updateTree = function(){\n    var tree = this.tree;\n\n    tree.reset();\n    tree.aabb.copy(this.aabb);\n    var scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\n    tree.aabb.lowerBound.x *= 1 / scale.x;\n    tree.aabb.lowerBound.y *= 1 / scale.y;\n    tree.aabb.lowerBound.z *= 1 / scale.z;\n    tree.aabb.upperBound.x *= 1 / scale.x;\n    tree.aabb.upperBound.y *= 1 / scale.y;\n    tree.aabb.upperBound.z *= 1 / scale.z;\n\n    // Insert all triangles\n    var triangleAABB = new AABB();\n    var a = new Vec3();\n    var b = new Vec3();\n    var c = new Vec3();\n    var points = [a, b, c];\n    for (var i = 0; i < this.indices.length / 3; i++) {\n        //this.getTriangleVertices(i, a, b, c);\n\n        // Get unscaled triangle verts\n        var i3 = i * 3;\n        this._getUnscaledVertex(this.indices[i3], a);\n        this._getUnscaledVertex(this.indices[i3 + 1], b);\n        this._getUnscaledVertex(this.indices[i3 + 2], c);\n\n        triangleAABB.setFromPoints(points);\n        tree.insert(triangleAABB, i);\n    }\n    tree.removeEmptyNodes();\n};\n\nvar unscaledAABB = new AABB();\n\n/**\n * Get triangles in a local AABB from the trimesh.\n * @method getTrianglesInAABB\n * @param  {AABB} aabb\n * @param  {array} result An array of integers, referencing the queried triangles.\n */\nTrimesh.prototype.getTrianglesInAABB = function(aabb, result){\n    unscaledAABB.copy(aabb);\n\n    // Scale it to local\n    var scale = this.scale;\n    var isx = scale.x;\n    var isy = scale.y;\n    var isz = scale.z;\n    var l = unscaledAABB.lowerBound;\n    var u = unscaledAABB.upperBound;\n    l.x /= isx;\n    l.y /= isy;\n    l.z /= isz;\n    u.x /= isx;\n    u.y /= isy;\n    u.z /= isz;\n\n    return this.tree.aabbQuery(unscaledAABB, result);\n};\n\n/**\n * @method setScale\n * @param {Vec3} scale\n */\nTrimesh.prototype.setScale = function(scale){\n    var wasUniform = this.scale.x === this.scale.y === this.scale.z;\n    var isUniform = scale.x === scale.y === scale.z;\n\n    if(!(wasUniform && isUniform)){\n        // Non-uniform scaling. Need to update normals.\n        this.updateNormals();\n    }\n    this.scale.copy(scale);\n    this.updateAABB();\n    this.updateBoundingSphereRadius();\n};\n\n/**\n * Compute the normals of the faces. Will save in the .normals array.\n * @method updateNormals\n */\nTrimesh.prototype.updateNormals = function(){\n    var n = computeNormals_n;\n\n    // Generate normals\n    var normals = this.normals;\n    for(var i=0; i < this.indices.length / 3; i++){\n        var i3 = i * 3;\n\n        var a = this.indices[i3],\n            b = this.indices[i3 + 1],\n            c = this.indices[i3 + 2];\n\n        this.getVertex(a, va);\n        this.getVertex(b, vb);\n        this.getVertex(c, vc);\n\n        Trimesh.computeNormal(vb, va, vc, n);\n\n        normals[i3] = n.x;\n        normals[i3 + 1] = n.y;\n        normals[i3 + 2] = n.z;\n    }\n};\n\n/**\n * Update the .edges property\n * @method updateEdges\n */\nTrimesh.prototype.updateEdges = function(){\n    var edges = {};\n    var add = function(indexA, indexB){\n        var key = a < b ? a + '_' + b : b + '_' + a;\n        edges[key] = true;\n    };\n    for(var i=0; i < this.indices.length / 3; i++){\n        var i3 = i * 3;\n        var a = this.indices[i3],\n            b = this.indices[i3 + 1],\n            c = this.indices[i3 + 2];\n        add(a,b);\n        add(b,c);\n        add(c,a);\n    }\n    var keys = Object.keys(edges);\n    this.edges = new Int16Array(keys.length * 2);\n    for (var i = 0; i < keys.length; i++) {\n        var indices = keys[i].split('_');\n        this.edges[2 * i] = parseInt(indices[0], 10);\n        this.edges[2 * i + 1] = parseInt(indices[1], 10);\n    }\n};\n\n/**\n * Get an edge vertex\n * @method getEdgeVertex\n * @param  {number} edgeIndex\n * @param  {number} firstOrSecond 0 or 1, depending on which one of the vertices you need.\n * @param  {Vec3} vertexStore Where to store the result\n */\nTrimesh.prototype.getEdgeVertex = function(edgeIndex, firstOrSecond, vertexStore){\n    var vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\n    this.getVertex(vertexIndex, vertexStore);\n};\n\nvar getEdgeVector_va = new Vec3();\nvar getEdgeVector_vb = new Vec3();\n\n/**\n * Get a vector along an edge.\n * @method getEdgeVector\n * @param  {number} edgeIndex\n * @param  {Vec3} vectorStore\n */\nTrimesh.prototype.getEdgeVector = function(edgeIndex, vectorStore){\n    var va = getEdgeVector_va;\n    var vb = getEdgeVector_vb;\n    this.getEdgeVertex(edgeIndex, 0, va);\n    this.getEdgeVertex(edgeIndex, 1, vb);\n    vb.vsub(va, vectorStore);\n};\n\n/**\n * Get face normal given 3 vertices\n * @static\n * @method computeNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\nvar cb = new Vec3();\nvar ab = new Vec3();\nTrimesh.computeNormal = function ( va, vb, vc, target ) {\n    vb.vsub(va,ab);\n    vc.vsub(vb,cb);\n    cb.cross(ab,target);\n    if ( !target.isZero() ) {\n        target.normalize();\n    }\n};\n\nvar va = new Vec3();\nvar vb = new Vec3();\nvar vc = new Vec3();\n\n/**\n * Get vertex i.\n * @method getVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype.getVertex = function(i, out){\n    var scale = this.scale;\n    this._getUnscaledVertex(i, out);\n    out.x *= scale.x;\n    out.y *= scale.y;\n    out.z *= scale.z;\n    return out;\n};\n\n/**\n * Get raw vertex i\n * @private\n * @method _getUnscaledVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype._getUnscaledVertex = function(i, out){\n    var i3 = i * 3;\n    var vertices = this.vertices;\n    return out.set(\n        vertices[i3],\n        vertices[i3 + 1],\n        vertices[i3 + 2]\n    );\n};\n\n/**\n * Get a vertex from the trimesh,transformed by the given position and quaternion.\n * @method getWorldVertex\n * @param  {number} i\n * @param  {Vec3} pos\n * @param  {Quaternion} quat\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\nTrimesh.prototype.getWorldVertex = function(i, pos, quat, out){\n    this.getVertex(i, out);\n    Transform.pointToWorldFrame(pos, quat, out, out);\n    return out;\n};\n\n/**\n * Get the three vertices for triangle i.\n * @method getTriangleVertices\n * @param  {number} i\n * @param  {Vec3} a\n * @param  {Vec3} b\n * @param  {Vec3} c\n */\nTrimesh.prototype.getTriangleVertices = function(i, a, b, c){\n    var i3 = i * 3;\n    this.getVertex(this.indices[i3], a);\n    this.getVertex(this.indices[i3 + 1], b);\n    this.getVertex(this.indices[i3 + 2], c);\n};\n\n/**\n * Compute the normal of triangle i.\n * @method getNormal\n * @param  {Number} i\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\nTrimesh.prototype.getNormal = function(i, target){\n    var i3 = i * 3;\n    return target.set(\n        this.normals[i3],\n        this.normals[i3 + 1],\n        this.normals[i3 + 2]\n    );\n};\n\nvar cli_aabb = new AABB();\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\nTrimesh.prototype.calculateLocalInertia = function(mass,target){\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabb);\n    var x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x,\n        y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y,\n        z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\n    return target.set(\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z ),\n        1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z ),\n        1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x )\n    );\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\n\n/**\n * Compute the local AABB for the trimesh\n * @method computeLocalAABB\n * @param  {AABB} aabb\n */\nTrimesh.prototype.computeLocalAABB = function(aabb){\n    var l = aabb.lowerBound,\n        u = aabb.upperBound,\n        n = this.vertices.length,\n        vertices = this.vertices,\n        v = computeLocalAABB_worldVert;\n\n    this.getVertex(0, v);\n    l.copy(v);\n    u.copy(v);\n\n    for(var i=0; i !== n; i++){\n        this.getVertex(i, v);\n\n        if(v.x < l.x){\n            l.x = v.x;\n        } else if(v.x > u.x){\n            u.x = v.x;\n        }\n\n        if(v.y < l.y){\n            l.y = v.y;\n        } else if(v.y > u.y){\n            u.y = v.y;\n        }\n\n        if(v.z < l.z){\n            l.z = v.z;\n        } else if(v.z > u.z){\n            u.z = v.z;\n        }\n    }\n};\n\n\n/**\n * Update the .aabb property\n * @method updateAABB\n */\nTrimesh.prototype.updateAABB = function(){\n    this.computeLocalAABB(this.aabb);\n};\n\n/**\n * Will update the .boundingSphereRadius property\n * @method updateBoundingSphereRadius\n */\nTrimesh.prototype.updateBoundingSphereRadius = function(){\n    // Assume points are distributed with local (0,0,0) as center\n    var max2 = 0;\n    var vertices = this.vertices;\n    var v = new Vec3();\n    for(var i=0, N=vertices.length / 3; i !== N; i++) {\n        this.getVertex(i, v);\n        var norm2 = v.norm2();\n        if(norm2 > max2){\n            max2 = norm2;\n        }\n    }\n    this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\nvar calculateWorldAABB_frame = new Transform();\nvar calculateWorldAABB_aabb = new AABB();\n\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\nTrimesh.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    /*\n    var n = this.vertices.length / 3,\n        verts = this.vertices;\n    var minx,miny,minz,maxx,maxy,maxz;\n\n    var v = tempWorldVertex;\n    for(var i=0; i<n; i++){\n        this.getVertex(i, v);\n        quat.vmult(v, v);\n        pos.vadd(v, v);\n        if (v.x < minx || minx===undefined){\n            minx = v.x;\n        } else if(v.x > maxx || maxx===undefined){\n            maxx = v.x;\n        }\n\n        if (v.y < miny || miny===undefined){\n            miny = v.y;\n        } else if(v.y > maxy || maxy===undefined){\n            maxy = v.y;\n        }\n\n        if (v.z < minz || minz===undefined){\n            minz = v.z;\n        } else if(v.z > maxz || maxz===undefined){\n            maxz = v.z;\n        }\n    }\n    min.set(minx,miny,minz);\n    max.set(maxx,maxy,maxz);\n    */\n\n    // Faster approximation using local AABB\n    var frame = calculateWorldAABB_frame;\n    var result = calculateWorldAABB_aabb;\n    frame.position = pos;\n    frame.quaternion = quat;\n    this.aabb.toWorldFrame(frame, result);\n    min.copy(result.lowerBound);\n    max.copy(result.upperBound);\n};\n\n/**\n * Get approximate volume\n * @method volume\n * @return {Number}\n */\nTrimesh.prototype.volume = function(){\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n\n/**\n * Create a Trimesh instance, shaped as a torus.\n * @static\n * @method createTorus\n * @param  {number} [radius=1]\n * @param  {number} [tube=0.5]\n * @param  {number} [radialSegments=8]\n * @param  {number} [tubularSegments=6]\n * @param  {number} [arc=6.283185307179586]\n * @return {Trimesh} A torus\n */\nTrimesh.createTorus = function (radius, tube, radialSegments, tubularSegments, arc) {\n    radius = radius || 1;\n    tube = tube || 0.5;\n    radialSegments = radialSegments || 8;\n    tubularSegments = tubularSegments || 6;\n    arc = arc || Math.PI * 2;\n\n    var vertices = [];\n    var indices = [];\n\n    for ( var j = 0; j <= radialSegments; j ++ ) {\n        for ( var i = 0; i <= tubularSegments; i ++ ) {\n            var u = i / tubularSegments * arc;\n            var v = j / radialSegments * Math.PI * 2;\n\n            var x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n            var y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n            var z = tube * Math.sin( v );\n\n            vertices.push( x, y, z );\n        }\n    }\n\n    for ( var j = 1; j <= radialSegments; j ++ ) {\n        for ( var i = 1; i <= tubularSegments; i ++ ) {\n            var a = ( tubularSegments + 1 ) * j + i - 1;\n            var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n            var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n            var d = ( tubularSegments + 1 ) * j + i;\n\n            indices.push(a, b, d);\n            indices.push(b, c, d);\n        }\n    }\n\n    return new Trimesh(vertices, indices);\n};\n","// javascript-astar\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a binary heap.\n\nclass BinaryHeap {\n  constructor (scoreFunction) {\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n  }\n\n  push (element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n\n    // Allow it to sink down.\n    this.sinkDown(this.content.length - 1);\n  }\n\n  pop () {\n    // Store the first element so we can return it later.\n    const result = this.content[0];\n    // Get the element at the end of the array.\n    const end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it bubble up.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  }\n\n  remove (node) {\n    const i = this.content.indexOf(node);\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    const end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  }\n\n  size () {\n    return this.content.length;\n  }\n\n  rescoreElement (node) {\n    this.sinkDown(this.content.indexOf(node));\n  }\n\n  sinkDown (n) {\n    // Fetch the element that has to be sunk.\n    const element = this.content[n];\n\n    // When at 0, an element can not sink any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      const parentN = ((n + 1) >> 1) - 1;\n      const parent = this.content[parentN];\n\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        // Swap the elements if the parent is greater.\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        // Update 'n' to continue at the new position.\n        n = parentN;\n      } else {\n        // Found a parent that is less, no need to sink any further.\n        break;\n      }\n    }\n  }\n\n  bubbleUp (n) {\n    // Look up the target element and its score.\n    const length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      const child2N = (n + 1) << 1,\n        child1N = child2N - 1;\n      // This is used to store the new position of the element,\n      // if any.\n      let swap = null;\n      let child1Score;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        const child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        const child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      }\n\n      // Otherwise, we are done.\n      else {\n        break;\n      }\n    }\n  }\n\n}\n\nmodule.exports = BinaryHeap;\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = ArrayCollisionMatrix;\n\n/**\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n * @class ArrayCollisionMatrix\n * @constructor\n */\nfunction ArrayCollisionMatrix() {\n\n    /**\n     * The matrix storage\n     * @property matrix\n     * @type {Array}\n     */\n    this.matrix = [];\n}\n\n/**\n * Get an element\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nArrayCollisionMatrix.prototype.get = function(i, j) {\n    i = i.index;\n    j = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    return this.matrix[(i*(i + 1)>>1) + j-1];\n};\n\n/**\n * Set an element\n * @method set\n * @param {Number} i\n * @param {Number} j\n * @param {Number} value\n */\nArrayCollisionMatrix.prototype.set = function(i, j, value) {\n    i = i.index;\n    j = j.index;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    this.matrix[(i*(i + 1)>>1) + j-1] = value ? 1 : 0;\n};\n\n/**\n * Sets all elements to zero\n * @method reset\n */\nArrayCollisionMatrix.prototype.reset = function() {\n    for (var i=0, l=this.matrix.length; i!==l; i++) {\n        this.matrix[i]=0;\n    }\n};\n\n/**\n * Sets the max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\nArrayCollisionMatrix.prototype.setNumObjects = function(n) {\n    this.matrix.length = n*(n-1)>>1;\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","THREE.FBXLoader = require('../../lib/FBXLoader');\n\n/**\n * fbx-model\n *\n * Loader for FBX format. Supports ASCII, but *not* binary, models.\n */\nmodule.exports = AFRAME.registerComponent('fbx-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    const loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'fbx', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n","/**\n * object-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.ObjectLoader, which typically\n * includes multiple meshes or an entire scene.\n *\n * Check the console for errors, if in doubt. You may need to use `json-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('object-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    loader = new THREE.ObjectLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, (object) => {\n\n      // Enable skinning, if applicable.\n      object.traverse((o) => {\n        if (o instanceof THREE.SkinnedMesh && o.material) {\n          o.material.skinning = !!((o.geometry && o.geometry.bones) || []).length;\n        }\n      });\n\n      this.load(object);\n    });\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'json', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n","const EPS = 0.1;\n\nmodule.exports = AFRAME.registerComponent('checkpoint-controls', {\n  schema: {\n    enabled: {default: true},\n    mode: {default: 'teleport', oneOf: ['teleport', 'animate']},\n    animateSpeed: {default: 3.0}\n  },\n\n  init: function () {\n    this.active = true;\n    this.checkpoint = null;\n\n    this.isNavMeshConstrained = false;\n\n    this.offset = new THREE.Vector3();\n    this.position = new THREE.Vector3();\n    this.targetPosition = new THREE.Vector3();\n  },\n\n  play: function () { this.active = true; },\n  pause: function () { this.active = false; },\n\n  setCheckpoint: function (checkpoint) {\n    const el = this.el;\n\n    if (!this.active) return;\n    if (this.checkpoint === checkpoint) return;\n\n    if (this.checkpoint) {\n      el.emit('navigation-end', {checkpoint: this.checkpoint});\n    }\n\n    this.checkpoint = checkpoint;\n    this.sync();\n\n    // Ignore new checkpoint if we're already there.\n    if (this.position.distanceTo(this.targetPosition) < EPS) {\n      this.checkpoint = null;\n      return;\n    }\n\n    el.emit('navigation-start', {checkpoint: checkpoint});\n\n    if (this.data.mode === 'teleport') {\n      this.el.setAttribute('position', this.targetPosition);\n      this.checkpoint = null;\n      el.emit('navigation-end', {checkpoint: checkpoint});\n      el.components['movement-controls'].updateNavLocation();\n    }\n  },\n\n  isVelocityActive: function () {\n    return !!(this.active && this.checkpoint);\n  },\n\n  getVelocity: function () {\n    if (!this.active) return;\n\n    const data = this.data;\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    const checkpoint = this.checkpoint;\n\n    this.sync();\n    if (position.distanceTo(targetPosition) < EPS) {\n      this.checkpoint = null;\n      this.el.emit('navigation-end', {checkpoint: checkpoint});\n      return offset.set(0, 0, 0);\n    }\n    offset.setLength(data.animateSpeed);\n    return offset;\n  },\n\n  sync: function () {\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n\n    position.copy(this.el.getAttribute('position'));\n    targetPosition.copy(this.checkpoint.object3D.getWorldPosition());\n    targetPosition.add(this.checkpoint.components.checkpoint.getOffset());\n    offset.copy(targetPosition).sub(position);\n  }\n});\n","/**\n * Flat grid.\n *\n * Defaults to 75x75.\n */\nmodule.exports = AFRAME.registerPrimitive('a-grid', {\n  defaultComponents: {\n    geometry: {\n      primitive: 'plane',\n      width: 75,\n      height: 75\n    },\n    rotation: {x: -90, y: 0, z: 0},\n    material: {\n      src: 'url(https://cdn.rawgit.com/donmccurdy/aframe-extras/v1.16.3/assets/grid.png)',\n      repeat: '75 75'\n    }\n  },\n  mappings: {\n    width: 'geometry.width',\n    height: 'geometry.height',\n    src: 'material.src'\n  }\n});\n","module.exports = SPHSystem;\n\nvar Shape = require('../shapes/Shape');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Particle = require('../shapes/Particle');\nvar Body = require('../objects/Body');\nvar Material = require('../material/Material');\n\n/**\n * Smoothed-particle hydrodynamics system\n * @class SPHSystem\n * @constructor\n */\nfunction SPHSystem(){\n    this.particles = [];\n\t\n    /**\n     * Density of the system (kg/m3).\n     * @property {number} density\n     */\n    this.density = 1;\n\t\n    /**\n     * Distance below which two particles are considered to be neighbors.\n     * It should be adjusted so there are about 15-20 neighbor particles within this radius.\n     * @property {number} smoothingRadius\n     */\n    this.smoothingRadius = 1;\n    this.speedOfSound = 1;\n\t\n    /**\n     * Viscosity of the system.\n     * @property {number} viscosity\n     */\n    this.viscosity = 0.01;\n    this.eps = 0.000001;\n\n    // Stuff Computed per particle\n    this.pressures = [];\n    this.densities = [];\n    this.neighbors = [];\n}\n\n/**\n * Add a particle to the system.\n * @method add\n * @param {Body} particle\n */\nSPHSystem.prototype.add = function(particle){\n    this.particles.push(particle);\n    if(this.neighbors.length < this.particles.length){\n        this.neighbors.push([]);\n    }\n};\n\n/**\n * Remove a particle from the system.\n * @method remove\n * @param {Body} particle\n */\nSPHSystem.prototype.remove = function(particle){\n    var idx = this.particles.indexOf(particle);\n    if(idx !== -1){\n        this.particles.splice(idx,1);\n        if(this.neighbors.length > this.particles.length){\n            this.neighbors.pop();\n        }\n    }\n};\n\n/**\n * Get neighbors within smoothing volume, save in the array neighbors\n * @method getNeighbors\n * @param {Body} particle\n * @param {Array} neighbors\n */\nvar SPHSystem_getNeighbors_dist = new Vec3();\nSPHSystem.prototype.getNeighbors = function(particle,neighbors){\n    var N = this.particles.length,\n        id = particle.id,\n        R2 = this.smoothingRadius * this.smoothingRadius,\n        dist = SPHSystem_getNeighbors_dist;\n    for(var i=0; i!==N; i++){\n        var p = this.particles[i];\n        p.position.vsub(particle.position,dist);\n        if(id!==p.id && dist.norm2() < R2){\n            neighbors.push(p);\n        }\n    }\n};\n\n// Temp vectors for calculation\nvar SPHSystem_update_dist = new Vec3(),\n    SPHSystem_update_a_pressure = new Vec3(),\n    SPHSystem_update_a_visc = new Vec3(),\n    SPHSystem_update_gradW = new Vec3(),\n    SPHSystem_update_r_vec = new Vec3(),\n    SPHSystem_update_u = new Vec3(); // Relative velocity\nSPHSystem.prototype.update = function(){\n    var N = this.particles.length,\n        dist = SPHSystem_update_dist,\n        cs = this.speedOfSound,\n        eps = this.eps;\n\n    for(var i=0; i!==N; i++){\n        var p = this.particles[i]; // Current particle\n        var neighbors = this.neighbors[i];\n\n        // Get neighbors\n        neighbors.length = 0;\n        this.getNeighbors(p,neighbors);\n        neighbors.push(this.particles[i]); // Add current too\n        var numNeighbors = neighbors.length;\n\n        // Accumulate density for the particle\n        var sum = 0.0;\n        for(var j=0; j!==numNeighbors; j++){\n\n            //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\n            p.position.vsub(neighbors[j].position, dist);\n            var len = dist.norm();\n\n            var weight = this.w(len);\n            sum += neighbors[j].mass * weight;\n        }\n\n        // Save\n        this.densities[i] = sum;\n        this.pressures[i] = cs * cs * (this.densities[i] - this.density);\n    }\n\n    // Add forces\n\n    // Sum to these accelerations\n    var a_pressure= SPHSystem_update_a_pressure;\n    var a_visc =    SPHSystem_update_a_visc;\n    var gradW =     SPHSystem_update_gradW;\n    var r_vec =     SPHSystem_update_r_vec;\n    var u =         SPHSystem_update_u;\n\n    for(var i=0; i!==N; i++){\n\n        var particle = this.particles[i];\n\n        a_pressure.set(0,0,0);\n        a_visc.set(0,0,0);\n\n        // Init vars\n        var Pij;\n        var nabla;\n        var Vij;\n\n        // Sum up for all other neighbors\n        var neighbors = this.neighbors[i];\n        var numNeighbors = neighbors.length;\n\n        //printf(\"Neighbors: \");\n        for(var j=0; j!==numNeighbors; j++){\n\n            var neighbor = neighbors[j];\n            //printf(\"%d \",nj);\n\n            // Get r once for all..\n            particle.position.vsub(neighbor.position,r_vec);\n            var r = r_vec.norm();\n\n            // Pressure contribution\n            Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i]*this.densities[i] + eps) + this.pressures[j] / (this.densities[j]*this.densities[j] + eps));\n            this.gradw(r_vec, gradW);\n            // Add to pressure acceleration\n            gradW.mult(Pij , gradW);\n            a_pressure.vadd(gradW, a_pressure);\n\n            // Viscosity contribution\n            neighbor.velocity.vsub(particle.velocity, u);\n            u.mult( 1.0 / (0.0001+this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass , u );\n            nabla = this.nablaw(r);\n            u.mult(nabla,u);\n            // Add to viscosity acceleration\n            a_visc.vadd( u, a_visc );\n        }\n\n        // Calculate force\n        a_visc.mult(particle.mass, a_visc);\n        a_pressure.mult(particle.mass, a_pressure);\n\n        // Add force to particles\n        particle.force.vadd(a_visc, particle.force);\n        particle.force.vadd(a_pressure, particle.force);\n    }\n};\n\n// Calculate the weight using the W(r) weightfunction\nSPHSystem.prototype.w = function(r){\n    // 315\n    var h = this.smoothingRadius;\n    return 315.0/(64.0*Math.PI*Math.pow(h,9)) * Math.pow(h*h-r*r,3);\n};\n\n// calculate gradient of the weight function\nSPHSystem.prototype.gradw = function(rVec,resultVec){\n    var r = rVec.norm(),\n        h = this.smoothingRadius;\n    rVec.mult(945.0/(32.0*Math.PI*Math.pow(h,9)) * Math.pow((h*h-r*r),2) , resultVec);\n};\n\n// Calculate nabla(W)\nSPHSystem.prototype.nablaw = function(r){\n    var h = this.smoothingRadius;\n    var nabla = 945.0/(32.0*Math.PI*Math.pow(h,9)) * (h*h-r*r)*(7*r*r - 3*h*h);\n    return nabla;\n};\n","module.exports = Vec3Pool;\n\nvar Vec3 = require('../math/Vec3');\nvar Pool = require('./Pool');\n\n/**\n * @class Vec3Pool\n * @constructor\n * @extends Pool\n */\nfunction Vec3Pool(){\n    Pool.call(this);\n    this.type = Vec3;\n}\nVec3Pool.prototype = new Pool();\n\n/**\n * Construct a vector\n * @method constructObject\n * @return {Vec3}\n */\nVec3Pool.prototype.constructObject = function(){\n    return new Vec3();\n};\n","/**\n * Recursively applies a MeshNormalMaterial to the entity, such that\n * face colors are determined by their orientation. Helpful for\n * debugging geometry\n */\nmodule.exports = AFRAME.registerComponent('normal-material', {\n  init: function () {\n    this.material = new THREE.MeshNormalMaterial({flatShading: true});\n    this.applyMaterial = this.applyMaterial.bind(this);\n    this.el.addEventListener('object3dset', this.applyMaterial);\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.applyMaterial);\n  },\n\n  applyMaterial: function () {\n    this.el.object3D.traverse((node) => {\n      if (node.isMesh) node.material = this.material;\n    });\n  }\n});\n","const utils = require('./utils');\n\nclass Channel {\n  constructor () {\n    this.portals = [];\n  }\n\n  push (p1, p2) {\n    if (p2 === undefined) p2 = p1;\n    this.portals.push({\n      left: p1,\n      right: p2\n    });\n  }\n\n  stringPull () {\n    const portals = this.portals;\n    const pts = [];\n    // Init scan state\n    let portalApex, portalLeft, portalRight;\n    let apexIndex = 0,\n      leftIndex = 0,\n      rightIndex = 0;\n\n    portalApex = portals[0].left;\n    portalLeft = portals[0].left;\n    portalRight = portals[0].right;\n\n    // Add start point.\n    pts.push(portalApex);\n\n    for (let i = 1; i < portals.length; i++) {\n      const left = portals[i].left;\n      const right = portals[i].right;\n\n      // Update right vertex.\n      if (utils.triarea2(portalApex, portalRight, right) <= 0.0) {\n        if (utils.vequal(portalApex, portalRight) || utils.triarea2(portalApex, portalLeft, right) > 0.0) {\n          // Tighten the funnel.\n          portalRight = right;\n          rightIndex = i;\n        } else {\n          // Right over left, insert left to path and restart scan from portal left point.\n          pts.push(portalLeft);\n          // Make current left the new apex.\n          portalApex = portalLeft;\n          apexIndex = leftIndex;\n          // Reset portal\n          portalLeft = portalApex;\n          portalRight = portalApex;\n          leftIndex = apexIndex;\n          rightIndex = apexIndex;\n          // Restart scan\n          i = apexIndex;\n          continue;\n        }\n      }\n\n      // Update left vertex.\n      if (utils.triarea2(portalApex, portalLeft, left) >= 0.0) {\n        if (utils.vequal(portalApex, portalLeft) || utils.triarea2(portalApex, portalRight, left) < 0.0) {\n          // Tighten the funnel.\n          portalLeft = left;\n          leftIndex = i;\n        } else {\n          // Left over right, insert right to path and restart scan from portal right point.\n          pts.push(portalRight);\n          // Make current right the new apex.\n          portalApex = portalRight;\n          apexIndex = rightIndex;\n          // Reset portal\n          portalLeft = portalApex;\n          portalRight = portalApex;\n          leftIndex = apexIndex;\n          rightIndex = apexIndex;\n          // Restart scan\n          i = apexIndex;\n          continue;\n        }\n      }\n    }\n\n    if ((pts.length === 0) || (!utils.vequal(pts[pts.length - 1], portals[portals.length - 1].left))) {\n      // Append last point to path.\n      pts.push(portals[portals.length - 1].left);\n    }\n\n    this.path = pts;\n    return pts;\n  }\n}\n\nmodule.exports = Channel;\n","const vg = require('../../lib/hex-grid.min.js');\nconst defaultHexGrid = require('../../lib/default-hex-grid');\n\n/**\n * Hex grid.\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-hexgrid', {\n  defaultComponents: {\n    'hexgrid': {}\n  },\n  mappings: {\n    src: 'hexgrid.src'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('hexgrid', {\n  dependencies: ['material'],\n  schema: {\n    src: {type: 'asset'}\n  },\n  init: function () {\n    const data = this.data;\n    if (data.src) {\n      fetch(data.src)\n        .then((response) => response.json())\n        .then((json) => this.addMesh(json));\n    } else {\n      this.addMesh(defaultHexGrid);\n    }\n  },\n  addMesh: function (json) {\n    const grid = new vg.HexGrid();\n    grid.fromJSON(json);\n    const board = new vg.Board(grid);\n    board.generateTilemap();\n    this.el.setObject3D('mesh', board.group);\n    this.addMaterial();\n  },\n  addMaterial: function () {\n    const materialComponent = this.el.components.material;\n    const material = (materialComponent || {}).material;\n    if (!material) return;\n    this.el.object3D.traverse((node) => {\n      if (node.isMesh) {\n        node.material = material;\n      }\n    });\n  },\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  }\n});\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","/**\n * Base class for objects that dispatches events.\n * @class EventTarget\n * @constructor\n */\nvar EventTarget = function () {\n\n};\n\nmodule.exports = EventTarget;\n\nEventTarget.prototype = {\n    constructor: EventTarget,\n\n    /**\n     * Add an event listener\n     * @method addEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {EventTarget} The self object, for chainability.\n     */\n    addEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ this._listeners = {}; }\n        var listeners = this._listeners;\n        if ( listeners[ type ] === undefined ) {\n            listeners[ type ] = [];\n        }\n        if ( listeners[ type ].indexOf( listener ) === - 1 ) {\n            listeners[ type ].push( listener );\n        }\n        return this;\n    },\n\n    /**\n     * Check if an event listener is added\n     * @method hasEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {Boolean}\n     */\n    hasEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ return false; }\n        var listeners = this._listeners;\n        if ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n            return true;\n        }\n        return false;\n    },\n\n    /**\n     * Check if any event listener of the given type is added\n     * @method hasAnyEventListener\n     * @param  {String} type\n     * @return {Boolean}\n     */\n    hasAnyEventListener: function ( type ) {\n        if ( this._listeners === undefined ){ return false; }\n        var listeners = this._listeners;\n        return ( listeners[ type ] !== undefined );\n    },\n\n    /**\n     * Remove an event listener\n     * @method removeEventListener\n     * @param  {String} type\n     * @param  {Function} listener\n     * @return {EventTarget} The self object, for chainability.\n     */\n    removeEventListener: function ( type, listener ) {\n        if ( this._listeners === undefined ){ return this; }\n        var listeners = this._listeners;\n        if ( listeners[type] === undefined ){ return this; }\n        var index = listeners[ type ].indexOf( listener );\n        if ( index !== - 1 ) {\n            listeners[ type ].splice( index, 1 );\n        }\n        return this;\n    },\n\n    /**\n     * Emit an event.\n     * @method dispatchEvent\n     * @param  {Object} event\n     * @param  {String} event.type\n     * @return {EventTarget} The self object, for chainability.\n     */\n    dispatchEvent: function ( event ) {\n        if ( this._listeners === undefined ){ return this; }\n        var listeners = this._listeners;\n        var listenerArray = listeners[ event.type ];\n        if ( listenerArray !== undefined ) {\n            event.target = this;\n            for ( var i = 0, l = listenerArray.length; i < l; i ++ ) {\n                listenerArray[ i ].call( this, event );\n            }\n        }\n        return this;\n    }\n};\n","module.exports = Sphere;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * Spherical shape\n * @class Sphere\n * @constructor\n * @extends Shape\n * @param {Number} radius The radius of the sphere, a non-negative number.\n * @author schteppe / http://github.com/schteppe\n */\nfunction Sphere(radius){\n    Shape.call(this);\n\n    /**\n     * @property {Number} radius\n     */\n    this.radius = radius!==undefined ? Number(radius) : 1.0;\n    this.type = Shape.types.SPHERE;\n\n    if(this.radius < 0){\n        throw new Error('The sphere radius cannot be negative.');\n    }\n\n    this.updateBoundingSphereRadius();\n}\nSphere.prototype = new Shape();\nSphere.prototype.constructor = Sphere;\n\nSphere.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    var I = 2.0*mass*this.radius*this.radius/5.0;\n    target.x = I;\n    target.y = I;\n    target.z = I;\n    return target;\n};\n\nSphere.prototype.volume = function(){\n    return 4.0 * Math.PI * this.radius / 3.0;\n};\n\nSphere.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = this.radius;\n};\n\nSphere.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    var r = this.radius;\n    var axes = ['x','y','z'];\n    for(var i=0; i<axes.length; i++){\n        var ax = axes[i];\n        min[ax] = pos[ax] - r;\n        max[ax] = pos[ax] + r;\n    }\n};\n","module.exports = {\n  \"size\": 5,\n  \"cellSize\": 10,\n  \"extrudeSettings\": {\n    \"amount\": 1,\n    \"bevelEnabled\": true,\n    \"bevelSegments\": 1,\n    \"steps\": 1,\n    \"bevelSize\": 0.5,\n    \"bevelThickness\": 0.5\n  },\n  \"autogenerated\": true,\n  \"cells\": [\n    {\n      \"q\": -1,\n      \"r\": 0,\n      \"s\": 1,\n      \"h\": 1,\n      \"walkable\": true,\n      \"userData\": {}\n    },\n    {\n      \"q\": 0,\n      \"r\": -1,\n      \"s\": 1,\n      \"h\": 1,\n      \"walkable\": true,\n      \"userData\": {}\n    },\n    {\n      \"q\": 0,\n      \"r\": 0,\n      \"s\": 0,\n      \"h\": 1,\n      \"walkable\": true,\n      \"userData\": {}\n    },\n    {\n      \"q\": 1,\n      \"r\": -1,\n      \"s\": 0,\n      \"h\": 1,\n      \"walkable\": true,\n      \"userData\": {}\n    },\n    {\n      \"q\": -1,\n      \"r\": 1,\n      \"s\": 0,\n      \"h\": 0,\n      \"walkable\": true,\n      \"userData\": {}\n    },\n    {\n      \"q\": 0,\n      \"r\": 1,\n      \"s\": -1,\n      \"h\": 0,\n      \"walkable\": true,\n      \"userData\": {}\n    },\n    {\n      \"q\": 1,\n      \"r\": 0,\n      \"s\": -1,\n      \"h\": 0,\n      \"walkable\": true,\n      \"userData\": {}\n    }]\n};\n","module.exports = RotationalEquation;\n\nvar Vec3 = require('../math/Vec3');\nvar Mat3 = require('../math/Mat3');\nvar Equation = require('./Equation');\n\n/**\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\n * @class RotationalEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {number} [options.maxForce]\n * @extends Equation\n */\nfunction RotationalEquation(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\n\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n\n    this.maxAngle = Math.PI / 2;\n}\n\nRotationalEquation.prototype = new Equation();\nRotationalEquation.prototype.constructor = RotationalEquation;\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nRotationalEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n\n        ni = this.axisA,\n        nj = this.axisB,\n\n        nixnj = tmpVec1,\n        njxni = tmpVec2,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // Caluclate cross products\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni);\n\n    // g = ni * nj\n    // gdot = (nj x ni) * wi + (ni x nj) * wj\n    // G = [0 njxni 0 nixnj]\n    // W = [vi wi vj wj]\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n\n    var g = Math.cos(this.maxAngle) - ni.dot(nj),\n        GW = this.computeGW(),\n        GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h * GiMf;\n\n    return B;\n};\n\n","module.exports = FrictionEquation;\n\nvar Equation = require('./Equation');\nvar Vec3 = require('../math/Vec3');\nvar Mat3 = require('../math/Mat3');\n\n/**\n * Constrains the slipping in a contact along a tangent\n * @class FrictionEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\n * @extends Equation\n */\nfunction FrictionEquation(bodyA, bodyB, slipForce){\n    Equation.call(this,bodyA, bodyB, -slipForce, slipForce);\n    this.ri = new Vec3();\n    this.rj = new Vec3();\n    this.t = new Vec3(); // tangent\n}\n\nFrictionEquation.prototype = new Equation();\nFrictionEquation.prototype.constructor = FrictionEquation;\n\nvar FrictionEquation_computeB_temp1 = new Vec3();\nvar FrictionEquation_computeB_temp2 = new Vec3();\nFrictionEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n        ri = this.ri,\n        rj = this.rj,\n        rixt = FrictionEquation_computeB_temp1,\n        rjxt = FrictionEquation_computeB_temp2,\n        t = this.t;\n\n    // Caluclate cross products\n    ri.cross(t,rixt);\n    rj.cross(t,rjxt);\n\n    // G = [-t -rixt t rjxt]\n    // And remember, this is a pure velocity constraint, g is always zero!\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n    t.negate(GA.spatial);\n    rixt.negate(GA.rotational);\n    GB.spatial.copy(t);\n    GB.rotational.copy(rjxt);\n\n    var GW = this.computeGW();\n    var GiMf = this.computeGiMf();\n\n    var B = - GW * b - h * GiMf;\n\n    return B;\n};\n","/**\n * Source: https://github.com/Adobe-Marketing-Cloud/fetch-script\n */\n\nfunction getScriptId() {\n  return 'script_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n}\n\nfunction createScript(url, id) {\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = true;\n  script.id = id;\n  script.src = url;\n\n  return script;\n}\n\nfunction removeScript(id) {\n  const script = document.getElementById(id);\n  const parent = script.parentNode;\n\n  try {\n    parent && parent.removeChild(script);\n  } catch (e) {\n    // ignore\n  }\n}\n\nfunction appendScript(script) {\n  const firstScript = document.getElementsByTagName('script')[0];\n  firstScript.parentNode.insertBefore(script, firstScript);\n}\n\nfunction fetchScriptInternal(url, options, Promise) {\n  return new Promise(function(resolve, reject) {\n    const timeout = options.timeout || 5000;\n    const scriptId = getScriptId();\n    const script = createScript(url, scriptId);\n\n    const timeoutId = setTimeout(function() {\n      reject(new Error('Script request to ' + url + ' timed out'));\n\n      removeScript(scriptId);\n    }, timeout);\n\n    const disableTimeout = function(timeoutId) { clearTimeout(timeoutId); };\n\n    script.addEventListener('load', function(e) {\n      resolve({ok: true});\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    script.addEventListener('error', function(e) {\n      reject(new Error('Script request to ' + url + ' failed ' + e));\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    appendScript(script);\n  });\n}\n\nfunction fetchScript(settings) {\n  settings = settings || {};\n  return function (url, options) {\n    options = options || {};\n    return fetchScriptInternal(url, options, settings.Promise || Promise);\n  };\n}\n\nmodule.exports = fetchScript;\n","var AABB = require('../collision/AABB');\nvar Vec3 = require('../math/Vec3');\n\nmodule.exports = Octree;\n\n/**\n * @class OctreeNode\n * @param {object} [options]\n * @param {Octree} [options.root]\n * @param {AABB} [options.aabb]\n */\nfunction OctreeNode(options){\n    options = options || {};\n\n    /**\n     * The root node\n     * @property {OctreeNode} root\n     */\n    this.root = options.root || null;\n\n    /**\n     * Boundary of this node\n     * @property {AABB} aabb\n     */\n    this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n\n    /**\n     * Contained data at the current node level.\n     * @property {Array} data\n     */\n    this.data = [];\n\n    /**\n     * Children to this node\n     * @property {Array} children\n     */\n    this.children = [];\n}\n\n/**\n * @class Octree\n * @param {AABB} aabb The total AABB of the tree\n * @param {object} [options]\n * @param {number} [options.maxDepth=8]\n * @extends OctreeNode\n */\nfunction Octree(aabb, options){\n    options = options || {};\n    options.root = null;\n    options.aabb = aabb;\n    OctreeNode.call(this, options);\n\n    /**\n     * Maximum subdivision depth\n     * @property {number} maxDepth\n     */\n    this.maxDepth = typeof(options.maxDepth) !== 'undefined' ? options.maxDepth : 8;\n}\nOctree.prototype = new OctreeNode();\n\nOctreeNode.prototype.reset = function(aabb, options){\n    this.children.length = this.data.length = 0;\n};\n\n/**\n * Insert data into this node\n * @method insert\n * @param  {AABB} aabb\n * @param  {object} elementData\n * @return {boolean} True if successful, otherwise false\n */\nOctreeNode.prototype.insert = function(aabb, elementData, level){\n    var nodeData = this.data;\n    level = level || 0;\n\n    // Ignore objects that do not belong in this node\n    if (!this.aabb.contains(aabb)){\n        return false; // object cannot be added\n    }\n\n    var children = this.children;\n\n    if(level < (this.maxDepth || this.root.maxDepth)){\n        // Subdivide if there are no children yet\n        var subdivided = false;\n        if (!children.length){\n            this.subdivide();\n            subdivided = true;\n        }\n\n        // add to whichever node will accept it\n        for (var i = 0; i !== 8; i++) {\n            if (children[i].insert(aabb, elementData, level + 1)){\n                return true;\n            }\n        }\n\n        if(subdivided){\n            // No children accepted! Might as well just remove em since they contain none\n            children.length = 0;\n        }\n    }\n\n    // Too deep, or children didnt want it. add it in current node\n    nodeData.push(elementData);\n\n    return true;\n};\n\nvar halfDiagonal = new Vec3();\n\n/**\n * Create 8 equally sized children nodes and put them in the .children array.\n * @method subdivide\n */\nOctreeNode.prototype.subdivide = function() {\n    var aabb = this.aabb;\n    var l = aabb.lowerBound;\n    var u = aabb.upperBound;\n\n    var children = this.children;\n\n    children.push(\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,0) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(1,0,1) }) }),\n        new OctreeNode({ aabb: new AABB({ lowerBound: new Vec3(0,1,0) }) })\n    );\n\n    u.vsub(l, halfDiagonal);\n    halfDiagonal.scale(0.5, halfDiagonal);\n\n    var root = this.root || this;\n\n    for (var i = 0; i !== 8; i++) {\n        var child = children[i];\n\n        // Set current node as root\n        child.root = root;\n\n        // Compute bounds\n        var lowerBound = child.aabb.lowerBound;\n        lowerBound.x *= halfDiagonal.x;\n        lowerBound.y *= halfDiagonal.y;\n        lowerBound.z *= halfDiagonal.z;\n\n        lowerBound.vadd(l, lowerBound);\n\n        // Upper bound is always lower bound + halfDiagonal\n        lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n    }\n};\n\n/**\n * Get all data, potentially within an AABB\n * @method aabbQuery\n * @param  {AABB} aabb\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.aabbQuery = function(aabb, result) {\n\n    var nodeData = this.data;\n\n    // abort if the range does not intersect this node\n    // if (!this.aabb.overlaps(aabb)){\n    //     return result;\n    // }\n\n    // Add objects at this level\n    // Array.prototype.push.apply(result, nodeData);\n\n    // Add child data\n    // @todo unwrap recursion into a queue / loop, that's faster in JS\n    var children = this.children;\n\n\n    // for (var i = 0, N = this.children.length; i !== N; i++) {\n    //     children[i].aabbQuery(aabb, result);\n    // }\n\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        if (node.aabb.overlaps(aabb)){\n            Array.prototype.push.apply(result, node.data);\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n\n    return result;\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Get all data, potentially intersected by a ray.\n * @method rayQuery\n * @param  {Ray} ray\n * @param  {Transform} treeTransform\n * @param  {array} result\n * @return {array} The \"result\" object\n */\nOctreeNode.prototype.rayQuery = function(ray, treeTransform, result) {\n\n    // Use aabb query for now.\n    // @todo implement real ray query which needs less lookups\n    ray.getAABB(tmpAABB);\n    tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n    this.aabbQuery(tmpAABB, result);\n\n    return result;\n};\n\n/**\n * @method removeEmptyNodes\n */\nOctreeNode.prototype.removeEmptyNodes = function() {\n    var queue = [this];\n    while (queue.length) {\n        var node = queue.pop();\n        for (var i = node.children.length - 1; i >= 0; i--) {\n            if(!node.children[i].data.length){\n                node.children.splice(i, 1);\n            }\n        }\n        Array.prototype.push.apply(queue, node.children);\n    }\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","const ACCEL_G = -9.8, // m/s^2\n    EASING = -15; // m/s^2\n\n/**\n * Jump ability.\n */\nmodule.exports = AFRAME.registerComponent('jump-ability', {\n  dependencies: ['velocity'],\n\n  /* Schema\n  ——————————————————————————————————————————————*/\n\n  schema: {\n    on: { default: 'keydown:Space gamepadbuttondown:0' },\n    playerHeight: { default: 1.764 },\n    maxJumps: { default: 1 },\n    distance: { default: 5 },\n    debug: { default: false }\n  },\n\n  init: function () {\n    this.velocity = 0;\n    this.numJumps = 0;\n\n    const beginJump = this.beginJump.bind(this),\n        events = this.data.on.split(' ');\n    this.bindings = {};\n    for (let i = 0; i <  events.length; i++) {\n      this.bindings[events[i]] = beginJump;\n      this.el.addEventListener(events[i], beginJump);\n    }\n    this.bindings.collide = this.onCollide.bind(this);\n    this.el.addEventListener('collide', this.bindings.collide);\n  },\n\n  remove: function () {\n    for (var event in this.bindings) {\n      if (this.bindings.hasOwnProperty(event)) {\n        this.el.removeEventListener(event, this.bindings[event]);\n        delete this.bindings[event];\n      }\n    }\n    this.el.removeEventListener('collide', this.bindings.collide);\n    delete this.bindings.collide;\n  },\n\n  beginJump: function () {\n    if (this.numJumps < this.data.maxJumps) {\n      const data = this.data,\n          initialVelocity = Math.sqrt(-2 * data.distance * (ACCEL_G + EASING)),\n          v = this.el.getAttribute('velocity');\n      this.el.setAttribute('velocity', {x: v.x, y: initialVelocity, z: v.z});\n      this.numJumps++;\n      this.el.emit('jumpstart');\n    }\n  },\n\n  onCollide: function () {\n    if (this.numJumps > 0) this.el.emit('jumpend');\n    this.numJumps = 0;\n  }\n});\n","/**\n * Stub version of webworkify, for debugging code outside of a webworker.\n */\nfunction webworkifyDebug (worker) {\n  var targetA = new EventTarget(),\n      targetB = new EventTarget();\n\n  targetA.setTarget(targetB);\n  targetB.setTarget(targetA);\n\n  worker(targetA);\n  return targetB;\n}\n\nmodule.exports = webworkifyDebug;\n\n/******************************************************************************\n * EventTarget\n */\n\nfunction EventTarget () {\n  this.listeners = [];\n}\n\nEventTarget.prototype.setTarget = function (target) {\n  this.target = target;\n};\n\nEventTarget.prototype.addEventListener = function (type, fn) {\n  this.listeners.push(fn);\n};\n\nEventTarget.prototype.dispatchEvent = function (type, event) {\n  for (var i = 0; i < this.listeners.length; i++) {\n    this.listeners[i](event);\n  }\n};\n\nEventTarget.prototype.postMessage = function (msg) {\n  this.target.dispatchEvent('message', {data: msg});\n};\n","module.exports = Ray;\n\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Transform = require('../math/Transform');\nvar ConvexPolyhedron = require('../shapes/ConvexPolyhedron');\nvar Box = require('../shapes/Box');\nvar RaycastResult = require('../collision/RaycastResult');\nvar Shape = require('../shapes/Shape');\nvar AABB = require('../collision/AABB');\n\n/**\n * A line in 3D space that intersects bodies and return points.\n * @class Ray\n * @constructor\n * @param {Vec3} from\n * @param {Vec3} to\n */\nfunction Ray(from, to){\n    /**\n     * @property {Vec3} from\n     */\n    this.from = from ? from.clone() : new Vec3();\n\n    /**\n     * @property {Vec3} to\n     */\n    this.to = to ? to.clone() : new Vec3();\n\n    /**\n     * @private\n     * @property {Vec3} _direction\n     */\n    this._direction = new Vec3();\n\n    /**\n     * The precision of the ray. Used when checking parallelity etc.\n     * @property {Number} precision\n     */\n    this.precision = 0.0001;\n\n    /**\n     * Set to true if you want the Ray to take .collisionResponse flags into account on bodies and shapes.\n     * @property {Boolean} checkCollisionResponse\n     */\n    this.checkCollisionResponse = true;\n\n    /**\n     * If set to true, the ray skips any hits with normal.dot(rayDirection) < 0.\n     * @property {Boolean} skipBackfaces\n     */\n    this.skipBackfaces = false;\n\n    /**\n     * @property {number} collisionFilterMask\n     * @default -1\n     */\n    this.collisionFilterMask = -1;\n\n    /**\n     * @property {number} collisionFilterGroup\n     * @default -1\n     */\n    this.collisionFilterGroup = -1;\n\n    /**\n     * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\n     * @property {number} mode\n     */\n    this.mode = Ray.ANY;\n\n    /**\n     * Current result object.\n     * @property {RaycastResult} result\n     */\n    this.result = new RaycastResult();\n\n    /**\n     * Will be set to true during intersectWorld() if the ray hit anything.\n     * @property {Boolean} hasHit\n     */\n    this.hasHit = false;\n\n    /**\n     * Current, user-provided result callback. Will be used if mode is Ray.ALL.\n     * @property {Function} callback\n     */\n    this.callback = function(result){};\n}\nRay.prototype.constructor = Ray;\n\nRay.CLOSEST = 1;\nRay.ANY = 2;\nRay.ALL = 4;\n\nvar tmpAABB = new AABB();\nvar tmpArray = [];\n\n/**\n * Do itersection against all bodies in the given World.\n * @method intersectWorld\n * @param  {World} world\n * @param  {object} options\n * @return {Boolean} True if the ray hit anything, otherwise false.\n */\nRay.prototype.intersectWorld = function (world, options) {\n    this.mode = options.mode || Ray.ANY;\n    this.result = options.result || new RaycastResult();\n    this.skipBackfaces = !!options.skipBackfaces;\n    this.collisionFilterMask = typeof(options.collisionFilterMask) !== 'undefined' ? options.collisionFilterMask : -1;\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) !== 'undefined' ? options.collisionFilterGroup : -1;\n    if(options.from){\n        this.from.copy(options.from);\n    }\n    if(options.to){\n        this.to.copy(options.to);\n    }\n    this.callback = options.callback || function(){};\n    this.hasHit = false;\n\n    this.result.reset();\n    this._updateDirection();\n\n    this.getAABB(tmpAABB);\n    tmpArray.length = 0;\n    world.broadphase.aabbQuery(world, tmpAABB, tmpArray);\n    this.intersectBodies(tmpArray);\n\n    return this.hasHit;\n};\n\nvar v1 = new Vec3(),\n    v2 = new Vec3();\n\n/*\n * As per \"Barycentric Technique\" as named here http://www.blackpawn.com/texts/pointinpoly/default.html But without the division\n */\nRay.pointInTriangle = pointInTriangle;\nfunction pointInTriangle(p, a, b, c) {\n    c.vsub(a,v0);\n    b.vsub(a,v1);\n    p.vsub(a,v2);\n\n    var dot00 = v0.dot( v0 );\n    var dot01 = v0.dot( v1 );\n    var dot02 = v0.dot( v2 );\n    var dot11 = v1.dot( v1 );\n    var dot12 = v1.dot( v2 );\n\n    var u,v;\n\n    return  ( (u = dot11 * dot02 - dot01 * dot12) >= 0 ) &&\n            ( (v = dot00 * dot12 - dot01 * dot02) >= 0 ) &&\n            ( u + v < ( dot00 * dot11 - dot01 * dot01 ) );\n}\n\n/**\n * Shoot a ray at a body, get back information about the hit.\n * @method intersectBody\n * @private\n * @param {Body} body\n * @param {RaycastResult} [result] Deprecated - set the result property of the Ray instead.\n */\nvar intersectBody_xi = new Vec3();\nvar intersectBody_qi = new Quaternion();\nRay.prototype.intersectBody = function (body, result) {\n    if(result){\n        this.result = result;\n        this._updateDirection();\n    }\n    var checkCollisionResponse = this.checkCollisionResponse;\n\n    if(checkCollisionResponse && !body.collisionResponse){\n        return;\n    }\n\n    if((this.collisionFilterGroup & body.collisionFilterMask)===0 || (body.collisionFilterGroup & this.collisionFilterMask)===0){\n        return;\n    }\n\n    var xi = intersectBody_xi;\n    var qi = intersectBody_qi;\n\n    for (var i = 0, N = body.shapes.length; i < N; i++) {\n        var shape = body.shapes[i];\n\n        if(checkCollisionResponse && !shape.collisionResponse){\n            continue; // Skip\n        }\n\n        body.quaternion.mult(body.shapeOrientations[i], qi);\n        body.quaternion.vmult(body.shapeOffsets[i], xi);\n        xi.vadd(body.position, xi);\n\n        this.intersectShape(\n            shape,\n            qi,\n            xi,\n            body\n        );\n\n        if(this.result._shouldStop){\n            break;\n        }\n    }\n};\n\n/**\n * @method intersectBodies\n * @param {Array} bodies An array of Body objects.\n * @param {RaycastResult} [result] Deprecated\n */\nRay.prototype.intersectBodies = function (bodies, result) {\n    if(result){\n        this.result = result;\n        this._updateDirection();\n    }\n\n    for ( var i = 0, l = bodies.length; !this.result._shouldStop && i < l; i ++ ) {\n        this.intersectBody(bodies[i]);\n    }\n};\n\n/**\n * Updates the _direction vector.\n * @private\n * @method _updateDirection\n */\nRay.prototype._updateDirection = function(){\n    this.to.vsub(this.from, this._direction);\n    this._direction.normalize();\n};\n\n/**\n * @method intersectShape\n * @private\n * @param {Shape} shape\n * @param {Quaternion} quat\n * @param {Vec3} position\n * @param {Body} body\n */\nRay.prototype.intersectShape = function(shape, quat, position, body){\n    var from = this.from;\n\n\n    // Checking boundingSphere\n    var distance = distanceFromIntersection(from, this._direction, position);\n    if ( distance > shape.boundingSphereRadius ) {\n        return;\n    }\n\n    var intersectMethod = this[shape.type];\n    if(intersectMethod){\n        intersectMethod.call(this, shape, quat, position, body, shape);\n    }\n};\n\nvar vector = new Vec3();\nvar normal = new Vec3();\nvar intersectPoint = new Vec3();\n\nvar a = new Vec3();\nvar b = new Vec3();\nvar c = new Vec3();\nvar d = new Vec3();\n\nvar tmpRaycastResult = new RaycastResult();\n\n/**\n * @method intersectBox\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectBox = function(shape, quat, position, body, reportedShape){\n    return this.intersectConvex(shape.convexPolyhedronRepresentation, quat, position, body, reportedShape);\n};\nRay.prototype[Shape.types.BOX] = Ray.prototype.intersectBox;\n\n/**\n * @method intersectPlane\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectPlane = function(shape, quat, position, body, reportedShape){\n    var from = this.from;\n    var to = this.to;\n    var direction = this._direction;\n\n    // Get plane normal\n    var worldNormal = new Vec3(0, 0, 1);\n    quat.vmult(worldNormal, worldNormal);\n\n    var len = new Vec3();\n    from.vsub(position, len);\n    var planeToFrom = len.dot(worldNormal);\n    to.vsub(position, len);\n    var planeToTo = len.dot(worldNormal);\n\n    if(planeToFrom * planeToTo > 0){\n        // \"from\" and \"to\" are on the same side of the plane... bail out\n        return;\n    }\n\n    if(from.distanceTo(to) < planeToFrom){\n        return;\n    }\n\n    var n_dot_dir = worldNormal.dot(direction);\n\n    if (Math.abs(n_dot_dir) < this.precision) {\n        // No intersection\n        return;\n    }\n\n    var planePointToFrom = new Vec3();\n    var dir_scaled_with_t = new Vec3();\n    var hitPointWorld = new Vec3();\n\n    from.vsub(position, planePointToFrom);\n    var t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\n    direction.scale(t, dir_scaled_with_t);\n    from.vadd(dir_scaled_with_t, hitPointWorld);\n\n    this.reportIntersection(worldNormal, hitPointWorld, reportedShape, body, -1);\n};\nRay.prototype[Shape.types.PLANE] = Ray.prototype.intersectPlane;\n\n/**\n * Get the world AABB of the ray.\n * @method getAABB\n * @param  {AABB} aabb\n */\nRay.prototype.getAABB = function(result){\n    var to = this.to;\n    var from = this.from;\n    result.lowerBound.x = Math.min(to.x, from.x);\n    result.lowerBound.y = Math.min(to.y, from.y);\n    result.lowerBound.z = Math.min(to.z, from.z);\n    result.upperBound.x = Math.max(to.x, from.x);\n    result.upperBound.y = Math.max(to.y, from.y);\n    result.upperBound.z = Math.max(to.z, from.z);\n};\n\nvar intersectConvexOptions = {\n    faceList: [0]\n};\nvar worldPillarOffset = new Vec3();\nvar intersectHeightfield_localRay = new Ray();\nvar intersectHeightfield_index = [];\nvar intersectHeightfield_minMax = [];\n\n/**\n * @method intersectHeightfield\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectHeightfield = function(shape, quat, position, body, reportedShape){\n    var data = shape.data,\n        w = shape.elementSize;\n\n    // Convert the ray to local heightfield coordinates\n    var localRay = intersectHeightfield_localRay; //new Ray(this.from, this.to);\n    localRay.from.copy(this.from);\n    localRay.to.copy(this.to);\n    Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\n    Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\n    localRay._updateDirection();\n\n    // Get the index of the data points to test against\n    var index = intersectHeightfield_index;\n    var iMinX, iMinY, iMaxX, iMaxY;\n\n    // Set to max\n    iMinX = iMinY = 0;\n    iMaxX = iMaxY = shape.data.length - 1;\n\n    var aabb = new AABB();\n    localRay.getAABB(aabb);\n\n    shape.getIndexOfPosition(aabb.lowerBound.x, aabb.lowerBound.y, index, true);\n    iMinX = Math.max(iMinX, index[0]);\n    iMinY = Math.max(iMinY, index[1]);\n    shape.getIndexOfPosition(aabb.upperBound.x, aabb.upperBound.y, index, true);\n    iMaxX = Math.min(iMaxX, index[0] + 1);\n    iMaxY = Math.min(iMaxY, index[1] + 1);\n\n    for(var i = iMinX; i < iMaxX; i++){\n        for(var j = iMinY; j < iMaxY; j++){\n\n            if(this.result._shouldStop){\n                return;\n            }\n\n            shape.getAabbAtIndex(i, j, aabb);\n            if(!aabb.overlapsRay(localRay)){\n                continue;\n            }\n\n            // Lower triangle\n            shape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n\n            if(this.result._shouldStop){\n                return;\n            }\n\n            // Upper triangle\n            shape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n            this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n        }\n    }\n};\nRay.prototype[Shape.types.HEIGHTFIELD] = Ray.prototype.intersectHeightfield;\n\nvar Ray_intersectSphere_intersectionPoint = new Vec3();\nvar Ray_intersectSphere_normal = new Vec3();\n\n/**\n * @method intersectSphere\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\nRay.prototype.intersectSphere = function(shape, quat, position, body, reportedShape){\n    var from = this.from,\n        to = this.to,\n        r = shape.radius;\n\n    var a = Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2) + Math.pow(to.z - from.z, 2);\n    var b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\n    var c = Math.pow(from.x - position.x, 2) + Math.pow(from.y - position.y, 2) + Math.pow(from.z - position.z, 2) - Math.pow(r, 2);\n\n    var delta = Math.pow(b, 2) - 4 * a * c;\n\n    var intersectionPoint = Ray_intersectSphere_intersectionPoint;\n    var normal = Ray_intersectSphere_normal;\n\n    if(delta < 0){\n        // No intersection\n        return;\n\n    } else if(delta === 0){\n        // single intersection point\n        from.lerp(to, delta, intersectionPoint);\n\n        intersectionPoint.vsub(position, normal);\n        normal.normalize();\n\n        this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n\n    } else {\n        var d1 = (- b - Math.sqrt(delta)) / (2 * a);\n        var d2 = (- b + Math.sqrt(delta)) / (2 * a);\n\n        if(d1 >= 0 && d1 <= 1){\n            from.lerp(to, d1, intersectionPoint);\n            intersectionPoint.vsub(position, normal);\n            normal.normalize();\n            this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n        }\n\n        if(this.result._shouldStop){\n            return;\n        }\n\n        if(d2 >= 0 && d2 <= 1){\n            from.lerp(to, d2, intersectionPoint);\n            intersectionPoint.vsub(position, normal);\n            normal.normalize();\n            this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n        }\n    }\n};\nRay.prototype[Shape.types.SPHERE] = Ray.prototype.intersectSphere;\n\n\nvar intersectConvex_normal = new Vec3();\nvar intersectConvex_minDistNormal = new Vec3();\nvar intersectConvex_minDistIntersect = new Vec3();\nvar intersectConvex_vector = new Vec3();\n\n/**\n * @method intersectConvex\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @param {array} [options.faceList]\n */\nRay.prototype.intersectConvex = function intersectConvex(\n    shape,\n    quat,\n    position,\n    body,\n    reportedShape,\n    options\n){\n    var minDistNormal = intersectConvex_minDistNormal;\n    var normal = intersectConvex_normal;\n    var vector = intersectConvex_vector;\n    var minDistIntersect = intersectConvex_minDistIntersect;\n    var faceList = (options && options.faceList) || null;\n\n    // Checking faces\n    var faces = shape.faces,\n        vertices = shape.vertices,\n        normals = shape.faceNormals;\n    var direction = this._direction;\n\n    var from = this.from;\n    var to = this.to;\n    var fromToDistance = from.distanceTo(to);\n\n    var minDist = -1;\n    var Nfaces = faceList ? faceList.length : faces.length;\n    var result = this.result;\n\n    for (var j = 0; !result._shouldStop && j < Nfaces; j++) {\n        var fi = faceList ? faceList[j] : j;\n\n        var face = faces[fi];\n        var faceNormal = normals[fi];\n        var q = quat;\n        var x = position;\n\n        // determine if ray intersects the plane of the face\n        // note: this works regardless of the direction of the face normal\n\n        // Get plane point in world coordinates...\n        vector.copy(vertices[face[0]]);\n        q.vmult(vector,vector);\n        vector.vadd(x,vector);\n\n        // ...but make it relative to the ray from. We'll fix this later.\n        vector.vsub(from,vector);\n\n        // Get plane normal\n        q.vmult(faceNormal,normal);\n\n        // If this dot product is negative, we have something interesting\n        var dot = direction.dot(normal);\n\n        // Bail out if ray and plane are parallel\n        if ( Math.abs( dot ) < this.precision ){\n            continue;\n        }\n\n        // calc distance to plane\n        var scalar = normal.dot(vector) / dot;\n\n        // if negative distance, then plane is behind ray\n        if (scalar < 0){\n            continue;\n        }\n\n        // if (dot < 0) {\n\n        // Intersection point is from + direction * scalar\n        direction.mult(scalar,intersectPoint);\n        intersectPoint.vadd(from,intersectPoint);\n\n        // a is the point we compare points b and c with.\n        a.copy(vertices[face[0]]);\n        q.vmult(a,a);\n        x.vadd(a,a);\n\n        for(var i = 1; !result._shouldStop && i < face.length - 1; i++){\n            // Transform 3 vertices to world coords\n            b.copy(vertices[face[i]]);\n            c.copy(vertices[face[i+1]]);\n            q.vmult(b,b);\n            q.vmult(c,c);\n            x.vadd(b,b);\n            x.vadd(c,c);\n\n            var distance = intersectPoint.distanceTo(from);\n\n            if(!(pointInTriangle(intersectPoint, a, b, c) || pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance){\n                continue;\n            }\n\n            this.reportIntersection(normal, intersectPoint, reportedShape, body, fi);\n        }\n        // }\n    }\n};\nRay.prototype[Shape.types.CONVEXPOLYHEDRON] = Ray.prototype.intersectConvex;\n\nvar intersectTrimesh_normal = new Vec3();\nvar intersectTrimesh_localDirection = new Vec3();\nvar intersectTrimesh_localFrom = new Vec3();\nvar intersectTrimesh_localTo = new Vec3();\nvar intersectTrimesh_worldNormal = new Vec3();\nvar intersectTrimesh_worldIntersectPoint = new Vec3();\nvar intersectTrimesh_localAABB = new AABB();\nvar intersectTrimesh_triangles = [];\nvar intersectTrimesh_treeTransform = new Transform();\n\n/**\n * @method intersectTrimesh\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @todo Optimize by transforming the world to local space first.\n * @todo Use Octree lookup\n */\nRay.prototype.intersectTrimesh = function intersectTrimesh(\n    mesh,\n    quat,\n    position,\n    body,\n    reportedShape,\n    options\n){\n    var normal = intersectTrimesh_normal;\n    var triangles = intersectTrimesh_triangles;\n    var treeTransform = intersectTrimesh_treeTransform;\n    var minDistNormal = intersectConvex_minDistNormal;\n    var vector = intersectConvex_vector;\n    var minDistIntersect = intersectConvex_minDistIntersect;\n    var localAABB = intersectTrimesh_localAABB;\n    var localDirection = intersectTrimesh_localDirection;\n    var localFrom = intersectTrimesh_localFrom;\n    var localTo = intersectTrimesh_localTo;\n    var worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\n    var worldNormal = intersectTrimesh_worldNormal;\n    var faceList = (options && options.faceList) || null;\n\n    // Checking faces\n    var indices = mesh.indices,\n        vertices = mesh.vertices,\n        normals = mesh.faceNormals;\n\n    var from = this.from;\n    var to = this.to;\n    var direction = this._direction;\n\n    var minDist = -1;\n    treeTransform.position.copy(position);\n    treeTransform.quaternion.copy(quat);\n\n    // Transform ray to local space!\n    Transform.vectorToLocalFrame(position, quat, direction, localDirection);\n    Transform.pointToLocalFrame(position, quat, from, localFrom);\n    Transform.pointToLocalFrame(position, quat, to, localTo);\n\n    localTo.x *= mesh.scale.x;\n    localTo.y *= mesh.scale.y;\n    localTo.z *= mesh.scale.z;\n    localFrom.x *= mesh.scale.x;\n    localFrom.y *= mesh.scale.y;\n    localFrom.z *= mesh.scale.z;\n\n    localTo.vsub(localFrom, localDirection);\n    localDirection.normalize();\n\n    var fromToDistanceSquared = localFrom.distanceSquared(localTo);\n\n    mesh.tree.rayQuery(this, treeTransform, triangles);\n\n    for (var i = 0, N = triangles.length; !this.result._shouldStop && i !== N; i++) {\n        var trianglesIndex = triangles[i];\n\n        mesh.getNormal(trianglesIndex, normal);\n\n        // determine if ray intersects the plane of the face\n        // note: this works regardless of the direction of the face normal\n\n        // Get plane point in world coordinates...\n        mesh.getVertex(indices[trianglesIndex * 3], a);\n\n        // ...but make it relative to the ray from. We'll fix this later.\n        a.vsub(localFrom,vector);\n\n        // If this dot product is negative, we have something interesting\n        var dot = localDirection.dot(normal);\n\n        // Bail out if ray and plane are parallel\n        // if (Math.abs( dot ) < this.precision){\n        //     continue;\n        // }\n\n        // calc distance to plane\n        var scalar = normal.dot(vector) / dot;\n\n        // if negative distance, then plane is behind ray\n        if (scalar < 0){\n            continue;\n        }\n\n        // Intersection point is from + direction * scalar\n        localDirection.scale(scalar,intersectPoint);\n        intersectPoint.vadd(localFrom,intersectPoint);\n\n        // Get triangle vertices\n        mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\n        mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\n\n        var squaredDistance = intersectPoint.distanceSquared(localFrom);\n\n        if(!(pointInTriangle(intersectPoint, b, a, c) || pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared){\n            continue;\n        }\n\n        // transform intersectpoint and normal to world\n        Transform.vectorToWorldFrame(quat, normal, worldNormal);\n        Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\n        this.reportIntersection(worldNormal, worldIntersectPoint, reportedShape, body, trianglesIndex);\n    }\n    triangles.length = 0;\n};\nRay.prototype[Shape.types.TRIMESH] = Ray.prototype.intersectTrimesh;\n\n\n/**\n * @method reportIntersection\n * @private\n * @param  {Vec3} normal\n * @param  {Vec3} hitPointWorld\n * @param  {Shape} shape\n * @param  {Body} body\n * @return {boolean} True if the intersections should continue\n */\nRay.prototype.reportIntersection = function(normal, hitPointWorld, shape, body, hitFaceIndex){\n    var from = this.from;\n    var to = this.to;\n    var distance = from.distanceTo(hitPointWorld);\n    var result = this.result;\n\n    // Skip back faces?\n    if(this.skipBackfaces && normal.dot(this._direction) > 0){\n        return;\n    }\n\n    result.hitFaceIndex = typeof(hitFaceIndex) !== 'undefined' ? hitFaceIndex : -1;\n\n    switch(this.mode){\n    case Ray.ALL:\n        this.hasHit = true;\n        result.set(\n            from,\n            to,\n            normal,\n            hitPointWorld,\n            shape,\n            body,\n            distance\n        );\n        result.hasHit = true;\n        this.callback(result);\n        break;\n\n    case Ray.CLOSEST:\n\n        // Store if closer than current closest\n        if(distance < result.distance || !result.hasHit){\n            this.hasHit = true;\n            result.hasHit = true;\n            result.set(\n                from,\n                to,\n                normal,\n                hitPointWorld,\n                shape,\n                body,\n                distance\n            );\n        }\n        break;\n\n    case Ray.ANY:\n\n        // Report and stop.\n        this.hasHit = true;\n        result.hasHit = true;\n        result.set(\n            from,\n            to,\n            normal,\n            hitPointWorld,\n            shape,\n            body,\n            distance\n        );\n        result._shouldStop = true;\n        break;\n    }\n};\n\nvar v0 = new Vec3(),\n    intersect = new Vec3();\nfunction distanceFromIntersection(from, direction, position) {\n\n    // v0 is vector from from to position\n    position.vsub(from,v0);\n    var dot = v0.dot(direction);\n\n    // intersect = direction*dot + from\n    direction.mult(dot,intersect);\n    intersect.vadd(from,intersect);\n\n    var distance = position.distanceTo(intersect);\n\n    return distance;\n}\n\n","const utils = require('./utils');\n\nlet polygonId = 1;\n\nclass Builder {\n  /**\n   * Constructs groups from the given navigation mesh.\n   * @param  {THREE.Geometry} geometry\n   * @return {Zone}\n   */\n  static buildZone (geometry) {\n\n    const navMesh = this._buildNavigationMesh(geometry);\n\n    const zone = {};\n\n    navMesh.vertices.forEach((v) => {\n      v.x = utils.roundNumber(v.x, 2);\n      v.y = utils.roundNumber(v.y, 2);\n      v.z = utils.roundNumber(v.z, 2);\n    });\n\n    zone.vertices = navMesh.vertices;\n\n    const groups = this._buildPolygonGroups(navMesh);\n\n    zone.groups = [];\n\n    const findPolygonIndex = function (group, p) {\n      for (let i = 0; i < group.length; i++) {\n        if (p === group[i]) return i;\n      }\n    };\n\n    groups.forEach((group) => {\n\n      const newGroup = [];\n\n      group.forEach((p) => {\n\n        const neighbours = p.neighbours.map((n) => findPolygonIndex(group, n));\n\n        // Build a portal list to each neighbour\n        const portals = p.neighbours.map((n) => this._getSharedVerticesInOrder(p, n));\n\n        p.centroid.x = utils.roundNumber(p.centroid.x, 2);\n        p.centroid.y = utils.roundNumber(p.centroid.y, 2);\n        p.centroid.z = utils.roundNumber(p.centroid.z, 2);\n\n        newGroup.push({\n          id: findPolygonIndex(group, p),\n          neighbours: neighbours,\n          vertexIds: p.vertexIds,\n          centroid: p.centroid,\n          portals: portals\n        });\n\n      });\n\n      zone.groups.push(newGroup);\n    });\n\n    return zone;\n  }\n\n  /**\n   * Constructs a navigation mesh from the given geometry.\n   * @param {THREE.Geometry} geometry\n   * @return {Object}\n   */\n  static _buildNavigationMesh (geometry) {\n    utils.computeCentroids(geometry);\n    geometry.mergeVertices();\n    return this._buildPolygonsFromGeometry(geometry);\n  }\n\n  static _buildPolygonGroups (navigationMesh) {\n\n    const polygons = navigationMesh.polygons;\n\n    const polygonGroups = [];\n    let groupCount = 0;\n\n    const spreadGroupId = function (polygon) {\n      polygon.neighbours.forEach((neighbour) => {\n        if (neighbour.group === undefined) {\n          neighbour.group = polygon.group;\n          spreadGroupId(neighbour);\n        }\n      });\n    };\n\n    polygons.forEach((polygon) => {\n\n      if (polygon.group === undefined) {\n        polygon.group = groupCount++;\n        // Spread it\n        spreadGroupId(polygon);\n      }\n\n      if (!polygonGroups[polygon.group]) polygonGroups[polygon.group] = [];\n\n      polygonGroups[polygon.group].push(polygon);\n    });\n\n    return polygonGroups;\n  }\n\n  static _buildPolygonNeighbours (polygon, navigationMesh) {\n    polygon.neighbours = [];\n\n    // All other nodes that contain at least two of our vertices are our neighbours\n    for (let i = 0, len = navigationMesh.polygons.length; i < len; i++) {\n      if (polygon === navigationMesh.polygons[i]) continue;\n\n      // Don't check polygons that are too far, since the intersection tests take a long time\n      if (polygon.centroid.distanceToSquared(navigationMesh.polygons[i].centroid) > 100 * 100) continue;\n\n      const matches = utils.array_intersect(polygon.vertexIds, navigationMesh.polygons[i].vertexIds);\n\n      if (matches.length >= 2) {\n        polygon.neighbours.push(navigationMesh.polygons[i]);\n      }\n    }\n  }\n\n  static _buildPolygonsFromGeometry (geometry) {\n\n    const polygons = [];\n    const vertices = geometry.vertices;\n    const faceVertexUvs = geometry.faceVertexUvs;\n\n    // Convert the faces into a custom format that supports more than 3 vertices\n    geometry.faces.forEach((face) => {\n      polygons.push({\n        id: polygonId++,\n        vertexIds: [face.a, face.b, face.c],\n        centroid: face.centroid,\n        normal: face.normal,\n        neighbours: []\n      });\n    });\n\n    const navigationMesh = {\n      polygons: polygons,\n      vertices: vertices,\n      faceVertexUvs: faceVertexUvs\n    };\n\n    // Build a list of adjacent polygons\n    polygons.forEach((polygon) => {\n      this._buildPolygonNeighbours(polygon, navigationMesh);\n    });\n\n    return navigationMesh;\n  }\n\n  static _getSharedVerticesInOrder (a, b) {\n\n    const aList = a.vertexIds;\n    const bList = b.vertexIds;\n\n    const sharedVertices = [];\n\n    aList.forEach((vId) => {\n      if (bList.includes(vId)) {\n        sharedVertices.push(vId);\n      }\n    });\n\n    if (sharedVertices.length < 2) return [];\n\n    if (sharedVertices.includes(aList[0]) && sharedVertices.includes(aList[aList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      aList.push(aList.shift());\n    }\n\n    if (sharedVertices.includes(bList[0]) && sharedVertices.includes(bList[bList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      bList.push(bList.shift());\n    }\n\n    // Again!\n    sharedVertices.length = 0;\n\n    aList.forEach((vId) => {\n      if (bList.includes(vId)) {\n        sharedVertices.push(vId);\n      }\n    });\n\n    return sharedVertices;\n  }\n}\n\nmodule.exports = Builder;\n","module.exports = Object.assign(function GamepadButton () {}, {\n\tFACE_1: 0,\n\tFACE_2: 1,\n\tFACE_3: 2,\n\tFACE_4: 3,\n\n\tL_SHOULDER_1: 4,\n\tR_SHOULDER_1: 5,\n\tL_SHOULDER_2: 6,\n\tR_SHOULDER_2: 7,\n\n\tSELECT: 8,\n\tSTART: 9,\n\n\tDPAD_UP: 12,\n\tDPAD_DOWN: 13,\n\tDPAD_LEFT: 14,\n\tDPAD_RIGHT: 15,\n\n\tVENDOR: 16,\n});\n","module.exports = PointToPointConstraint;\n\nvar Constraint = require('./Constraint');\nvar ContactEquation = require('../equations/ContactEquation');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * Connects two bodies at given offset points.\n * @class PointToPointConstraint\n * @extends Constraint\n * @constructor\n * @param {Body} bodyA\n * @param {Vec3} pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\n * @param {Body} bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\n * @param {Vec3} pivotB See pivotA.\n * @param {Number} maxForce The maximum force that should be applied to constrain the bodies.\n *\n * @example\n *     var bodyA = new Body({ mass: 1 });\n *     var bodyB = new Body({ mass: 1 });\n *     bodyA.position.set(-1, 0, 0);\n *     bodyB.position.set(1, 0, 0);\n *     bodyA.addShape(shapeA);\n *     bodyB.addShape(shapeB);\n *     world.addBody(bodyA);\n *     world.addBody(bodyB);\n *     var localPivotA = new Vec3(1, 0, 0);\n *     var localPivotB = new Vec3(-1, 0, 0);\n *     var constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB);\n *     world.addConstraint(constraint);\n */\nfunction PointToPointConstraint(bodyA,pivotA,bodyB,pivotB,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\n\n    /**\n     * Pivot, defined locally in bodyA.\n     * @property {Vec3} pivotA\n     */\n    this.pivotA = pivotA ? pivotA.clone() : new Vec3();\n\n    /**\n     * Pivot, defined locally in bodyB.\n     * @property {Vec3} pivotB\n     */\n    this.pivotB = pivotB ? pivotB.clone() : new Vec3();\n\n    /**\n     * @property {ContactEquation} equationX\n     */\n    var x = this.equationX = new ContactEquation(bodyA,bodyB);\n\n    /**\n     * @property {ContactEquation} equationY\n     */\n    var y = this.equationY = new ContactEquation(bodyA,bodyB);\n\n    /**\n     * @property {ContactEquation} equationZ\n     */\n    var z = this.equationZ = new ContactEquation(bodyA,bodyB);\n\n    // Equations to be fed to the solver\n    this.equations.push(x, y, z);\n\n    // Make the equations bidirectional\n    x.minForce = y.minForce = z.minForce = -maxForce;\n    x.maxForce = y.maxForce = z.maxForce =  maxForce;\n\n    x.ni.set(1, 0, 0);\n    y.ni.set(0, 1, 0);\n    z.ni.set(0, 0, 1);\n}\nPointToPointConstraint.prototype = new Constraint();\n\nPointToPointConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var x = this.equationX;\n    var y = this.equationY;\n    var z = this.equationZ;\n\n    // Rotate the pivots to world space\n    bodyA.quaternion.vmult(this.pivotA,x.ri);\n    bodyB.quaternion.vmult(this.pivotB,x.rj);\n\n    y.ri.copy(x.ri);\n    y.rj.copy(x.rj);\n    z.ri.copy(x.ri);\n    z.rj.copy(x.rj);\n};","/* global THREE */\n\nconst utils = require('./utils');\nconst AStar = require('./AStar');\nconst Builder = require('./Builder');\nconst Channel = require('./Channel');\n\n/**\n * Defines an instance of the pathfinding module, with one or more zones.\n */\nclass Path {\n\tconstructor () {\n\t\tthis.zones = {};\n\t}\n\n\t/**\n\t * (Static) Builds a zone/node set from navigation mesh geometry.\n\t * @param  {THREE.Geometry} geometry\n\t * @return {Zone}\n\t */\n\tstatic createZone (geometry) {\n\t\treturn Builder.buildZone(geometry);\n\t}\n\n\t/**\n\t * Sets data for the given zone.\n\t * @param {string} zoneID\n\t * @param {Zone} zone\n\t */\n\tsetZoneData (zoneID, zone) {\n\t\tthis.zones[zoneID] = zone;\n\t}\n\n\t/**\n\t * Returns closest node group ID for given position.\n\t * @param  {string} zoneID\n\t * @param  {THREE.Vector3} position\n\t * @return {number}\n\t */\n\tgetGroup (zoneID, position) {\n\t\tif (!this.zones[zoneID]) return null;\n\n\t\tlet closestNodeGroup = null;\n\t\tlet distance = Math.pow(50, 2);\n\n\t\tthis.zones[zoneID].groups.forEach((group, index) => {\n\t\t\tgroup.forEach((node) => {\n\t\t\t\tconst measuredDistance = utils.distanceToSquared(node.centroid, position);\n\t\t\t\tif (measuredDistance < distance) {\n\t\t\t\t\tclosestNodeGroup = index;\n\t\t\t\t\tdistance = measuredDistance;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn closestNodeGroup;\n\t}\n\n\t/**\n\t * Returns a random node within a given range of a given position.\n\t * @param  {string} zoneID\n\t * @param  {number} groupID\n\t * @param  {THREE.Vector3} nearPosition\n\t * @param  {number} nearRange\n\t * @return {Node}\n\t */\n\tgetRandomNode (zoneID, groupID, nearPosition, nearRange) {\n\n\t\tif (!this.zones[zoneID]) return new THREE.Vector3();\n\n\t\tnearPosition = nearPosition || null;\n\t\tnearRange = nearRange || 0;\n\n\t\tconst candidates = [];\n\t\tconst polygons = this.zones[zoneID].groups[groupID];\n\n\t\tpolygons.forEach((p) => {\n\t\t\tif (nearPosition && nearRange) {\n\t\t\t\tif (utils.distanceToSquared(nearPosition, p.centroid) < nearRange * nearRange) {\n\t\t\t\t\tcandidates.push(p.centroid);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcandidates.push(p.centroid);\n\t\t\t}\n\t\t});\n\n\t\treturn utils.sample(candidates) || new THREE.Vector3();\n\t}\n\n\t/**\n\t * Returns the closest node to the target position.\n\t * @param  {THREE.Vector3} position\n\t * @param  {string}  zoneID\n\t * @param  {number}  groupID\n\t * @param  {boolean} checkPolygon\n\t * @return {Node}\n\t */\n\tgetClosestNode (position, zoneID, groupID, checkPolygon = false) {\n\t\tconst nodes = this.zones[zoneID].groups[groupID];\n\t\tconst vertices = this.zones[zoneID].vertices;\n\t\tlet closestNode = null;\n\t\tlet closestDistance = Infinity;\n\n\t\tnodes.forEach((node) => {\n\t\t\tconst distance = utils.distanceToSquared(node.centroid, position);\n\t\t\tif (distance < closestDistance\n\t\t\t\t\t&& (!checkPolygon || utils.isVectorInPolygon(position, node, vertices))) {\n\t\t\t\tclosestNode = node;\n\t\t\t\tclosestDistance = distance;\n\t\t\t}\n\t\t});\n\n\t\treturn closestNode;\n\t}\n\n\t/**\n\t * Returns a path between given start and end points. If a complete path\n\t * cannot be found, will return the nearest endpoint available.\n\t *\n\t * @param  {THREE.Vector3} startPosition Start position.\n\t * @param  {THREE.Vector3} targetPosition Destination.\n\t * @param  {string} zoneID ID of current zone.\n\t * @param  {number} groupID Current group ID.\n\t * @return {Array<THREE.Vector3>} Array of points defining the path.\n\t */\n\tfindPath (startPosition, targetPosition, zoneID, groupID) {\n\t\tconst nodes = this.zones[zoneID].groups[groupID];\n\t\tconst vertices = this.zones[zoneID].vertices;\n\n\t\tconst closestNode = this.getClosestNode(startPosition, zoneID, groupID);\n\t\tconst farthestNode = this.getClosestNode(targetPosition, zoneID, groupID, true);\n\n\t\t// If we can't find any node, just go straight to the target\n\t\tif (!closestNode || !farthestNode) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst paths = AStar.search(nodes, closestNode, farthestNode);\n\n\t\tconst getPortalFromTo = function (a, b) {\n\t\t\tfor (var i = 0; i < a.neighbours.length; i++) {\n\t\t\t\tif (a.neighbours[i] === b.id) {\n\t\t\t\t\treturn a.portals[i];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// We have the corridor, now pull the rope.\n\t\tconst channel = new Channel();\n\t\tchannel.push(startPosition);\n\t\tfor (let i = 0; i < paths.length; i++) {\n\t\t\tconst polygon = paths[i];\n\t\t\tconst nextPolygon = paths[i + 1];\n\n\t\t\tif (nextPolygon) {\n\t\t\t\tconst portals = getPortalFromTo(polygon, nextPolygon);\n\t\t\t\tchannel.push(\n\t\t\t\t\tvertices[portals[0]],\n\t\t\t\t\tvertices[portals[1]]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tchannel.push(targetPosition);\n\t\tchannel.stringPull();\n\n\t\t// Return the path, omitting first position (which is already known).\n\t\tconst path = channel.path.map((c) => new THREE.Vector3(c.x, c.y, c.z));\n\t\tpath.shift();\n\t\treturn path;\n\t}\n}\n\n/**\n * Clamps a step along the navmesh, given start and desired endpoint. May be\n * used to constrain first-person / WASD controls.\n *\n * @param  {THREE.Vector3} start\n * @param  {THREE.Vector3} end Desired endpoint.\n * @param  {Node} node\n * @param  {string} zoneID\n * @param  {number} groupID\n * @param  {THREE.Vector3} endTarget Updated endpoint.\n * @return {Node} Updated node.\n */\nPath.prototype.clampStep = (function () {\n\tconst point = new THREE.Vector3();\n\tconst plane = new THREE.Plane();\n\tconst triangle = new THREE.Triangle();\n\n\tlet closestNode;\n\tlet closestPoint = new THREE.Vector3();\n\tlet closestDistance;\n\n\treturn function (start, end, node, zoneID, groupID, endTarget) {\n\t\tconst vertices = this.zones[zoneID].vertices;\n\t\tconst nodes = this.zones[zoneID].groups[groupID];\n\n\t\tconst nodeQueue = [node];\n\t\tconst nodeDepth = {};\n\t\tnodeDepth[node.id] = 0;\n\n\t\tclosestNode = undefined;\n\t\tclosestPoint.set(0, 0, 0);\n\t\tclosestDistance = Infinity;\n\n\t\t// Project the step along the current node.\n\t\tplane.setFromCoplanarPoints(\n\t\t\tvertices[node.vertexIds[0]],\n\t\t\tvertices[node.vertexIds[1]],\n\t\t\tvertices[node.vertexIds[2]]\n\t\t);\n\t\tplane.projectPoint(end, point);\n\t\tend.copy(point);\n\n\t\tfor (let currentNode = nodeQueue.pop(); currentNode; currentNode = nodeQueue.pop()) {\n\n\t\t\ttriangle.set(\n\t\t\t\tvertices[currentNode.vertexIds[0]],\n\t\t\t\tvertices[currentNode.vertexIds[1]],\n\t\t\t\tvertices[currentNode.vertexIds[2]]\n\t\t\t);\n\n\t\t\ttriangle.closestPointToPoint(end, point);\n\n\t\t\tif (point.distanceToSquared(end) < closestDistance) {\n\t\t\t\tclosestNode = currentNode;\n\t\t\t\tclosestPoint.copy(point);\n\t\t\t\tclosestDistance = point.distanceToSquared(end);\n\t\t\t}\n\n\t\t\tconst depth = nodeDepth[currentNode];\n\t\t\tif (depth > 2) continue;\n\n\t\t\tfor (let i = 0; i < currentNode.neighbours.length; i++) {\n\t\t\t\tconst neighbour = nodes[currentNode.neighbours[i]];\n\t\t\t\tif (neighbour.id in nodeDepth) continue;\n\n\t\t\t\tnodeQueue.push(neighbour);\n\t\t\t\tnodeDepth[neighbour.id] = depth + 1;\n\t\t\t}\n\t\t}\n\n\t\tendTarget.copy(closestPoint);\n\t\treturn closestNode;\n\t};\n}());\n\n/**\n * Defines a zone of interconnected groups on a navigation mesh.\n *\n * @type {Object}\n * @property {Array<Group>} groups\n * @property {Array<THREE.Vector3} vertices\n */\nconst Zone = {}; // jshint ignore:line\n\n/**\n * Defines a group within a navigation mesh.\n *\n * @type {Object}\n */\nconst Group = {}; // jshint ignore:line\n\n/**\n * Defines a node (or polygon) within a group.\n *\n * @type {Object}\n * @property {number} id\n * @property {Array<number>} neighbours IDs of neighboring nodes.\n * @property {Array<number} vertexIds\n * @property {THREE.Vector3} centroid\n * @property {Array<Array<number>>} portals Array of portals, each defined by two vertex IDs.\n * @property {boolean} closed\n * @property {number} cost\n */\nconst Node = {}; // jshint ignore:line\n\nmodule.exports = Path;\n","/* global performance */\n\nvar webworkify = require('webworkify'),\n    webworkifyDebug = require('./webworkify-debug'),\n    Driver = require('./driver'),\n    Event = require('./event'),\n    worker = require('./worker'),\n    protocol = require('../utils/protocol');\n\nvar ID = protocol.ID;\n\n/******************************************************************************\n * Constructor\n */\n\nfunction WorkerDriver (options) {\n  this.fps = options.fps;\n  this.engine = options.engine;\n  this.interpolate = options.interpolate;\n  // Approximate number of physics steps to 'pad' rendering.\n  this.interpBufferSize = options.interpolationBufferSize;\n  this.debug = options.debug;\n\n  this.bodies = {};\n  this.contacts = [];\n\n  // https://gafferongames.com/post/snapshot_interpolation/\n  this.frameDelay = this.interpBufferSize * 1000 / this.fps;\n  this.frameBuffer = [];\n\n  this.worker = this.debug\n    ? webworkifyDebug(worker)\n    : webworkify(worker);\n  this.worker.addEventListener('message', this._onMessage.bind(this));\n}\n\nWorkerDriver.prototype = new Driver();\nWorkerDriver.prototype.constructor = WorkerDriver;\n\nmodule.exports = WorkerDriver;\n\n/******************************************************************************\n * Lifecycle\n */\n\n/* @param {object} worldConfig */\nWorkerDriver.prototype.init = function (worldConfig) {\n  this.worker.postMessage({\n    type: Event.INIT,\n    worldConfig: worldConfig,\n    fps: this.fps,\n    engine: this.engine\n  });\n};\n\n/**\n * Increments the physics world forward one step, if interpolation is enabled.\n * If disabled, increments are performed as messages arrive.\n * @param {number} deltaMS\n */\nWorkerDriver.prototype.step = function () {\n  if (!this.interpolate) return;\n\n  // Get the two oldest frames that haven't expired. Ideally we would use all\n  // available frames to keep things smooth, but lerping is easier and faster.\n  var prevFrame = this.frameBuffer[0];\n  var nextFrame = this.frameBuffer[1];\n  var timestamp = performance.now();\n  while (prevFrame && nextFrame && timestamp - prevFrame.timestamp > this.frameDelay) {\n    this.frameBuffer.shift();\n    prevFrame = this.frameBuffer[0];\n    nextFrame = this.frameBuffer[1];\n  }\n\n  if (!prevFrame || !nextFrame) return;\n\n  var mix = (timestamp - prevFrame.timestamp) / this.frameDelay;\n  mix = (mix - (1 - 1 / this.interpBufferSize)) * this.interpBufferSize;\n\n  for (var id in prevFrame.bodies) {\n    if (prevFrame.bodies.hasOwnProperty(id) && nextFrame.bodies.hasOwnProperty(id)) {\n      protocol.deserializeInterpBodyUpdate(\n        prevFrame.bodies[id],\n        nextFrame.bodies[id],\n        this.bodies[id],\n        mix\n      );\n    }\n  }\n};\n\nWorkerDriver.prototype.destroy = function () {\n  this.worker.terminate();\n  delete this.worker;\n};\n\n/** {Event} event */\nWorkerDriver.prototype._onMessage = function (event) {\n  if (event.data.type === Event.STEP) {\n    var data = event.data,\n        bodies = data.bodies;\n\n    this.contacts = event.data.contacts;\n\n    // If interpolation is enabled, store the frame. If not, update all bodies\n    // immediately.\n    if (this.interpolate) {\n      this.frameBuffer.push({timestamp: performance.now(), bodies: bodies});\n    } else {\n      for (var id in bodies) {\n        if (bodies.hasOwnProperty(id)) {\n          protocol.deserializeBodyUpdate(bodies[id], this.bodies[id]);\n        }\n      }\n    }\n\n  } else {\n    throw new Error('[WorkerDriver] Unexpected message type.');\n  }\n};\n\n/******************************************************************************\n * Bodies\n */\n\n/* @param {CANNON.Body} body */\nWorkerDriver.prototype.addBody = function (body) {\n  protocol.assignID('body', body);\n  this.bodies[body[ID]] = body;\n  this.worker.postMessage({type: Event.ADD_BODY, body: protocol.serializeBody(body)});\n};\n\n/* @param {CANNON.Body} body */\nWorkerDriver.prototype.removeBody = function (body) {\n  this.worker.postMessage({type: Event.REMOVE_BODY, bodyID: body[ID]});\n  delete this.bodies[body[ID]];\n};\n\n/**\n * @param {CANNON.Body} body\n * @param {string} methodName\n * @param {Array} args\n */\nWorkerDriver.prototype.applyBodyMethod = function (body, methodName, args) {\n  switch (methodName) {\n    case 'applyForce':\n    case 'applyImpulse':\n      this.worker.postMessage({\n        type: Event.APPLY_BODY_METHOD,\n        bodyID: body[ID],\n        methodName: methodName,\n        args: [args[0].toArray(), args[1].toArray()]\n      });\n      break;\n    default:\n      throw new Error('Unexpected methodName: %s', methodName);\n  }\n};\n\n/** @param {CANNON.Body} body */\nWorkerDriver.prototype.updateBodyProperties = function (body) {\n  this.worker.postMessage({\n    type: Event.UPDATE_BODY_PROPERTIES,\n    body: protocol.serializeBody(body)\n  });\n};\n\n/******************************************************************************\n * Materials\n */\n\n/**\n * @param  {string} name\n * @return {CANNON.Material}\n */\nWorkerDriver.prototype.getMaterial = function (name) {\n  // No access to materials here. Eventually we might return the name or ID, if\n  // multiple materials were selected, but for now there's only one and it's safe\n  // to assume the worker is already using it.\n  return undefined;\n};\n\n/** @param {object} materialConfig */\nWorkerDriver.prototype.addMaterial = function (materialConfig) {\n  this.worker.postMessage({type: Event.ADD_MATERIAL, materialConfig: materialConfig});\n};\n\n/**\n * @param {string} matName1\n * @param {string} matName2\n * @param {object} contactMaterialConfig\n */\nWorkerDriver.prototype.addContactMaterial = function (matName1, matName2, contactMaterialConfig) {\n  this.worker.postMessage({\n    type: Event.ADD_CONTACT_MATERIAL,\n    materialName1: matName1,\n    materialName2: matName2,\n    contactMaterialConfig: contactMaterialConfig\n  });\n};\n\n/******************************************************************************\n * Constraints\n */\n\n/* @param {CANNON.Constraint} constraint */\nWorkerDriver.prototype.addConstraint = function (constraint) {\n  protocol.assignID('constraint', constraint);\n  this.worker.postMessage({\n    type: Event.ADD_CONSTRAINT,\n    constraint: protocol.serializeConstraint(constraint)\n  });\n};\n\n/* @param {CANNON.Constraint} constraint */\nWorkerDriver.prototype.removeConstraint = function (constraint) {\n  this.worker.postMessage({\n    type: Event.REMOVE_CONSTRAINT,\n    constraintID: constraint[ID]\n  });\n};\n\n/******************************************************************************\n * Contacts\n */\n\n/** @return {Array<object>} */\nWorkerDriver.prototype.getContacts = function () {\n  // TODO(donmccurdy): There's some wasted memory allocation here.\n  var bodies = this.bodies;\n  return this.contacts.map(function (message) {\n    return protocol.deserializeContact(message, bodies);\n  });\n};\n","module.exports = GridBroadphase;\n\nvar Broadphase = require('./Broadphase');\nvar Vec3 = require('../math/Vec3');\nvar Shape = require('../shapes/Shape');\n\n/**\n * Axis aligned uniform grid broadphase.\n * @class GridBroadphase\n * @constructor\n * @extends Broadphase\n * @todo Needs support for more than just planes and spheres.\n * @param {Vec3} aabbMin\n * @param {Vec3} aabbMax\n * @param {Number} nx Number of boxes along x\n * @param {Number} ny Number of boxes along y\n * @param {Number} nz Number of boxes along z\n */\nfunction GridBroadphase(aabbMin,aabbMax,nx,ny,nz){\n    Broadphase.apply(this);\n    this.nx = nx || 10;\n    this.ny = ny || 10;\n    this.nz = nz || 10;\n    this.aabbMin = aabbMin || new Vec3(100,100,100);\n    this.aabbMax = aabbMax || new Vec3(-100,-100,-100);\n\tvar nbins = this.nx * this.ny * this.nz;\n\tif (nbins <= 0) {\n\t\tthrow \"GridBroadphase: Each dimension's n must be >0\";\n\t}\n    this.bins = [];\n\tthis.binLengths = []; //Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\n\tthis.bins.length = nbins;\n\tthis.binLengths.length = nbins;\n\tfor (var i=0;i<nbins;i++) {\n\t\tthis.bins[i]=[];\n\t\tthis.binLengths[i]=0;\n\t}\n}\nGridBroadphase.prototype = new Broadphase();\nGridBroadphase.prototype.constructor = GridBroadphase;\n\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nvar GridBroadphase_collisionPairs_d = new Vec3();\nvar GridBroadphase_collisionPairs_binPos = new Vec3();\nGridBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\n    var N = world.numObjects(),\n        bodies = world.bodies;\n\n    var max = this.aabbMax,\n        min = this.aabbMin,\n        nx = this.nx,\n        ny = this.ny,\n        nz = this.nz;\n\n\tvar xstep = ny*nz;\n\tvar ystep = nz;\n\tvar zstep = 1;\n\n    var xmax = max.x,\n        ymax = max.y,\n        zmax = max.z,\n        xmin = min.x,\n        ymin = min.y,\n        zmin = min.z;\n\n    var xmult = nx / (xmax-xmin),\n        ymult = ny / (ymax-ymin),\n        zmult = nz / (zmax-zmin);\n\n    var binsizeX = (xmax - xmin) / nx,\n        binsizeY = (ymax - ymin) / ny,\n        binsizeZ = (zmax - zmin) / nz;\n\n\tvar binRadius = Math.sqrt(binsizeX*binsizeX + binsizeY*binsizeY + binsizeZ*binsizeZ) * 0.5;\n\n    var types = Shape.types;\n    var SPHERE =            types.SPHERE,\n        PLANE =             types.PLANE,\n        BOX =               types.BOX,\n        COMPOUND =          types.COMPOUND,\n        CONVEXPOLYHEDRON =  types.CONVEXPOLYHEDRON;\n\n    var bins=this.bins,\n\t\tbinLengths=this.binLengths,\n        Nbins=this.bins.length;\n\n    // Reset bins\n    for(var i=0; i!==Nbins; i++){\n        binLengths[i] = 0;\n    }\n\n    var ceil = Math.ceil;\n\tvar min = Math.min;\n\tvar max = Math.max;\n\n\tfunction addBoxToBins(x0,y0,z0,x1,y1,z1,bi) {\n\t\tvar xoff0 = ((x0 - xmin) * xmult)|0,\n\t\t\tyoff0 = ((y0 - ymin) * ymult)|0,\n\t\t\tzoff0 = ((z0 - zmin) * zmult)|0,\n\t\t\txoff1 = ceil((x1 - xmin) * xmult),\n\t\t\tyoff1 = ceil((y1 - ymin) * ymult),\n\t\t\tzoff1 = ceil((z1 - zmin) * zmult);\n\n\t\tif (xoff0 < 0) { xoff0 = 0; } else if (xoff0 >= nx) { xoff0 = nx - 1; }\n\t\tif (yoff0 < 0) { yoff0 = 0; } else if (yoff0 >= ny) { yoff0 = ny - 1; }\n\t\tif (zoff0 < 0) { zoff0 = 0; } else if (zoff0 >= nz) { zoff0 = nz - 1; }\n\t\tif (xoff1 < 0) { xoff1 = 0; } else if (xoff1 >= nx) { xoff1 = nx - 1; }\n\t\tif (yoff1 < 0) { yoff1 = 0; } else if (yoff1 >= ny) { yoff1 = ny - 1; }\n\t\tif (zoff1 < 0) { zoff1 = 0; } else if (zoff1 >= nz) { zoff1 = nz - 1; }\n\n\t\txoff0 *= xstep;\n\t\tyoff0 *= ystep;\n\t\tzoff0 *= zstep;\n\t\txoff1 *= xstep;\n\t\tyoff1 *= ystep;\n\t\tzoff1 *= zstep;\n\n\t\tfor (var xoff = xoff0; xoff <= xoff1; xoff += xstep) {\n\t\t\tfor (var yoff = yoff0; yoff <= yoff1; yoff += ystep) {\n\t\t\t\tfor (var zoff = zoff0; zoff <= zoff1; zoff += zstep) {\n\t\t\t\t\tvar idx = xoff+yoff+zoff;\n\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n    // Put all bodies into the bins\n    for(var i=0; i!==N; i++){\n        var bi = bodies[i];\n        var si = bi.shape;\n\n        switch(si.type){\n        case SPHERE:\n            // Put in bin\n            // check if overlap with other bins\n            var x = bi.position.x,\n                y = bi.position.y,\n                z = bi.position.z;\n            var r = si.radius;\n\n\t\t\taddBoxToBins(x-r, y-r, z-r, x+r, y+r, z+r, bi);\n            break;\n\n        case PLANE:\n            if(si.worldNormalNeedsUpdate){\n                si.computeWorldNormal(bi.quaternion);\n            }\n            var planeNormal = si.worldNormal;\n\n\t\t\t//Relative position from origin of plane object to the first bin\n\t\t\t//Incremented as we iterate through the bins\n\t\t\tvar xreset = xmin + binsizeX*0.5 - bi.position.x,\n\t\t\t\tyreset = ymin + binsizeY*0.5 - bi.position.y,\n\t\t\t\tzreset = zmin + binsizeZ*0.5 - bi.position.z;\n\n            var d = GridBroadphase_collisionPairs_d;\n\t\t\td.set(xreset, yreset, zreset);\n\n\t\t\tfor (var xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\n\t\t\t\tfor (var yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\n\t\t\t\t\tfor (var zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\n\t\t\t\t\t\tif (d.dot(planeNormal) < binRadius) {\n\t\t\t\t\t\t\tvar idx = xoff + yoff + zoff;\n\t\t\t\t\t\t\tbins[idx][binLengths[idx]++] = bi;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n            break;\n\n        default:\n\t\t\tif (bi.aabbNeedsUpdate) {\n\t\t\t\tbi.computeAABB();\n\t\t\t}\n\n\t\t\taddBoxToBins(\n\t\t\t\tbi.aabb.lowerBound.x,\n\t\t\t\tbi.aabb.lowerBound.y,\n\t\t\t\tbi.aabb.lowerBound.z,\n\t\t\t\tbi.aabb.upperBound.x,\n\t\t\t\tbi.aabb.upperBound.y,\n\t\t\t\tbi.aabb.upperBound.z,\n\t\t\t\tbi);\n            break;\n        }\n    }\n\n    // Check each bin\n    for(var i=0; i!==Nbins; i++){\n\t\tvar binLength = binLengths[i];\n\t\t//Skip bins with no potential collisions\n\t\tif (binLength > 1) {\n\t\t\tvar bin = bins[i];\n\n\t\t\t// Do N^2 broadphase inside\n\t\t\tfor(var xi=0; xi!==binLength; xi++){\n\t\t\t\tvar bi = bin[xi];\n\t\t\t\tfor(var yi=0; yi!==xi; yi++){\n\t\t\t\t\tvar bj = bin[yi];\n\t\t\t\t\tif(this.needBroadphaseCollision(bi,bj)){\n\t\t\t\t\t\tthis.intersectionTest(bi,bj,pairs1,pairs2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n    }\n\n//\tfor (var zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\n//\t\tconsole.log(\"layer \"+zi);\n//\t\tfor (var yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\n//\t\t\tvar row = '';\n//\t\t\tfor (var xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\n//\t\t\t\tvar idx = xoff + yoff + zoff;\n//\t\t\t\trow += ' ' + binLengths[idx];\n//\t\t\t}\n//\t\t\tconsole.log(row);\n//\t\t}\n//\t}\n\n    this.makePairsUnique(pairs1,pairs2);\n};\n","/**\n * Gamepad controls for A-Frame.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-gamepad-controls\n *\n * For more information about the Gamepad API, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API\n */\n\nconst GamepadButton = require('../../lib/GamepadButton'),\n    GamepadButtonEvent = require('../../lib/GamepadButtonEvent');\n\nconst JOYSTICK_EPS = 0.2;\n\nmodule.exports = AFRAME.registerComponent('gamepad-controls', {\n\n  /*******************************************************************\n   * Statics\n   */\n\n  GamepadButton: GamepadButton,\n\n  /*******************************************************************\n   * Schema\n   */\n\n  schema: {\n    // Controller 0-3\n    controller:        { default: 0, oneOf: [0, 1, 2, 3] },\n\n    // Enable/disable features\n    enabled:           { default: true },\n\n    // Debugging\n    debug:             { default: false },\n\n    // Heading element for rotation\n    camera:          { default: '[camera]', type: 'selector' },\n\n    // Rotation sensitivity\n    rotationSensitivity:  { default: 2.0 },\n  },\n\n  /*******************************************************************\n   * Core\n   */\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    const scene = this.el.sceneEl;\n    this.prevTime = window.performance.now();\n\n    // Button state\n    this.buttons = {};\n\n    // Rotation\n    const rotation = this.el.object3D.rotation;\n    this.pitch = new THREE.Object3D();\n    this.pitch.rotation.x = THREE.Math.degToRad(rotation.x);\n    this.yaw = new THREE.Object3D();\n    this.yaw.position.y = 10;\n    this.yaw.rotation.y = THREE.Math.degToRad(rotation.y);\n    this.yaw.add(this.pitch);\n\n    scene.addBehavior(this);\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function () { this.tick(); },\n\n  /**\n   * Called on each iteration of main render loop.\n   */\n  tick: function (t, dt) {\n    this.updateButtonState();\n    this.updateRotation(dt);\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () { },\n\n  /*******************************************************************\n   * Movement\n   */\n\n  isVelocityActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const dpad = this.getDpad(),\n        joystick0 = this.getJoystick(0),\n        inputX = dpad.x || joystick0.x,\n        inputY = dpad.y || joystick0.y;\n\n    return Math.abs(inputX) > JOYSTICK_EPS || Math.abs(inputY) > JOYSTICK_EPS;\n  },\n\n  getVelocityDelta: function () {\n    const dpad = this.getDpad(),\n        joystick0 = this.getJoystick(0),\n        inputX = dpad.x || joystick0.x,\n        inputY = dpad.y || joystick0.y,\n        dVelocity = new THREE.Vector3();\n\n    if (Math.abs(inputX) > JOYSTICK_EPS) {\n      dVelocity.x += inputX;\n    }\n    if (Math.abs(inputY) > JOYSTICK_EPS) {\n      dVelocity.z += inputY;\n    }\n\n    return dVelocity;\n  },\n\n  /*******************************************************************\n   * Rotation\n   */\n\n  isRotationActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const joystick1 = this.getJoystick(1);\n\n    return Math.abs(joystick1.x) > JOYSTICK_EPS || Math.abs(joystick1.y) > JOYSTICK_EPS;\n  },\n\n  updateRotation: function (dt) {\n    if (!this.isRotationActive()) return;\n\n    const data = this.data;\n    const yaw = this.yaw;\n    const pitch = this.pitch;\n    const lookControls = data.camera.components['look-controls'];\n    const hasLookControls = lookControls && lookControls.pitchObject && lookControls.yawObject;\n\n    // Sync with look-controls pitch/yaw if available.\n    if (hasLookControls) {\n      pitch.rotation.copy(lookControls.pitchObject.rotation);\n      yaw.rotation.copy(lookControls.yawObject.rotation);\n    }\n\n    const lookVector = this.getJoystick(1);\n\n    if (Math.abs(lookVector.x) <= JOYSTICK_EPS) lookVector.x = 0;\n    if (Math.abs(lookVector.y) <= JOYSTICK_EPS) lookVector.y = 0;\n\n    lookVector.multiplyScalar(data.rotationSensitivity * dt / 1000);\n    yaw.rotation.y -= lookVector.x;\n    pitch.rotation.x -= lookVector.y;\n    pitch.rotation.x = Math.max(- Math.PI / 2, Math.min(Math.PI / 2, pitch.rotation.x));\n    data.camera.object3D.rotation.set(pitch.rotation.x, yaw.rotation.y, 0);\n\n    // Sync with look-controls pitch/yaw if available.\n    if (hasLookControls) {\n      lookControls.pitchObject.rotation.copy(pitch.rotation);\n      lookControls.yawObject.rotation.copy(yaw.rotation);\n    }\n  },\n\n  /*******************************************************************\n   * Button events\n   */\n\n  updateButtonState: function () {\n    const gamepad = this.getGamepad();\n    if (this.data.enabled && gamepad) {\n\n      // Fire DOM events for button state changes.\n      for (var i = 0; i < gamepad.buttons.length; i++) {\n        if (gamepad.buttons[i].pressed && !this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttondown', i, gamepad.buttons[i]));\n        } else if (!gamepad.buttons[i].pressed && this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttonup', i, gamepad.buttons[i]));\n        }\n        this.buttons[i] = gamepad.buttons[i].pressed;\n      }\n\n    } else if (Object.keys(this.buttons)) {\n      // Reset state if controls are disabled or controller is lost.\n      this.buttons = {};\n    }\n  },\n\n  emit: function (event) {\n    // Emit original event.\n    this.el.emit(event.type, event);\n\n    // Emit convenience event, identifying button index.\n    this.el.emit(\n      event.type + ':' + event.index,\n      new GamepadButtonEvent(event.type, event.index, event)\n    );\n  },\n\n  /*******************************************************************\n   * Gamepad state\n   */\n\n  /**\n   * Returns the Gamepad instance attached to the component. If connected,\n   * a proxy-controls component may provide access to Gamepad input from a\n   * remote device.\n   *\n   * @return {Gamepad}\n   */\n  getGamepad: function () {\n    const localGamepad = navigator.getGamepads\n          && navigator.getGamepads()[this.data.controller],\n        proxyControls = this.el.sceneEl.components['proxy-controls'],\n        proxyGamepad = proxyControls && proxyControls.isConnected()\n          && proxyControls.getGamepad(this.data.controller);\n    return proxyGamepad || localGamepad;\n  },\n\n  /**\n   * Returns the state of the given button.\n   * @param  {number} index The button (0-N) for which to find state.\n   * @return {GamepadButton}\n   */\n  getButton: function (index) {\n    return this.getGamepad().buttons[index];\n  },\n\n  /**\n   * Returns state of the given axis. Axes are labelled 0-N, where 0-1 will\n   * represent X/Y on the first joystick, and 2-3 X/Y on the second.\n   * @param  {number} index The axis (0-N) for which to find state.\n   * @return {number} On the interval [-1,1].\n   */\n  getAxis: function (index) {\n    return this.getGamepad().axes[index];\n  },\n\n  /**\n   * Returns the state of the given joystick (0 or 1) as a THREE.Vector2.\n   * @param  {number} id The joystick (0, 1) for which to find state.\n   * @return {THREE.Vector2}\n   */\n  getJoystick: function (index) {\n    const gamepad = this.getGamepad();\n    switch (index) {\n      case 0: return new THREE.Vector2(gamepad.axes[0], gamepad.axes[1]);\n      case 1: return new THREE.Vector2(gamepad.axes[2], gamepad.axes[3]);\n      default: throw new Error('Unexpected joystick index \"%d\".', index);\n    }\n  },\n\n  /**\n   * Returns the state of the dpad as a THREE.Vector2.\n   * @return {THREE.Vector2}\n   */\n  getDpad: function () {\n    const gamepad = this.getGamepad();\n    if (!gamepad.buttons[GamepadButton.DPAD_RIGHT]) {\n      return new THREE.Vector2();\n    }\n    return new THREE.Vector2(\n      (gamepad.buttons[GamepadButton.DPAD_RIGHT].pressed ? 1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_LEFT].pressed ? -1 : 0),\n      (gamepad.buttons[GamepadButton.DPAD_UP].pressed ? -1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_DOWN].pressed ? 1 : 0)\n    );\n  },\n\n  /**\n   * Returns true if the gamepad is currently connected to the system.\n   * @return {boolean}\n   */\n  isConnected: function () {\n    const gamepad = this.getGamepad();\n    return !!(gamepad && gamepad.connected);\n  },\n\n  /**\n   * Returns a string containing some information about the controller. Result\n   * may vary across browsers, for a given controller.\n   * @return {string}\n   */\n  getID: function () {\n    return this.getGamepad().id;\n  }\n});\n","/**\n * Apply this component to models that looks \"blocky\", to have Three.js compute\n * vertex normals on the fly for a \"smoother\" look.\n */\nmodule.exports = AFRAME.registerComponent('mesh-smooth', {\n  init: function () {\n    this.el.addEventListener('model-loaded', (e) => {\n      e.detail.model.traverse((node) => {\n        if (node.isMesh) node.geometry.computeVertexNormals();\n      });\n    });\n  }\n});\n","/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube:           {},\n  },\n  mappings: {\n    path:           'tube.path',\n    segments:       'tube.segments',\n    radius:         'tube.radius',\n    radialSegments: 'tube.radialSegments',\n    closed:         'tube.closed'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path:           {default: []},\n    segments:       {default: 64},\n    radius:         {default: 1},\n    radialSegments: {default: 8},\n    closed:         {default: false}\n  },\n\n  init: function () {\n    const el = this.el,\n        data = this.data;\n    let material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    const curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    const geometry = new THREE.TubeGeometry(\n      curve, data.segments, data.radius, data.radialSegments, data.closed\n    );\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n\n  remove: function () {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});\n","/**\n * nav-mesh\n *\n * Waits for a mesh to be loaded on the current entity, then sets it as the\n * nav mesh in the pathfinding system.\n */\nmodule.exports = AFRAME.registerComponent('nav-mesh', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.hasLoadedNavMesh = false;\n    this.el.addEventListener('model-loaded', this.loadNavMesh.bind(this));\n  },\n\n  play: function () {\n    if (!this.hasLoadedNavMesh) this.loadNavMesh();\n  },\n\n  loadNavMesh: function () {\n    const object = this.el.getObject3D('mesh');\n    const scene = this.el.sceneEl.object3D;\n\n    if (!object) return;\n\n    let navMesh;\n    object.traverse((node) => {\n      if (node.isMesh) navMesh = node;\n    });\n\n    if (!navMesh) return;\n\n    const navMeshGeometry = navMesh.geometry.isBufferGeometry\n      ? new THREE.Geometry().fromBufferGeometry(navMesh.geometry)\n      : navMesh.geometry.clone();\n\n    scene.updateMatrixWorld();\n    navMeshGeometry.applyMatrix(navMesh.matrixWorld);\n    this.system.setNavMeshGeometry(navMeshGeometry);\n\n    this.hasLoadedNavMesh = true;\n  }\n});\n","module.exports = {\n  GRAVITY: -9.8,\n  MAX_INTERVAL: 4 / 60,\n  ITERATIONS: 10,\n  CONTACT_MATERIAL: {\n    friction:     0.01,\n    restitution:  0.3,\n    contactEquationStiffness: 1e8,\n    contactEquationRelaxation: 3,\n    frictionEquationStiffness: 1e8,\n    frictionEquationRegularization: 3\n  }\n};\n","require('./checkpoint-controls');\nrequire('./gamepad-controls');\nrequire('./keyboard-controls');\nrequire('./touch-controls');\nrequire('./movement-controls');\nrequire('./trackpad-controls');\n","const Path = require('three-pathfinding');\n\nconst pathfinder = new Path();\nconst ZONE = 'level';\n\n/**\n * nav\n *\n * Pathfinding system, using PatrolJS.\n */\nmodule.exports = AFRAME.registerSystem('nav', {\n  init: function () {\n    this.navMesh = null;\n    this.agents = new Set();\n  },\n\n  /**\n   * @param {THREE.Geometry} geometry\n   */\n  setNavMeshGeometry: function (geometry) {\n    this.navMesh = new THREE.Mesh(geometry);\n    pathfinder.setZoneData(ZONE, Path.createZone(geometry));\n    Array.from(this.agents).forEach((agent) => agent.updateNavLocation());\n  },\n\n  /**\n   * @return {THREE.Mesh}\n   */\n  getNavMesh: function () {\n    return this.navMesh;\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  addAgent: function (ctrl) {\n    this.agents.add(ctrl);\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  removeAgent: function (ctrl) {\n    this.agents.delete(ctrl);\n  },\n\n  /**\n   * @param  {THREE.Vector3} start\n   * @param  {THREE.Vector3} end\n   * @param  {number} groupID\n   * @return {Array<THREE.Vector3>}\n   */\n  getPath: function (start, end, groupID) {\n    return this.navMesh\n      ? pathfinder.findPath(start, end, ZONE, groupID)\n      : null;\n  },\n\n  /**\n   * @param {THREE.Vector3} position\n   * @return {number}\n   */\n  getGroup: function (position) {\n    return this.navMesh\n      ? pathfinder.getGroup(ZONE, position)\n      : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} position\n   * @param  {number} groupID\n   * @return {Node}\n   */\n  getNode: function (position, groupID) {\n    return this.navMesh\n      ? pathfinder.getClosestNode(position, ZONE, groupID, true)\n      : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} start Starting position.\n   * @param  {THREE.Vector3} end Desired ending position.\n   * @param  {number} groupID\n   * @param  {Node} node\n   * @param  {THREE.Vector3} endTarget (Output) Adjusted step end position.\n   * @return {Node} Current node, after step is taken.\n   */\n  clampStep: function (start, end, groupID, node, endTarget) {\n    if (!this.navMesh) {\n      endTarget.copy(end);\n      return null;\n    } else if (!node) {\n      endTarget.copy(end);\n      return this.getNode(end, groupID);\n    }\n    return pathfinder.clampStep(start, end, node, ZONE, groupID, endTarget);\n  }\n});\n","module.exports = Mat3;\n\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3x3 matrix.\n * @class Mat3\n * @constructor\n * @param array elements Array of nine elements. Optional.\n * @author schteppe / http://github.com/schteppe\n */\nfunction Mat3(elements){\n    /**\n     * A vector of length 9, containing all matrix elements\n     * @property {Array} elements\n     */\n    if(elements){\n        this.elements = elements;\n    } else {\n        this.elements = [0,0,0,0,0,0,0,0,0];\n    }\n}\n\n/**\n * Sets the matrix to identity\n * @method identity\n * @todo Should perhaps be renamed to setIdentity() to be more clear.\n * @todo Create another function that immediately creates an identity matrix eg. eye()\n */\nMat3.prototype.identity = function(){\n    var e = this.elements;\n    e[0] = 1;\n    e[1] = 0;\n    e[2] = 0;\n\n    e[3] = 0;\n    e[4] = 1;\n    e[5] = 0;\n\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 1;\n};\n\n/**\n * Set all elements to zero\n * @method setZero\n */\nMat3.prototype.setZero = function(){\n    var e = this.elements;\n    e[0] = 0;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n    e[4] = 0;\n    e[5] = 0;\n    e[6] = 0;\n    e[7] = 0;\n    e[8] = 0;\n};\n\n/**\n * Sets the matrix diagonal elements from a Vec3\n * @method setTrace\n * @param {Vec3} vec3\n */\nMat3.prototype.setTrace = function(vec3){\n    var e = this.elements;\n    e[0] = vec3.x;\n    e[4] = vec3.y;\n    e[8] = vec3.z;\n};\n\n/**\n * Gets the matrix diagonal elements\n * @method getTrace\n * @return {Vec3}\n */\nMat3.prototype.getTrace = function(target){\n    var target = target || new Vec3();\n    var e = this.elements;\n    target.x = e[0];\n    target.y = e[4];\n    target.z = e[8];\n};\n\n/**\n * Matrix-Vector multiplication\n * @method vmult\n * @param {Vec3} v The vector to multiply with\n * @param {Vec3} target Optional, target to save the result in.\n */\nMat3.prototype.vmult = function(v,target){\n    target = target || new Vec3();\n\n    var e = this.elements,\n        x = v.x,\n        y = v.y,\n        z = v.z;\n    target.x = e[0]*x + e[1]*y + e[2]*z;\n    target.y = e[3]*x + e[4]*y + e[5]*z;\n    target.z = e[6]*x + e[7]*y + e[8]*z;\n\n    return target;\n};\n\n/**\n * Matrix-scalar multiplication\n * @method smult\n * @param {Number} s\n */\nMat3.prototype.smult = function(s){\n    for(var i=0; i<this.elements.length; i++){\n        this.elements[i] *= s;\n    }\n};\n\n/**\n * Matrix multiplication\n * @method mmult\n * @param {Mat3} m Matrix to multiply with from left side.\n * @return {Mat3} The result.\n */\nMat3.prototype.mmult = function(m,target){\n    var r = target || new Mat3();\n    for(var i=0; i<3; i++){\n        for(var j=0; j<3; j++){\n            var sum = 0.0;\n            for(var k=0; k<3; k++){\n                sum += m.elements[i+k*3] * this.elements[k+j*3];\n            }\n            r.elements[i+j*3] = sum;\n        }\n    }\n    return r;\n};\n\n/**\n * Scale each column of the matrix\n * @method scale\n * @param {Vec3} v\n * @return {Mat3} The result.\n */\nMat3.prototype.scale = function(v,target){\n    target = target || new Mat3();\n    var e = this.elements,\n        t = target.elements;\n    for(var i=0; i!==3; i++){\n        t[3*i + 0] = v.x * e[3*i + 0];\n        t[3*i + 1] = v.y * e[3*i + 1];\n        t[3*i + 2] = v.z * e[3*i + 2];\n    }\n    return target;\n};\n\n/**\n * Solve Ax=b\n * @method solve\n * @param {Vec3} b The right hand side\n * @param {Vec3} target Optional. Target vector to save in.\n * @return {Vec3} The solution x\n * @todo should reuse arrays\n */\nMat3.prototype.solve = function(b,target){\n    target = target || new Vec3();\n\n    // Construct equations\n    var nr = 3; // num rows\n    var nc = 4; // num cols\n    var eqns = [];\n    for(var i=0; i<nr*nc; i++){\n        eqns.push(0);\n    }\n    var i,j;\n    for(i=0; i<3; i++){\n        for(j=0; j<3; j++){\n            eqns[i+nc*j] = this.elements[i+3*j];\n        }\n    }\n    eqns[3+4*0] = b.x;\n    eqns[3+4*1] = b.y;\n    eqns[3+4*2] = b.z;\n\n    // Compute right upper triangular version of the matrix - Gauss elimination\n    var n = 3, k = n, np;\n    var kp = 4; // num rows\n    var p, els;\n    do {\n        i = k - n;\n        if (eqns[i+nc*i] === 0) {\n            // the pivot is null, swap lines\n            for (j = i + 1; j < k; j++) {\n                if (eqns[i+nc*j] !== 0) {\n                    np = kp;\n                    do {  // do ligne( i ) = ligne( i ) + ligne( k )\n                        p = kp - np;\n                        eqns[p+nc*i] += eqns[p+nc*j];\n                    } while (--np);\n                    break;\n                }\n            }\n        }\n        if (eqns[i+nc*i] !== 0) {\n            for (j = i + 1; j < k; j++) {\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n                np = kp;\n                do {  // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\n                    p = kp - np;\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n                } while (--np);\n            }\n        }\n    } while (--n);\n\n    // Get the solution\n    target.z = eqns[2*nc+3] / eqns[2*nc+2];\n    target.y = (eqns[1*nc+3] - eqns[1*nc+2]*target.z) / eqns[1*nc+1];\n    target.x = (eqns[0*nc+3] - eqns[0*nc+2]*target.z - eqns[0*nc+1]*target.y) / eqns[0*nc+0];\n\n    if(isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x===Infinity || target.y===Infinity || target.z===Infinity){\n        throw \"Could not solve equation! Got x=[\"+target.toString()+\"], b=[\"+b.toString()+\"], A=[\"+this.toString()+\"]\";\n    }\n\n    return target;\n};\n\n/**\n * Get an element in the matrix by index. Index starts at 0, not 1!!!\n * @method e\n * @param {Number} row\n * @param {Number} column\n * @param {Number} value Optional. If provided, the matrix element will be set to this value.\n * @return {Number}\n */\nMat3.prototype.e = function( row , column ,value){\n    if(value===undefined){\n        return this.elements[column+3*row];\n    } else {\n        // Set value\n        this.elements[column+3*row] = value;\n    }\n};\n\n/**\n * Copy another matrix into this matrix object.\n * @method copy\n * @param {Mat3} source\n * @return {Mat3} this\n */\nMat3.prototype.copy = function(source){\n    for(var i=0; i < source.elements.length; i++){\n        this.elements[i] = source.elements[i];\n    }\n    return this;\n};\n\n/**\n * Returns a string representation of the matrix.\n * @method toString\n * @return string\n */\nMat3.prototype.toString = function(){\n    var r = \"\";\n    var sep = \",\";\n    for(var i=0; i<9; i++){\n        r += this.elements[i] + sep;\n    }\n    return r;\n};\n\n/**\n * reverse the matrix\n * @method reverse\n * @param {Mat3} target Optional. Target matrix to save in.\n * @return {Mat3} The solution x\n */\nMat3.prototype.reverse = function(target){\n\n    target = target || new Mat3();\n\n    // Construct equations\n    var nr = 3; // num rows\n    var nc = 6; // num cols\n    var eqns = [];\n    for(var i=0; i<nr*nc; i++){\n        eqns.push(0);\n    }\n    var i,j;\n    for(i=0; i<3; i++){\n        for(j=0; j<3; j++){\n            eqns[i+nc*j] = this.elements[i+3*j];\n        }\n    }\n    eqns[3+6*0] = 1;\n    eqns[3+6*1] = 0;\n    eqns[3+6*2] = 0;\n    eqns[4+6*0] = 0;\n    eqns[4+6*1] = 1;\n    eqns[4+6*2] = 0;\n    eqns[5+6*0] = 0;\n    eqns[5+6*1] = 0;\n    eqns[5+6*2] = 1;\n\n    // Compute right upper triangular version of the matrix - Gauss elimination\n    var n = 3, k = n, np;\n    var kp = nc; // num rows\n    var p;\n    do {\n        i = k - n;\n        if (eqns[i+nc*i] === 0) {\n            // the pivot is null, swap lines\n            for (j = i + 1; j < k; j++) {\n                if (eqns[i+nc*j] !== 0) {\n                    np = kp;\n                    do { // do line( i ) = line( i ) + line( k )\n                        p = kp - np;\n                        eqns[p+nc*i] += eqns[p+nc*j];\n                    } while (--np);\n                    break;\n                }\n            }\n        }\n        if (eqns[i+nc*i] !== 0) {\n            for (j = i + 1; j < k; j++) {\n                var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n                np = kp;\n                do { // do line( k ) = line( k ) - multiplier * line( i )\n                    p = kp - np;\n                    eqns[p+nc*j] = p <= i ? 0 : eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n                } while (--np);\n            }\n        }\n    } while (--n);\n\n    // eliminate the upper left triangle of the matrix\n    i = 2;\n    do {\n        j = i-1;\n        do {\n            var multiplier = eqns[i+nc*j] / eqns[i+nc*i];\n            np = nc;\n            do {\n                p = nc - np;\n                eqns[p+nc*j] =  eqns[p+nc*j] - eqns[p+nc*i] * multiplier ;\n            } while (--np);\n        } while (j--);\n    } while (--i);\n\n    // operations on the diagonal\n    i = 2;\n    do {\n        var multiplier = 1 / eqns[i+nc*i];\n        np = nc;\n        do {\n            p = nc - np;\n            eqns[p+nc*i] = eqns[p+nc*i] * multiplier ;\n        } while (--np);\n    } while (i--);\n\n    i = 2;\n    do {\n        j = 2;\n        do {\n            p = eqns[nr+j+nc*i];\n            if( isNaN( p ) || p ===Infinity ){\n                throw \"Could not reverse! A=[\"+this.toString()+\"]\";\n            }\n            target.e( i , j , p );\n        } while (j--);\n    } while (i--);\n\n    return target;\n};\n\n/**\n * Set the matrix from a quaterion\n * @method setRotationFromQuaternion\n * @param {Quaternion} q\n */\nMat3.prototype.setRotationFromQuaternion = function( q ) {\n    var x = q.x, y = q.y, z = q.z, w = q.w,\n        x2 = x + x, y2 = y + y, z2 = z + z,\n        xx = x * x2, xy = x * y2, xz = x * z2,\n        yy = y * y2, yz = y * z2, zz = z * z2,\n        wx = w * x2, wy = w * y2, wz = w * z2,\n        e = this.elements;\n\n    e[3*0 + 0] = 1 - ( yy + zz );\n    e[3*0 + 1] = xy - wz;\n    e[3*0 + 2] = xz + wy;\n\n    e[3*1 + 0] = xy + wz;\n    e[3*1 + 1] = 1 - ( xx + zz );\n    e[3*1 + 2] = yz - wx;\n\n    e[3*2 + 0] = xz - wy;\n    e[3*2 + 1] = yz + wx;\n    e[3*2 + 2] = 1 - ( xx + yy );\n\n    return this;\n};\n\n/**\n * Transpose the matrix\n * @method transpose\n * @param  {Mat3} target Where to store the result.\n * @return {Mat3} The target Mat3, or a new Mat3 if target was omitted.\n */\nMat3.prototype.transpose = function( target ) {\n    target = target || new Mat3();\n\n    var Mt = target.elements,\n        M = this.elements;\n\n    for(var i=0; i!==3; i++){\n        for(var j=0; j!==3; j++){\n            Mt[3*i + j] = M[3*j + i];\n        }\n    }\n\n    return target;\n};\n","module.exports = AFRAME.registerComponent('nav-agent', {\n  schema: {\n    destination: {type: 'vec3'},\n    active: {default: false},\n    speed: {default: 2}\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.system.addAgent(this);\n    this.group = null;\n    this.path = [];\n    this.raycaster = new THREE.Raycaster();\n  },\n  remove: function () {\n    this.system.removeAgent(this);\n  },\n  update: function () {\n    this.path.length = 0;\n  },\n  updateNavLocation: function () {\n    this.group = null;\n    this.path = [];\n  },\n  tick: (function () {\n    const vDest = new THREE.Vector3();\n    const vDelta = new THREE.Vector3();\n    const vNext = new THREE.Vector3();\n\n    return function (t, dt) {\n      const el = this.el;\n      const data = this.data;\n      const raycaster = this.raycaster;\n      const speed = data.speed * dt / 1000;\n\n      if (!data.active) return;\n\n      // Use PatrolJS pathfinding system to get shortest path to target.\n      if (!this.path.length) {\n        const position = this.el.object3D.position;\n        this.group = this.group || this.system.getGroup(position);\n        this.path = this.system.getPath(position, vDest.copy(data.destination), this.group) || [];\n        el.emit('nav-start');\n      }\n\n      // If no path is found, exit.\n      if (!this.path.length) {\n        console.warn('[nav] Unable to find path to %o.', data.destination);\n        this.el.setAttribute('nav-agent', {active: false});\n        el.emit('nav-end');\n        return;\n      }\n\n      // Current segment is a vector from current position to next waypoint.\n      const vCurrent = el.object3D.position;\n      const vWaypoint = this.path[0];\n      vDelta.subVectors(vWaypoint, vCurrent);\n\n      const distance = vDelta.length();\n      let gazeTarget;\n\n      if (distance < speed) {\n        // If <1 step from current waypoint, discard it and move toward next.\n        this.path.shift();\n\n        // After discarding the last waypoint, exit pathfinding.\n        if (!this.path.length) {\n          this.el.setAttribute('nav-agent', {active: false});\n          el.emit('nav-end');\n          return;\n        }\n\n        vNext.copy(vCurrent);\n        gazeTarget = this.path[0];\n      } else {\n        // If still far away from next waypoint, find next position for\n        // the current frame.\n        vNext.copy(vDelta.setLength(speed)).add(vCurrent);\n        gazeTarget = vWaypoint;\n      }\n\n      // Look at the next waypoint.\n      gazeTarget.y = vCurrent.y;\n      el.object3D.lookAt(gazeTarget);\n\n      // Raycast against the nav mesh, to keep the agent moving along the\n      // ground, not traveling in a straight line from higher to lower waypoints.\n      raycaster.ray.origin.copy(vNext);\n      raycaster.ray.origin.y += 1.5;\n      raycaster.ray.direction.y = -1;\n      const intersections = raycaster.intersectObject(this.system.getNavMesh());\n\n      if (!intersections.length) {\n        // Raycasting failed. Step toward the waypoint and hope for the best.\n        vCurrent.copy(vNext);\n      } else {\n        // Re-project next position onto nav mesh.\n        vDelta.subVectors(intersections[0].point, vCurrent);\n        vCurrent.add(vDelta.setLength(speed));\n      }\n\n    };\n  }())\n});\n","var Shape = require('./Shape');\nvar ConvexPolyhedron = require('./ConvexPolyhedron');\nvar Vec3 = require('../math/Vec3');\nvar Utils = require('../utils/Utils');\n\nmodule.exports = Heightfield;\n\n/**\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\n * @class Heightfield\n * @extends Shape\n * @constructor\n * @param {Array} data An array of Y values that will be used to construct the terrain.\n * @param {object} options\n * @param {Number} [options.minValue] Minimum value of the data points in the data array. Will be computed automatically if not given.\n * @param {Number} [options.maxValue] Maximum value.\n * @param {Number} [options.elementSize=0.1] World spacing between the data points in X direction.\n * @todo Should be possible to use along all axes, not just y\n * @todo should be possible to scale along all axes\n *\n * @example\n *     // Generate some height data (y-values).\n *     var data = [];\n *     for(var i = 0; i < 1000; i++){\n *         var y = 0.5 * Math.cos(0.2 * i);\n *         data.push(y);\n *     }\n *\n *     // Create the heightfield shape\n *     var heightfieldShape = new Heightfield(data, {\n *         elementSize: 1 // Distance between the data points in X and Y directions\n *     });\n *     var heightfieldBody = new Body();\n *     heightfieldBody.addShape(heightfieldShape);\n *     world.addBody(heightfieldBody);\n */\nfunction Heightfield(data, options){\n    options = Utils.defaults(options, {\n        maxValue : null,\n        minValue : null,\n        elementSize : 1\n    });\n\n    /**\n     * An array of numbers, or height values, that are spread out along the x axis.\n     * @property {array} data\n     */\n    this.data = data;\n\n    /**\n     * Max value of the data\n     * @property {number} maxValue\n     */\n    this.maxValue = options.maxValue;\n\n    /**\n     * Max value of the data\n     * @property {number} minValue\n     */\n    this.minValue = options.minValue;\n\n    /**\n     * The width of each element\n     * @property {number} elementSize\n     * @todo elementSizeX and Y\n     */\n    this.elementSize = options.elementSize;\n\n    if(options.minValue === null){\n        this.updateMinValue();\n    }\n    if(options.maxValue === null){\n        this.updateMaxValue();\n    }\n\n    this.cacheEnabled = true;\n\n    Shape.call(this);\n\n    this.pillarConvex = new ConvexPolyhedron();\n    this.pillarOffset = new Vec3();\n\n    this.type = Shape.types.HEIGHTFIELD;\n    this.updateBoundingSphereRadius();\n\n    // \"i_j_isUpper\" => { convex: ..., offset: ... }\n    // for example:\n    // _cachedPillars[\"0_2_1\"]\n    this._cachedPillars = {};\n}\nHeightfield.prototype = new Shape();\n\n/**\n * Call whenever you change the data array.\n * @method update\n */\nHeightfield.prototype.update = function(){\n    this._cachedPillars = {};\n};\n\n/**\n * Update the .minValue property\n * @method updateMinValue\n */\nHeightfield.prototype.updateMinValue = function(){\n    var data = this.data;\n    var minValue = data[0][0];\n    for(var i=0; i !== data.length; i++){\n        for(var j=0; j !== data[i].length; j++){\n            var v = data[i][j];\n            if(v < minValue){\n                minValue = v;\n            }\n        }\n    }\n    this.minValue = minValue;\n};\n\n/**\n * Update the .maxValue property\n * @method updateMaxValue\n */\nHeightfield.prototype.updateMaxValue = function(){\n    var data = this.data;\n    var maxValue = data[0][0];\n    for(var i=0; i !== data.length; i++){\n        for(var j=0; j !== data[i].length; j++){\n            var v = data[i][j];\n            if(v > maxValue){\n                maxValue = v;\n            }\n        }\n    }\n    this.maxValue = maxValue;\n};\n\n/**\n * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\n * @method setHeightValueAtIndex\n * @param {integer} xi\n * @param {integer} yi\n * @param {number} value\n */\nHeightfield.prototype.setHeightValueAtIndex = function(xi, yi, value){\n    var data = this.data;\n    data[xi][yi] = value;\n\n    // Invalidate cache\n    this.clearCachedConvexTrianglePillar(xi, yi, false);\n    if(xi > 0){\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\n        this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\n    }\n    if(yi > 0){\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\n        this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\n    }\n    if(yi > 0 && xi > 0){\n        this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\n    }\n};\n\n/**\n * Get max/min in a rectangle in the matrix data\n * @method getRectMinMax\n * @param  {integer} iMinX\n * @param  {integer} iMinY\n * @param  {integer} iMaxX\n * @param  {integer} iMaxY\n * @param  {array} [result] An array to store the results in.\n * @return {array} The result array, if it was passed in. Minimum will be at position 0 and max at 1.\n */\nHeightfield.prototype.getRectMinMax = function (iMinX, iMinY, iMaxX, iMaxY, result) {\n    result = result || [];\n\n    // Get max and min of the data\n    var data = this.data,\n        max = this.minValue; // Set first value\n    for(var i = iMinX; i <= iMaxX; i++){\n        for(var j = iMinY; j <= iMaxY; j++){\n            var height = data[i][j];\n            if(height > max){\n                max = height;\n            }\n        }\n    }\n\n    result[0] = this.minValue;\n    result[1] = max;\n};\n\n\n\n/**\n * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\n * @method getIndexOfPosition\n * @param  {number} x\n * @param  {number} y\n * @param  {array} result Two-element array\n * @param  {boolean} clamp If the position should be clamped to the heightfield edge.\n * @return {boolean}\n */\nHeightfield.prototype.getIndexOfPosition = function (x, y, result, clamp) {\n\n    // Get the index of the data points to test against\n    var w = this.elementSize;\n    var data = this.data;\n    var xi = Math.floor(x / w);\n    var yi = Math.floor(y / w);\n\n    result[0] = xi;\n    result[1] = yi;\n\n    if(clamp){\n        // Clamp index to edges\n        if(xi < 0){ xi = 0; }\n        if(yi < 0){ yi = 0; }\n        if(xi >= data.length - 1){ xi = data.length - 1; }\n        if(yi >= data[0].length - 1){ yi = data[0].length - 1; }\n    }\n\n    // Bail out if we are out of the terrain\n    if(xi < 0 || yi < 0 || xi >= data.length-1 || yi >= data[0].length-1){\n        return false;\n    }\n\n    return true;\n};\n\n\nvar getHeightAt_idx = [];\nvar getHeightAt_weights = new Vec3();\nvar getHeightAt_a = new Vec3();\nvar getHeightAt_b = new Vec3();\nvar getHeightAt_c = new Vec3();\n\nHeightfield.prototype.getTriangleAt = function(x, y, edgeClamp, a, b, c){\n    var idx = getHeightAt_idx;\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    var xi = idx[0];\n    var yi = idx[1];\n\n    var data = this.data;\n    if(edgeClamp){\n        xi = Math.min(data.length - 2, Math.max(0, xi));\n        yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n\n    var elementSize = this.elementSize;\n    var lowerDist2 = Math.pow(x / elementSize - xi, 2) + Math.pow(y / elementSize - yi, 2);\n    var upperDist2 = Math.pow(x / elementSize - (xi + 1), 2) + Math.pow(y / elementSize - (yi + 1), 2);\n    var upper = lowerDist2 > upperDist2;\n    this.getTriangle(xi, yi, upper, a, b, c);\n    return upper;\n};\n\nvar getNormalAt_a = new Vec3();\nvar getNormalAt_b = new Vec3();\nvar getNormalAt_c = new Vec3();\nvar getNormalAt_e0 = new Vec3();\nvar getNormalAt_e1 = new Vec3();\nHeightfield.prototype.getNormalAt = function(x, y, edgeClamp, result){\n    var a = getNormalAt_a;\n    var b = getNormalAt_b;\n    var c = getNormalAt_c;\n    var e0 = getNormalAt_e0;\n    var e1 = getNormalAt_e1;\n    this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    b.vsub(a, e0);\n    c.vsub(a, e1);\n    e0.cross(e1, result);\n    result.normalize();\n};\n\n\n/**\n * Get an AABB of a square in the heightfield\n * @param  {number} xi\n * @param  {number} yi\n * @param  {AABB} result\n */\nHeightfield.prototype.getAabbAtIndex = function(xi, yi, result){\n    var data = this.data;\n    var elementSize = this.elementSize;\n\n    result.lowerBound.set(\n        xi * elementSize,\n        yi * elementSize,\n        data[xi][yi]\n    );\n    result.upperBound.set(\n        (xi + 1) * elementSize,\n        (yi + 1) * elementSize,\n        data[xi + 1][yi + 1]\n    );\n};\n\n\n/**\n * Get the height in the heightfield at a given position\n * @param  {number} x\n * @param  {number} y\n * @param  {boolean} edgeClamp\n * @return {number}\n */\nHeightfield.prototype.getHeightAt = function(x, y, edgeClamp){\n    var data = this.data;\n    var a = getHeightAt_a;\n    var b = getHeightAt_b;\n    var c = getHeightAt_c;\n    var idx = getHeightAt_idx;\n\n    this.getIndexOfPosition(x, y, idx, edgeClamp);\n    var xi = idx[0];\n    var yi = idx[1];\n    if(edgeClamp){\n        xi = Math.min(data.length - 2, Math.max(0, xi));\n        yi = Math.min(data[0].length - 2, Math.max(0, yi));\n    }\n    var upper = this.getTriangleAt(x, y, edgeClamp, a, b, c);\n    barycentricWeights(x, y, a.x, a.y, b.x, b.y, c.x, c.y, getHeightAt_weights);\n\n    var w = getHeightAt_weights;\n\n    if(upper){\n\n        // Top triangle verts\n        return data[xi + 1][yi + 1] * w.x + data[xi][yi + 1] * w.y + data[xi + 1][yi] * w.z;\n\n    } else {\n\n        // Top triangle verts\n        return data[xi][yi] * w.x + data[xi + 1][yi] * w.y + data[xi][yi + 1] * w.z;\n    }\n};\n\n// from https://en.wikipedia.org/wiki/Barycentric_coordinate_system\nfunction barycentricWeights(x, y, ax, ay, bx, by, cx, cy, result){\n    result.x = ((by - cy) * (x - cx) + (cx - bx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n    result.y = ((cy - ay) * (x - cx) + (ax - cx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n    result.z = 1 - result.x - result.y;\n}\n\nHeightfield.prototype.getCacheConvexTrianglePillarKey = function(xi, yi, getUpperTriangle){\n    return xi + '_' + yi + '_' + (getUpperTriangle ? 1 : 0);\n};\n\nHeightfield.prototype.getCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n\nHeightfield.prototype.setCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle, convex, offset){\n    this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\n        convex: convex,\n        offset: offset\n    };\n};\n\nHeightfield.prototype.clearCachedConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n\n/**\n * Get a triangle from the heightfield\n * @param  {number} xi\n * @param  {number} yi\n * @param  {boolean} upper\n * @param  {Vec3} a\n * @param  {Vec3} b\n * @param  {Vec3} c\n */\nHeightfield.prototype.getTriangle = function(xi, yi, upper, a, b, c){\n    var data = this.data;\n    var elementSize = this.elementSize;\n\n    if(upper){\n\n        // Top triangle verts\n        a.set(\n            (xi + 1) * elementSize,\n            (yi + 1) * elementSize,\n            data[xi + 1][yi + 1]\n        );\n        b.set(\n            xi * elementSize,\n            (yi + 1) * elementSize,\n            data[xi][yi + 1]\n        );\n        c.set(\n            (xi + 1) * elementSize,\n            yi * elementSize,\n            data[xi + 1][yi]\n        );\n\n    } else {\n\n        // Top triangle verts\n        a.set(\n            xi * elementSize,\n            yi * elementSize,\n            data[xi][yi]\n        );\n        b.set(\n            (xi + 1) * elementSize,\n            yi * elementSize,\n            data[xi + 1][yi]\n        );\n        c.set(\n            xi * elementSize,\n            (yi + 1) * elementSize,\n            data[xi][yi + 1]\n        );\n    }\n};\n\n/**\n * Get a triangle in the terrain in the form of a triangular convex shape.\n * @method getConvexTrianglePillar\n * @param  {integer} i\n * @param  {integer} j\n * @param  {boolean} getUpperTriangle\n */\nHeightfield.prototype.getConvexTrianglePillar = function(xi, yi, getUpperTriangle){\n    var result = this.pillarConvex;\n    var offsetResult = this.pillarOffset;\n\n    if(this.cacheEnabled){\n        var data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\n        if(data){\n            this.pillarConvex = data.convex;\n            this.pillarOffset = data.offset;\n            return;\n        }\n\n        result = new ConvexPolyhedron();\n        offsetResult = new Vec3();\n\n        this.pillarConvex = result;\n        this.pillarOffset = offsetResult;\n    }\n\n    var data = this.data;\n    var elementSize = this.elementSize;\n    var faces = result.faces;\n\n    // Reuse verts if possible\n    result.vertices.length = 6;\n    for (var i = 0; i < 6; i++) {\n        if(!result.vertices[i]){\n            result.vertices[i] = new Vec3();\n        }\n    }\n\n    // Reuse faces if possible\n    faces.length = 5;\n    for (var i = 0; i < 5; i++) {\n        if(!faces[i]){\n            faces[i] = [];\n        }\n    }\n\n    var verts = result.vertices;\n\n    var h = (Math.min(\n        data[xi][yi],\n        data[xi+1][yi],\n        data[xi][yi+1],\n        data[xi+1][yi+1]\n    ) - this.minValue ) / 2 + this.minValue;\n\n    if (!getUpperTriangle) {\n\n        // Center of the triangle pillar - all polygons are given relative to this one\n        offsetResult.set(\n            (xi + 0.25) * elementSize, // sort of center of a triangle\n            (yi + 0.25) * elementSize,\n            h // vertical center\n        );\n\n        // Top triangle verts\n        verts[0].set(\n            -0.25 * elementSize,\n            -0.25 * elementSize,\n            data[xi][yi] - h\n        );\n        verts[1].set(\n            0.75 * elementSize,\n            -0.25 * elementSize,\n            data[xi + 1][yi] - h\n        );\n        verts[2].set(\n            -0.25 * elementSize,\n            0.75 * elementSize,\n            data[xi][yi + 1] - h\n        );\n\n        // bottom triangle verts\n        verts[3].set(\n            -0.25 * elementSize,\n            -0.25 * elementSize,\n            -h-1\n        );\n        verts[4].set(\n            0.75 * elementSize,\n            -0.25 * elementSize,\n            -h-1\n        );\n        verts[5].set(\n            -0.25 * elementSize,\n            0.75  * elementSize,\n            -h-1\n        );\n\n        // top triangle\n        faces[0][0] = 0;\n        faces[0][1] = 1;\n        faces[0][2] = 2;\n\n        // bottom triangle\n        faces[1][0] = 5;\n        faces[1][1] = 4;\n        faces[1][2] = 3;\n\n        // -x facing quad\n        faces[2][0] = 0;\n        faces[2][1] = 2;\n        faces[2][2] = 5;\n        faces[2][3] = 3;\n\n        // -y facing quad\n        faces[3][0] = 1;\n        faces[3][1] = 0;\n        faces[3][2] = 3;\n        faces[3][3] = 4;\n\n        // +xy facing quad\n        faces[4][0] = 4;\n        faces[4][1] = 5;\n        faces[4][2] = 2;\n        faces[4][3] = 1;\n\n\n    } else {\n\n        // Center of the triangle pillar - all polygons are given relative to this one\n        offsetResult.set(\n            (xi + 0.75) * elementSize, // sort of center of a triangle\n            (yi + 0.75) * elementSize,\n            h // vertical center\n        );\n\n        // Top triangle verts\n        verts[0].set(\n            0.25 * elementSize,\n            0.25 * elementSize,\n            data[xi + 1][yi + 1] - h\n        );\n        verts[1].set(\n            -0.75 * elementSize,\n            0.25 * elementSize,\n            data[xi][yi + 1] - h\n        );\n        verts[2].set(\n            0.25 * elementSize,\n            -0.75 * elementSize,\n            data[xi + 1][yi] - h\n        );\n\n        // bottom triangle verts\n        verts[3].set(\n            0.25 * elementSize,\n            0.25 * elementSize,\n            - h-1\n        );\n        verts[4].set(\n            -0.75 * elementSize,\n            0.25 * elementSize,\n            - h-1\n        );\n        verts[5].set(\n            0.25 * elementSize,\n            -0.75 * elementSize,\n            - h-1\n        );\n\n        // Top triangle\n        faces[0][0] = 0;\n        faces[0][1] = 1;\n        faces[0][2] = 2;\n\n        // bottom triangle\n        faces[1][0] = 5;\n        faces[1][1] = 4;\n        faces[1][2] = 3;\n\n        // +x facing quad\n        faces[2][0] = 2;\n        faces[2][1] = 5;\n        faces[2][2] = 3;\n        faces[2][3] = 0;\n\n        // +y facing quad\n        faces[3][0] = 3;\n        faces[3][1] = 4;\n        faces[3][2] = 1;\n        faces[3][3] = 0;\n\n        // -xy facing quad\n        faces[4][0] = 1;\n        faces[4][1] = 4;\n        faces[4][2] = 5;\n        faces[4][3] = 2;\n    }\n\n    result.computeNormals();\n    result.computeEdges();\n    result.updateBoundingSphereRadius();\n\n    this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\n};\n\nHeightfield.prototype.calculateLocalInertia = function(mass, target){\n    target = target || new Vec3();\n    target.set(0, 0, 0);\n    return target;\n};\n\nHeightfield.prototype.volume = function(){\n    return Number.MAX_VALUE; // The terrain is infinite\n};\n\nHeightfield.prototype.calculateWorldAABB = function(pos, quat, min, max){\n    // TODO: do it properly\n    min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n    max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n};\n\nHeightfield.prototype.updateBoundingSphereRadius = function(){\n    // Use the bounding box of the min/max values\n    var data = this.data,\n        s = this.elementSize;\n    this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm();\n};\n\n/**\n * Sets the height values from an image. Currently only supported in browser.\n * @method setHeightsFromImage\n * @param {Image} image\n * @param {Vec3} scale\n */\nHeightfield.prototype.setHeightsFromImage = function(image, scale){\n    var canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n    var context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0);\n    var imageData = context.getImageData(0, 0, image.width, image.height);\n\n    var matrix = this.data;\n    matrix.length = 0;\n    this.elementSize = Math.abs(scale.x) / imageData.width;\n    for(var i=0; i<imageData.height; i++){\n        var row = [];\n        for(var j=0; j<imageData.width; j++){\n            var a = imageData.data[(i*imageData.height + j) * 4];\n            var b = imageData.data[(i*imageData.height + j) * 4 + 1];\n            var c = imageData.data[(i*imageData.height + j) * 4 + 2];\n            var height = (a + b + c) / 4 / 255 * scale.z;\n            if(scale.x < 0){\n                row.push(height);\n            } else {\n                row.unshift(height);\n            }\n        }\n        if(scale.y < 0){\n            matrix.unshift(row);\n        } else {\n            matrix.push(row);\n        }\n    }\n    this.updateMaxValue();\n    this.updateMinValue();\n    this.update();\n};","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","/* global CANNON */\n\n/**\n * Kinematic body.\n *\n * Managed dynamic body, which moves but is not affected (directly) by the\n * physics engine. This is not a true kinematic body, in the sense that we are\n * letting the physics engine _compute_ collisions against it and selectively\n * applying those collisions to the object. The physics engine does not decide\n * the position/velocity/rotation of the element.\n *\n * Used for the camera object, because full physics simulation would create\n * movement that feels unnatural to the player. Bipedal movement does not\n * translate nicely to rigid body physics.\n *\n * See: http://www.learn-cocos2d.com/2013/08/physics-engine-platformer-terrible-idea/\n * And: http://oxleygamedev.blogspot.com/2011/04/player-physics-part-2.html\n */\nconst EPS = 0.000001;\n\nmodule.exports = AFRAME.registerComponent('kinematic-body', {\n  dependencies: ['velocity'],\n\n  /*******************************************************************\n   * Schema\n   */\n\n  schema: {\n    mass:           { default: 5 },\n    radius:         { default: 1.3 },\n    userHeight:     { default: 1.6 },\n    linearDamping:  { default: 0.05 },\n    enableSlopes:   { default: true }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n    this.system.addComponent(this);\n\n    const el = this.el,\n        data = this.data,\n        position = (new CANNON.Vec3()).copy(el.getAttribute('position'));\n\n    this.body = new CANNON.Body({\n      material: this.system.getMaterial('staticMaterial'),\n      position: position,\n      mass: data.mass,\n      linearDamping: data.linearDamping,\n      fixedRotation: true\n    });\n    this.body.addShape(\n      new CANNON.Sphere(data.radius),\n      new CANNON.Vec3(0, data.radius - data.height, 0)\n    );\n\n    this.body.el = this.el;\n    this.el.body = this.body;\n    this.system.addBody(this.body);\n\n    if (el.hasAttribute('wasd-controls')) {\n      console.warn('[kinematic-body] Not compatible with wasd-controls, use movement-controls.');\n    }\n  },\n\n  remove: function () {\n    this.system.removeBody(this.body);\n    this.system.removeComponent(this);\n    delete this.el.body;\n  },\n\n  /*******************************************************************\n   * Update\n   */\n\n  /**\n   * Checks CANNON.World for collisions and attempts to apply them to the\n   * element automatically, in a player-friendly way.\n   *\n   * There's extra logic for horizontal surfaces here. The basic requirements:\n   * (1) Only apply gravity when not in contact with _any_ horizontal surface.\n   * (2) When moving, project the velocity against exactly one ground surface.\n   *     If in contact with two ground surfaces (e.g. ground + ramp), choose\n   *     the one that collides with current velocity, if any.\n   */\n  beforeStep: function (t, dt) {\n    if (!dt) return;\n\n    const el = this.el;\n    const body = this.body;\n\n    body.velocity.copy(el.getAttribute('velocity'));\n    body.position.copy(el.getAttribute('position'));\n    body.position.y += this.data.userHeight;\n  },\n\n  step: (function () {\n    var velocity = new THREE.Vector3(),\n        normalizedVelocity = new THREE.Vector3(),\n        currentSurfaceNormal = new THREE.Vector3(),\n        groundNormal = new THREE.Vector3();\n\n    return function (t, dt) {\n      if (!dt) return;\n\n      let body = this.body,\n          data = this.data,\n          didCollide = false,\n          height, groundHeight = -Infinity,\n          groundBody,\n          contacts = this.system.getContacts();\n\n      dt = Math.min(dt, this.system.data.maxInterval * 1000);\n\n      groundNormal.set(0, 0, 0);\n      velocity.copy(this.el.getAttribute('velocity'));\n      body.velocity.copy(velocity);\n\n      for (var i = 0, contact; contact = contacts[i]; i++) {\n        // 1. Find any collisions involving this element. Get the contact\n        // normal, and make sure it's oriented _out_ of the other object and\n        // enabled (body.collisionReponse is true for both bodies)\n        if (!contact.enabled) { continue; }\n        if (body.id === contact.bi.id) {\n          contact.ni.negate(currentSurfaceNormal);\n        } else if (body.id === contact.bj.id) {\n          currentSurfaceNormal.copy(contact.ni);\n        } else {\n          continue;\n        }\n\n        didCollide = body.velocity.dot(currentSurfaceNormal) < -EPS;\n        if (didCollide && currentSurfaceNormal.y <= 0.5) {\n          // 2. If current trajectory attempts to move _through_ another\n          // object, project the velocity against the collision plane to\n          // prevent passing through.\n          velocity = velocity.projectOnPlane(currentSurfaceNormal);\n        } else if (currentSurfaceNormal.y > 0.5) {\n          // 3. If in contact with something roughly horizontal (+/- 45º) then\n          // consider that the current ground. Only the highest qualifying\n          // ground is retained.\n          height = body.id === contact.bi.id\n            ? Math.abs(contact.rj.y + contact.bj.position.y)\n            : Math.abs(contact.ri.y + contact.bi.position.y);\n          if (height > groundHeight) {\n            groundHeight = height;\n            groundNormal.copy(currentSurfaceNormal);\n            groundBody = body.id === contact.bi.id ? contact.bj : contact.bi;\n          }\n        }\n      }\n\n      normalizedVelocity.copy(velocity).normalize();\n      if (groundBody && normalizedVelocity.y < 0.5) {\n        if (!data.enableSlopes) {\n          groundNormal.set(0, 1, 0);\n        } else if (groundNormal.y < 1 - EPS) {\n          groundNormal.copy(this.raycastToGround(groundBody, groundNormal));\n        }\n\n        // 4. Project trajectory onto the top-most ground object, unless\n        // trajectory is > 45º.\n        velocity = velocity.projectOnPlane(groundNormal);\n      } else if (this.system.driver.world) {\n        // 5. If not in contact with anything horizontal, apply world gravity.\n        // TODO - Why is the 4x scalar necessary.\n        // NOTE: Does not work if physics runs on a worker.\n        velocity.add(this.system.driver.world.gravity.scale(dt * 4.0 / 1000));\n      }\n\n      // 6. If the ground surface has a velocity, apply it directly to current\n      // position, not velocity, to preserve relative velocity.\n      if (groundBody && groundBody.el && groundBody.el.components.velocity) {\n        const groundVelocity = groundBody.el.getAttribute('velocity');\n        body.position.copy({\n          x: body.position.x + groundVelocity.x * dt / 1000,\n          y: body.position.y + groundVelocity.y * dt / 1000,\n          z: body.position.z + groundVelocity.z * dt / 1000\n        });\n      }\n\n      body.velocity.copy(velocity);\n\n      body.position.y -= data.userHeight;\n      this.el.setAttribute('velocity', body.velocity);\n      this.el.setAttribute('position', body.position);\n    };\n  }()),\n\n  /**\n   * When walking on complex surfaces (trimeshes, borders between two shapes),\n   * the collision normals returned for the player sphere can be very\n   * inconsistent. To address this, raycast straight down, find the collision\n   * normal, and return whichever normal is more vertical.\n   * @param  {CANNON.Body} groundBody\n   * @param  {CANNON.Vec3} groundNormal\n   * @return {CANNON.Vec3}\n   */\n  raycastToGround: function (groundBody, groundNormal) {\n    let ray,\n        hitNormal,\n        vFrom = this.body.position,\n        vTo = this.body.position.clone();\n\n    vTo.y -= this.data.height;\n    ray = new CANNON.Ray(vFrom, vTo);\n    ray._updateDirection(); // TODO - Report bug.\n    ray.intersectBody(groundBody);\n\n    if (!ray.hasHit) return groundNormal;\n\n    // Compare ABS, in case we're projecting against the inside of the face.\n    hitNormal = ray.result.hitNormalWorld;\n    return Math.abs(hitNormal.y) > Math.abs(groundNormal.y) ? hitNormal : groundNormal;\n  }\n});\n","/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or to be any version in Binary format.\n *\n * Supports:\n *  Mesh Generation (Positional Data)\n *  Normal Data (Per Vertex Drawing Instance)\n *  UV Data (Per Vertex Drawing Instance)\n *  Skinning\n *  Animation\n *  - Separated Animations based on stacks.\n *  - Skeletal & Non-Skeletal Animations\n *  NURBS (Open, Closed and Periodic forms)\n *\n * Needs Support:\n *  Euler rotation order\n *\n *\n * FBX format references:\n *  https://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n *\n *  Binary format specification:\n *    https://code.blender.org/2013/08/fbx-binary-file-format-specification/\n *    https://wiki.rogiken.org/specifications/file-format/fbx/ (more detail but Japanese)\n */\n\n// Monkeypatch for <r89\nTHREE.LoaderUtils = {\n  extractUrlBase: THREE.Loader.prototype.extractUrlBase,\n  decodeText: function (array) {\n    return new TextDecoder().decode(array);\n  }\n};\n\n( function () {\n\n  module.exports = THREE.FBXLoader = function ( manager ) {\n\n    this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n  };\n\n  Object.assign( THREE.FBXLoader.prototype, {\n\n    load: function ( url, onLoad, onProgress, onError ) {\n\n      var self = this;\n\n      var resourceDirectory = THREE.LoaderUtils.extractUrlBase( url );\n\n      var loader = new THREE.FileLoader( this.manager );\n      loader.setResponseType( 'arraybuffer' );\n      loader.load( url, function ( buffer ) {\n\n        try {\n\n          var scene = self.parse( buffer, resourceDirectory );\n          onLoad( scene );\n\n        } catch ( error ) {\n\n          window.setTimeout( function () {\n\n            if ( onError ) onError( error );\n\n            self.manager.itemError( url );\n\n          }, 0 );\n\n        }\n\n      }, onProgress, onError );\n\n    },\n\n    parse: function ( FBXBuffer, resourceDirectory ) {\n\n      var FBXTree;\n\n      if ( isFbxFormatBinary( FBXBuffer ) ) {\n\n        FBXTree = new BinaryParser().parse( FBXBuffer );\n\n      } else {\n\n        var FBXText = convertArrayBufferToString( FBXBuffer );\n\n        if ( ! isFbxFormatASCII( FBXText ) ) {\n\n          throw new Error( 'THREE.FBXLoader: Unknown format.' );\n\n        }\n\n        if ( getFbxVersion( FBXText ) < 7000 ) {\n\n          throw new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n        }\n\n        FBXTree = new TextParser().parse( FBXText );\n\n      }\n\n      // console.log( FBXTree );\n\n      var connections = parseConnections( FBXTree );\n      var images = parseImages( FBXTree );\n      var textures = parseTextures( FBXTree, new THREE.TextureLoader( this.manager ).setPath( resourceDirectory ), images, connections );\n      var materials = parseMaterials( FBXTree, textures, connections );\n      var skeletons = parseDeformers( FBXTree, connections );\n      var geometryMap = parseGeometries( FBXTree, connections, skeletons );\n      var sceneGraph = parseScene( FBXTree, connections, skeletons, geometryMap, materials );\n\n      return sceneGraph;\n\n    }\n\n  } );\n\n  // Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n  // and details the connection type\n  function parseConnections( FBXTree ) {\n\n    var connectionMap = new Map();\n\n    if ( 'Connections' in FBXTree ) {\n\n      var rawConnections = FBXTree.Connections.connections;\n\n      rawConnections.forEach( function ( rawConnection ) {\n\n        var fromID = rawConnection[ 0 ];\n        var toID = rawConnection[ 1 ];\n        var relationship = rawConnection[ 2 ];\n\n        if ( ! connectionMap.has( fromID ) ) {\n\n          connectionMap.set( fromID, {\n            parents: [],\n            children: []\n          } );\n\n        }\n\n        var parentRelationship = { ID: toID, relationship: relationship };\n        connectionMap.get( fromID ).parents.push( parentRelationship );\n\n        if ( ! connectionMap.has( toID ) ) {\n\n          connectionMap.set( toID, {\n            parents: [],\n            children: []\n          } );\n\n        }\n\n        var childRelationship = { ID: fromID, relationship: relationship };\n        connectionMap.get( toID ).children.push( childRelationship );\n\n      } );\n\n    }\n\n    return connectionMap;\n\n  }\n\n  // Parse FBXTree.Objects.Video for embedded image data\n  // These images are connected to textures in FBXTree.Objects.Textures\n  // via FBXTree.Connections.\n  function parseImages( FBXTree ) {\n\n    var images = {};\n    var blobs = {};\n\n    if ( 'Video' in FBXTree.Objects ) {\n\n      var videoNodes = FBXTree.Objects.Video;\n\n      for ( var nodeID in videoNodes ) {\n\n        var videoNode = videoNodes[ nodeID ];\n\n        var id = parseInt( nodeID );\n\n        images[ id ] = videoNode.Filename;\n\n        // raw image data is in videoNode.Content\n        if ( 'Content' in videoNode ) {\n\n          var arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n          var base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n          if ( arrayBufferContent || base64Content ) {\n\n            var image = parseImage( videoNodes[ nodeID ] );\n\n            blobs[ videoNode.Filename ] = image;\n\n          }\n\n        }\n\n      }\n\n    }\n\n    for ( var id in images ) {\n\n      var filename = images[ id ];\n\n      if ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n      else images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n    }\n\n    return images;\n\n  }\n\n  // Parse embedded image data in FBXTree.Video.Content\n  function parseImage( videoNode ) {\n\n    var content = videoNode.Content;\n    var fileName = videoNode.RelativeFilename || videoNode.Filename;\n    var extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n    var type;\n\n    switch ( extension ) {\n\n      case 'bmp':\n\n        type = 'image/bmp';\n        break;\n\n      case 'jpg':\n      case 'jpeg':\n\n        type = 'image/jpeg';\n        break;\n\n      case 'png':\n\n        type = 'image/png';\n        break;\n\n      case 'tif':\n\n        type = 'image/tiff';\n        break;\n\n      default:\n\n        console.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n        return;\n\n    }\n\n    if ( typeof content === 'string' ) { // ASCII format\n\n      return 'data:' + type + ';base64,' + content;\n\n    } else { // Binary Format\n\n      var array = new Uint8Array( content );\n      return window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n    }\n\n  }\n\n  // Parse nodes in FBXTree.Objects.Texture\n  // These contain details such as UV scaling, cropping, rotation etc and are connected\n  // to images in FBXTree.Objects.Video\n  function parseTextures( FBXTree, loader, images, connections ) {\n\n    var textureMap = new Map();\n\n    if ( 'Texture' in FBXTree.Objects ) {\n\n      var textureNodes = FBXTree.Objects.Texture;\n      for ( var nodeID in textureNodes ) {\n\n        var texture = parseTexture( textureNodes[ nodeID ], loader, images, connections );\n        textureMap.set( parseInt( nodeID ), texture );\n\n      }\n\n    }\n\n    return textureMap;\n\n  }\n\n  // Parse individual node in FBXTree.Objects.Texture\n  function parseTexture( textureNode, loader, images, connections ) {\n\n    var texture = loadTexture( textureNode, loader, images, connections );\n\n    texture.ID = textureNode.id;\n\n    texture.name = textureNode.attrName;\n\n    var wrapModeU = textureNode.WrapModeU;\n    var wrapModeV = textureNode.WrapModeV;\n\n    var valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n    var valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n    // http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n    // 0: repeat(default), 1: clamp\n\n    texture.wrapS = valueU === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n    texture.wrapT = valueV === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n    if ( 'Scaling' in textureNode ) {\n\n      var values = textureNode.Scaling.value;\n\n      texture.repeat.x = values[ 0 ];\n      texture.repeat.y = values[ 1 ];\n\n    }\n\n    return texture;\n\n  }\n\n  // load a texture specified as a blob or data URI, or via an external URL using THREE.TextureLoader\n  function loadTexture( textureNode, loader, images, connections ) {\n\n    var fileName;\n\n    var currentPath = loader.path;\n\n    var children = connections.get( textureNode.id ).children;\n\n    if ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n      fileName = images[ children[ 0 ].ID ];\n\n      if ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n        loader.setPath( undefined );\n\n      }\n\n    }\n\n    var texture = loader.load( fileName );\n\n    loader.setPath( currentPath );\n\n    return texture;\n\n  }\n\n  // Parse nodes in FBXTree.Objects.Material\n  function parseMaterials( FBXTree, textureMap, connections ) {\n\n    var materialMap = new Map();\n\n    if ( 'Material' in FBXTree.Objects ) {\n\n      var materialNodes = FBXTree.Objects.Material;\n\n      for ( var nodeID in materialNodes ) {\n\n        var material = parseMaterial( FBXTree, materialNodes[ nodeID ], textureMap, connections );\n\n        if ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n      }\n\n    }\n\n    return materialMap;\n\n  }\n\n  // Parse single node in FBXTree.Objects.Material\n  // Materials are connected to texture maps in FBXTree.Objects.Textures\n  // FBX format currently only supports Lambert and Phong shading models\n  function parseMaterial( FBXTree, materialNode, textureMap, connections ) {\n\n    var ID = materialNode.id;\n    var name = materialNode.attrName;\n    var type = materialNode.ShadingModel;\n\n    //Case where FBX wraps shading model in property object.\n    if ( typeof type === 'object' ) {\n\n      type = type.value;\n\n    }\n\n    // Ignore unused materials which don't have any connections.\n    if ( ! connections.has( ID ) ) return null;\n\n    var parameters = parseParameters( FBXTree, materialNode, textureMap, ID, connections );\n\n    var material;\n\n    switch ( type.toLowerCase() ) {\n\n      case 'phong':\n        material = new THREE.MeshPhongMaterial();\n        break;\n      case 'lambert':\n        material = new THREE.MeshLambertMaterial();\n        break;\n      default:\n        console.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n        material = new THREE.MeshPhongMaterial( { color: 0x3300ff } );\n        break;\n\n    }\n\n    material.setValues( parameters );\n    material.name = name;\n\n    return material;\n\n  }\n\n  // Parse FBX material and return parameters suitable for a three.js material\n  // Also parse the texture map and return any textures associated with the material\n  function parseParameters( FBXTree, properties, textureMap, ID, connections ) {\n\n    var parameters = {};\n\n    if ( properties.BumpFactor ) {\n\n      parameters.bumpScale = properties.BumpFactor.value;\n\n    }\n    if ( properties.Diffuse ) {\n\n      parameters.color = new THREE.Color().fromArray( properties.Diffuse.value );\n\n    }\n    if ( properties.DisplacementFactor ) {\n\n      parameters.displacementScale = properties.DisplacementFactor.value;\n\n    }\n    if ( properties.ReflectionFactor ) {\n\n      parameters.reflectivity = properties.ReflectionFactor.value;\n\n    }\n    if ( properties.Specular ) {\n\n      parameters.specular = new THREE.Color().fromArray( properties.Specular.value );\n\n    }\n    if ( properties.Shininess ) {\n\n      parameters.shininess = properties.Shininess.value;\n\n    }\n    if ( properties.Emissive ) {\n\n      parameters.emissive = new THREE.Color().fromArray( properties.Emissive.value );\n\n    }\n    if ( properties.EmissiveFactor ) {\n\n      parameters.emissiveIntensity = parseFloat( properties.EmissiveFactor.value );\n\n    }\n    if ( properties.Opacity ) {\n\n      parameters.opacity = parseFloat( properties.Opacity.value );\n\n    }\n    if ( parameters.opacity < 1.0 ) {\n\n      parameters.transparent = true;\n\n    }\n\n    connections.get( ID ).children.forEach( function ( child ) {\n\n      var type = child.relationship;\n\n      switch ( type ) {\n\n        case 'Bump':\n          parameters.bumpMap = textureMap.get( child.ID );\n          break;\n\n        case 'DiffuseColor':\n          parameters.map = getTexture( FBXTree, textureMap, child.ID, connections );\n          break;\n\n        case 'DisplacementColor':\n          parameters.displacementMap = getTexture( FBXTree, textureMap, child.ID, connections );\n          break;\n\n\n        case 'EmissiveColor':\n          parameters.emissiveMap = getTexture( FBXTree, textureMap, child.ID, connections );\n          break;\n\n        case 'NormalMap':\n          parameters.normalMap = getTexture( FBXTree, textureMap, child.ID, connections );\n          break;\n\n        case 'ReflectionColor':\n          parameters.envMap = getTexture( FBXTree, textureMap, child.ID, connections );\n          parameters.envMap.mapping = THREE.EquirectangularReflectionMapping;\n          break;\n\n        case 'SpecularColor':\n          parameters.specularMap = getTexture( FBXTree, textureMap, child.ID, connections );\n          break;\n\n        case 'TransparentColor':\n          parameters.alphaMap = getTexture( FBXTree, textureMap, child.ID, connections );\n          parameters.transparent = true;\n          break;\n\n        case 'AmbientColor':\n        case 'ShininessExponent': // AKA glossiness map\n        case 'SpecularFactor': // AKA specularLevel\n        case 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n        default:\n          console.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n          break;\n\n      }\n\n    } );\n\n    return parameters;\n\n  }\n\n  // get a texture from the textureMap for use by a material.\n  function getTexture( FBXTree, textureMap, id, connections ) {\n\n    // if the texture is a layered texture, just use the first layer and issue a warning\n    if ( 'LayeredTexture' in FBXTree.Objects && id in FBXTree.Objects.LayeredTexture ) {\n\n      console.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n      id = connections.get( id ).children[ 0 ].ID;\n\n    }\n\n    return textureMap.get( id );\n\n  }\n\n  // Parse nodes in FBXTree.Objects.Deformer\n  // Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n  // Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n  function parseDeformers( FBXTree, connections ) {\n\n    var skeletons = {};\n\n    if ( 'Deformer' in FBXTree.Objects ) {\n\n      var DeformerNodes = FBXTree.Objects.Deformer;\n\n      for ( var nodeID in DeformerNodes ) {\n\n        var deformerNode = DeformerNodes[ nodeID ];\n\n        if ( deformerNode.attrType === 'Skin' ) {\n\n          var relationships = connections.get( parseInt( nodeID ) );\n\n          var skeleton = parseSkeleton( relationships, DeformerNodes );\n          skeleton.ID = nodeID;\n\n          if ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n          skeleton.geometryID = relationships.parents[ 0 ].ID;\n\n          skeletons[ nodeID ] = skeleton;\n\n        }\n\n      }\n\n    }\n\n    return skeletons;\n\n  }\n\n  // Parse single nodes in FBXTree.Objects.Deformer\n  // The top level deformer nodes have type 'Skin' and subDeformer nodes have type 'Cluster'\n  // Each skin node represents a skeleton and each cluster node represents a bone\n  function parseSkeleton( connections, deformerNodes ) {\n\n    var rawBones = [];\n\n    connections.children.forEach( function ( child ) {\n\n      var subDeformerNode = deformerNodes[ child.ID ];\n\n      if ( subDeformerNode.attrType !== 'Cluster' ) return;\n\n      var rawBone = {\n\n        ID: child.ID,\n        indices: [],\n        weights: [],\n        transform: new THREE.Matrix4().fromArray( subDeformerNode.Transform.a ),\n        transformLink: new THREE.Matrix4().fromArray( subDeformerNode.TransformLink.a ),\n        linkMode: subDeformerNode.Mode,\n\n      };\n\n      if ( 'Indexes' in subDeformerNode ) {\n\n        rawBone.indices = subDeformerNode.Indexes.a;\n        rawBone.weights = subDeformerNode.Weights.a;\n\n      }\n\n      rawBones.push( rawBone );\n\n    } );\n\n    return {\n\n      rawBones: rawBones,\n      bones: []\n\n    };\n\n  }\n\n  // Parse nodes in FBXTree.Objects.Geometry\n  function parseGeometries( FBXTree, connections, skeletons ) {\n\n    var geometryMap = new Map();\n\n    if ( 'Geometry' in FBXTree.Objects ) {\n\n      var geometryNodes = FBXTree.Objects.Geometry;\n\n\n\n      for ( var nodeID in geometryNodes ) {\n\n        var relationships = connections.get( parseInt( nodeID ) );\n        var geo = parseGeometry( FBXTree, relationships, geometryNodes[ nodeID ], skeletons );\n\n        geometryMap.set( parseInt( nodeID ), geo );\n\n      }\n\n    }\n\n    return geometryMap;\n\n  }\n\n  // Parse single node in FBXTree.Objects.Geometry\n  function parseGeometry( FBXTree, relationships, geometryNode, skeletons ) {\n\n    switch ( geometryNode.attrType ) {\n\n      case 'Mesh':\n        return parseMeshGeometry( FBXTree, relationships, geometryNode, skeletons );\n        break;\n\n      case 'NurbsCurve':\n        return parseNurbsGeometry( geometryNode );\n        break;\n\n    }\n\n  }\n\n\n  // Parse single node mesh geometry in FBXTree.Objects.Geometry\n  function parseMeshGeometry( FBXTree, relationships, geometryNode, skeletons ) {\n\n    var modelNodes = relationships.parents.map( function ( parent ) {\n\n      return FBXTree.Objects.Model[ parent.ID ];\n\n    } );\n\n    // don't create geometry if it is not associated with any models\n    if ( modelNodes.length === 0 ) return;\n\n    var skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n      if ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n      return skeleton;\n\n    }, null );\n\n    var preTransform = new THREE.Matrix4();\n\n    // TODO: if there is more than one model associated with the geometry, AND the models have\n    // different geometric transforms, then this will cause problems\n    // if ( modelNodes.length > 1 ) { }\n\n    // For now just assume one model and get the preRotations from that\n    var modelNode = modelNodes[ 0 ];\n\n    if ( 'GeometricRotation' in modelNode ) {\n\n      var array = modelNode.GeometricRotation.value.map( THREE.Math.degToRad );\n      array[ 3 ] = 'ZYX';\n\n      preTransform.makeRotationFromEuler( new THREE.Euler().fromArray( array ) );\n\n    }\n\n    if ( 'GeometricTranslation' in modelNode ) {\n\n      preTransform.setPosition( new THREE.Vector3().fromArray( modelNode.GeometricTranslation.value ) );\n\n    }\n\n    return genGeometry( FBXTree, relationships, geometryNode, skeleton, preTransform );\n\n  }\n\n  // Generate a THREE.BufferGeometry from a node in FBXTree.Objects.Geometry\n  function genGeometry( FBXTree, relationships, geometryNode, skeleton, preTransform ) {\n\n    var vertexPositions = geometryNode.Vertices.a;\n    var vertexIndices = geometryNode.PolygonVertexIndex.a;\n\n    // create arrays to hold the final data used to build the buffergeometry\n    var vertexBuffer = [];\n    var normalBuffer = [];\n    var colorsBuffer = [];\n    var uvsBuffer = [];\n    var materialIndexBuffer = [];\n    var vertexWeightsBuffer = [];\n    var weightsIndicesBuffer = [];\n\n    if ( geometryNode.LayerElementColor ) {\n\n      var colorInfo = getColors( geometryNode.LayerElementColor[ 0 ] );\n\n    }\n\n    if ( geometryNode.LayerElementMaterial ) {\n\n      var materialInfo = getMaterials( geometryNode.LayerElementMaterial[ 0 ] );\n\n    }\n\n    if ( geometryNode.LayerElementNormal ) {\n\n      var normalInfo = getNormals( geometryNode.LayerElementNormal[ 0 ] );\n\n    }\n\n    if ( geometryNode.LayerElementUV ) {\n\n      var uvInfo = [];\n      var i = 0;\n      while ( geometryNode.LayerElementUV[ i ] ) {\n\n        uvInfo.push( getUVs( geometryNode.LayerElementUV[ i ] ) );\n        i ++;\n\n      }\n\n    }\n\n    var weightTable = {};\n\n    if ( skeleton !== null ) {\n\n      skeleton.rawBones.forEach( function ( rawBone, i ) {\n\n        // loop over the bone's vertex indices and weights\n        rawBone.indices.forEach( function ( index, j ) {\n\n          if ( weightTable[ index ] === undefined ) weightTable[ index ] = [];\n\n          weightTable[ index ].push( {\n\n            id: i,\n            weight: rawBone.weights[ j ],\n\n          } );\n\n        } );\n\n      } );\n\n    }\n\n    var polygonIndex = 0;\n    var faceLength = 0;\n    var displayedWeightsWarning = false;\n\n    // these will hold data for a single face\n    var vertexPositionIndexes = [];\n    var faceNormals = [];\n    var faceColors = [];\n    var faceUVs = [];\n    var faceWeights = [];\n    var faceWeightIndices = [];\n\n    vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n      var endOfFace = false;\n\n      // Face index and vertex index arrays are combined in a single array\n      // A cube with quad faces looks like this:\n      // PolygonVertexIndex: *24 {\n      //  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n      //  }\n      // Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n      // to find index of last vertex multiply by -1 and subtract 1: -3 * - 1 - 1 = 2\n      if ( vertexIndex < 0 ) {\n\n        vertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n        vertexIndices[ polygonVertexIndex ] = vertexIndex;\n        endOfFace = true;\n\n      }\n\n      var weightIndices = [];\n      var weights = [];\n\n      vertexPositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n      if ( colorInfo ) {\n\n        var data = getData( polygonVertexIndex, polygonIndex, vertexIndex, colorInfo );\n\n        faceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n      }\n\n      if ( skeleton ) {\n\n        if ( weightTable[ vertexIndex ] !== undefined ) {\n\n          weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n            weights.push( wt.weight );\n            weightIndices.push( wt.id );\n\n          } );\n\n\n        }\n\n        if ( weights.length > 4 ) {\n\n          if ( ! displayedWeightsWarning ) {\n\n            console.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n            displayedWeightsWarning = true;\n\n          }\n\n          var wIndex = [ 0, 0, 0, 0 ];\n          var Weight = [ 0, 0, 0, 0 ];\n\n          weights.forEach( function ( weight, weightIndex ) {\n\n            var currentWeight = weight;\n            var currentIndex = weightIndices[ weightIndex ];\n\n            Weight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n              if ( currentWeight > comparedWeight ) {\n\n                comparedWeightArray[ comparedWeightIndex ] = currentWeight;\n                currentWeight = comparedWeight;\n\n                var tmp = wIndex[ comparedWeightIndex ];\n                wIndex[ comparedWeightIndex ] = currentIndex;\n                currentIndex = tmp;\n\n              }\n\n            } );\n\n          } );\n\n          weightIndices = wIndex;\n          weights = Weight;\n\n        }\n\n        // if the weight array is shorter than 4 pad with 0s\n        while ( weights.length < 4 ) {\n\n          weights.push( 0 );\n          weightIndices.push( 0 );\n\n        }\n\n        for ( var i = 0; i < 4; ++ i ) {\n\n          faceWeights.push( weights[ i ] );\n          faceWeightIndices.push( weightIndices[ i ] );\n\n        }\n\n      }\n\n      if ( normalInfo ) {\n\n        var data = getData( polygonVertexIndex, polygonIndex, vertexIndex, normalInfo );\n\n        faceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n      }\n\n      if ( materialInfo && materialInfo.mappingType !== 'AllSame' ) {\n\n        var materialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, materialInfo )[ 0 ];\n\n      }\n\n      if ( uvInfo ) {\n\n        uvInfo.forEach( function ( uv, i ) {\n\n          var data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n          if ( faceUVs[ i ] === undefined ) {\n\n            faceUVs[ i ] = [];\n\n          }\n\n          faceUVs[ i ].push( data[ 0 ] );\n          faceUVs[ i ].push( data[ 1 ] );\n\n        } );\n\n      }\n\n      faceLength ++;\n\n      // we have reached the end of a face - it may have 4 sides though\n      // in which case the data is split to represent two 3 sided faces\n      if ( endOfFace ) {\n\n        for ( var i = 2; i < faceLength; i ++ ) {\n\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ 0 ] ] );\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ 1 ] ] );\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ 2 ] ] );\n\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ ( i - 1 ) * 3 ] ] );\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ i * 3 ] ] );\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ i * 3 + 1 ] ] );\n          vertexBuffer.push( vertexPositions[ vertexPositionIndexes[ i * 3 + 2 ] ] );\n\n          if ( skeleton ) {\n\n            vertexWeightsBuffer.push( faceWeights[ 0 ] );\n            vertexWeightsBuffer.push( faceWeights[ 1 ] );\n            vertexWeightsBuffer.push( faceWeights[ 2 ] );\n            vertexWeightsBuffer.push( faceWeights[ 3 ] );\n\n            vertexWeightsBuffer.push( faceWeights[ ( i - 1 ) * 4 ] );\n            vertexWeightsBuffer.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n            vertexWeightsBuffer.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n            vertexWeightsBuffer.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n            vertexWeightsBuffer.push( faceWeights[ i * 4 ] );\n            vertexWeightsBuffer.push( faceWeights[ i * 4 + 1 ] );\n            vertexWeightsBuffer.push( faceWeights[ i * 4 + 2 ] );\n            vertexWeightsBuffer.push( faceWeights[ i * 4 + 3 ] );\n\n            weightsIndicesBuffer.push( faceWeightIndices[ 0 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ 1 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ 2 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ 3 ] );\n\n            weightsIndicesBuffer.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n            weightsIndicesBuffer.push( faceWeightIndices[ i * 4 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ i * 4 + 1 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ i * 4 + 2 ] );\n            weightsIndicesBuffer.push( faceWeightIndices[ i * 4 + 3 ] );\n\n          }\n\n          if ( colorInfo ) {\n\n            colorsBuffer.push( faceColors[ 0 ] );\n            colorsBuffer.push( faceColors[ 1 ] );\n            colorsBuffer.push( faceColors[ 2 ] );\n\n            colorsBuffer.push( faceColors[ ( i - 1 ) * 3 ] );\n            colorsBuffer.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n            colorsBuffer.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n            colorsBuffer.push( faceColors[ i * 3 ] );\n            colorsBuffer.push( faceColors[ i * 3 + 1 ] );\n            colorsBuffer.push( faceColors[ i * 3 + 2 ] );\n\n          }\n\n          if ( materialInfo && materialInfo.mappingType !== 'AllSame' ) {\n\n            materialIndexBuffer.push( materialIndex );\n            materialIndexBuffer.push( materialIndex );\n            materialIndexBuffer.push( materialIndex );\n\n          }\n\n          if ( normalInfo ) {\n\n            normalBuffer.push( faceNormals[ 0 ] );\n            normalBuffer.push( faceNormals[ 1 ] );\n            normalBuffer.push( faceNormals[ 2 ] );\n\n            normalBuffer.push( faceNormals[ ( i - 1 ) * 3 ] );\n            normalBuffer.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n            normalBuffer.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n            normalBuffer.push( faceNormals[ i * 3 ] );\n            normalBuffer.push( faceNormals[ i * 3 + 1 ] );\n            normalBuffer.push( faceNormals[ i * 3 + 2 ] );\n\n          }\n\n          if ( uvInfo ) {\n\n            uvInfo.forEach( function ( uv, j ) {\n\n              if ( uvsBuffer[ j ] === undefined ) uvsBuffer[ j ] = [];\n\n              uvsBuffer[ j ].push( faceUVs[ j ][ 0 ] );\n              uvsBuffer[ j ].push( faceUVs[ j ][ 1 ] );\n\n              uvsBuffer[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n              uvsBuffer[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n              uvsBuffer[ j ].push( faceUVs[ j ][ i * 2 ] );\n              uvsBuffer[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n            } );\n\n          }\n\n        }\n\n        polygonIndex ++;\n        faceLength = 0;\n\n        // reset arrays for the next face\n        vertexPositionIndexes = [];\n        faceNormals = [];\n        faceColors = [];\n        faceUVs = [];\n        faceWeights = [];\n        faceWeightIndices = [];\n\n      }\n\n    } );\n\n    var geo = new THREE.BufferGeometry();\n    geo.name = geometryNode.name;\n\n    var positionAttribute = new THREE.Float32BufferAttribute( vertexBuffer, 3 );\n\n    preTransform.applyToBufferAttribute( positionAttribute );\n\n    geo.addAttribute( 'position', positionAttribute );\n\n    if ( colorsBuffer.length > 0 ) {\n\n      geo.addAttribute( 'color', new THREE.Float32BufferAttribute( colorsBuffer, 3 ) );\n\n    }\n\n    if ( skeleton ) {\n\n      geo.addAttribute( 'skinIndex', new THREE.Float32BufferAttribute( weightsIndicesBuffer, 4 ) );\n\n      geo.addAttribute( 'skinWeight', new THREE.Float32BufferAttribute( vertexWeightsBuffer, 4 ) );\n\n      // used later to bind the skeleton to the model\n      geo.FBX_Deformer = skeleton;\n\n    }\n\n    if ( normalBuffer.length > 0 ) {\n\n      var normalAttribute = new THREE.Float32BufferAttribute( normalBuffer, 3 );\n\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix( preTransform );\n      normalMatrix.applyToBufferAttribute( normalAttribute );\n\n      geo.addAttribute( 'normal', normalAttribute );\n\n    }\n\n    uvsBuffer.forEach( function ( uvBuffer, i ) {\n\n      // subsequent uv buffers are called 'uv1', 'uv2', ...\n      var name = 'uv' + ( i + 1 ).toString();\n\n      // the first uv buffer is just called 'uv'\n      if ( i === 0 ) {\n\n        name = 'uv';\n\n      }\n\n      geo.addAttribute( name, new THREE.Float32BufferAttribute( uvsBuffer[ i ], 2 ) );\n\n    } );\n\n    if ( materialInfo && materialInfo.mappingType !== 'AllSame' ) {\n\n      // Convert the material indices of each vertex into rendering groups on the geometry.\n      var prevMaterialIndex = materialIndexBuffer[ 0 ];\n      var startIndex = 0;\n\n      materialIndexBuffer.forEach( function ( currentIndex, i ) {\n\n        if ( currentIndex !== prevMaterialIndex ) {\n\n          geo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n          prevMaterialIndex = currentIndex;\n          startIndex = i;\n\n        }\n\n      } );\n\n      // the loop above doesn't add the last group, do that here.\n      if ( geo.groups.length > 0 ) {\n\n        var lastGroup = geo.groups[ geo.groups.length - 1 ];\n        var lastIndex = lastGroup.start + lastGroup.count;\n\n        if ( lastIndex !== materialIndexBuffer.length ) {\n\n          geo.addGroup( lastIndex, materialIndexBuffer.length - lastIndex, prevMaterialIndex );\n\n        }\n\n      }\n\n      // case where there are multiple materials but the whole geometry is only\n      // using one of them\n      if ( geo.groups.length === 0 ) {\n\n        geo.addGroup( 0, materialIndexBuffer.length, materialIndexBuffer[ 0 ] );\n\n      }\n\n    }\n\n    return geo;\n\n  }\n\n\n  // Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n  function getNormals( NormalNode ) {\n\n    var mappingType = NormalNode.MappingInformationType;\n    var referenceType = NormalNode.ReferenceInformationType;\n    var buffer = NormalNode.Normals.a;\n    var indexBuffer = [];\n    if ( referenceType === 'IndexToDirect' ) {\n\n      if ( 'NormalIndex' in NormalNode ) {\n\n        indexBuffer = NormalNode.NormalIndex.a;\n\n      } else if ( 'NormalsIndex' in NormalNode ) {\n\n        indexBuffer = NormalNode.NormalsIndex.a;\n\n      }\n\n    }\n\n    return {\n      dataSize: 3,\n      buffer: buffer,\n      indices: indexBuffer,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n\n  }\n\n  // Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n  function getUVs( UVNode ) {\n\n    var mappingType = UVNode.MappingInformationType;\n    var referenceType = UVNode.ReferenceInformationType;\n    var buffer = UVNode.UV.a;\n    var indexBuffer = [];\n    if ( referenceType === 'IndexToDirect' ) {\n\n      indexBuffer = UVNode.UVIndex.a;\n\n    }\n\n    return {\n      dataSize: 2,\n      buffer: buffer,\n      indices: indexBuffer,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n\n  }\n\n  // Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n  function getColors( ColorNode ) {\n\n    var mappingType = ColorNode.MappingInformationType;\n    var referenceType = ColorNode.ReferenceInformationType;\n    var buffer = ColorNode.Colors.a;\n    var indexBuffer = [];\n    if ( referenceType === 'IndexToDirect' ) {\n\n      indexBuffer = ColorNode.ColorIndex.a;\n\n    }\n\n    return {\n      dataSize: 4,\n      buffer: buffer,\n      indices: indexBuffer,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n\n  }\n\n  // Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n  function getMaterials( MaterialNode ) {\n\n    var mappingType = MaterialNode.MappingInformationType;\n    var referenceType = MaterialNode.ReferenceInformationType;\n\n    if ( mappingType === 'NoMappingInformation' ) {\n\n      return {\n        dataSize: 1,\n        buffer: [ 0 ],\n        indices: [ 0 ],\n        mappingType: 'AllSame',\n        referenceType: referenceType\n      };\n\n    }\n\n    var materialIndexBuffer = MaterialNode.Materials.a;\n\n    // Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n    // we expect.So we create an intermediate buffer that points to the index in the buffer,\n    // for conforming with the other functions we've written for other data.\n    var materialIndices = [];\n\n    for ( var i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n      materialIndices.push( i );\n\n    }\n\n    return {\n      dataSize: 1,\n      buffer: materialIndexBuffer,\n      indices: materialIndices,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n\n  }\n\n  // Functions use the infoObject and given indices to return value array of geometry.\n  // Parameters:\n  // \t- polygonVertexIndex - Index of vertex in draw order (which index of the index buffer refers to this vertex).\n  // \t- polygonIndex - Index of polygon in geometry.\n  // \t- vertexIndex - Index of vertex inside vertex buffer (used because some data refers to old index buffer that we don't use anymore).\n  // \t- infoObject: can be materialInfo, normalInfo, UVInfo or colorInfo\n  // Index type:\n  //\t- Direct: index is same as polygonVertexIndex\n  //\t- IndexToDirect: infoObject has it's own set of indices\n  var dataArray = [];\n\n  var GetData = {\n\n    ByPolygonVertex: {\n\n      Direct: function ( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n        var from = ( polygonVertexIndex * infoObject.dataSize );\n        var to = ( polygonVertexIndex * infoObject.dataSize ) + infoObject.dataSize;\n\n        return slice( dataArray, infoObject.buffer, from, to );\n\n      },\n\n      IndexToDirect: function ( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n        var index = infoObject.indices[ polygonVertexIndex ];\n        var from = ( index * infoObject.dataSize );\n        var to = ( index * infoObject.dataSize ) + infoObject.dataSize;\n\n        return slice( dataArray, infoObject.buffer, from, to );\n\n      }\n\n    },\n\n    ByPolygon: {\n\n      Direct: function ( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n        var from = polygonIndex * infoObject.dataSize;\n        var to = polygonIndex * infoObject.dataSize + infoObject.dataSize;\n\n        return slice( dataArray, infoObject.buffer, from, to );\n\n      },\n\n      IndexToDirect: function ( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n        var index = infoObject.indices[ polygonIndex ];\n        var from = index * infoObject.dataSize;\n        var to = index * infoObject.dataSize + infoObject.dataSize;\n\n        return slice( dataArray, infoObject.buffer, from, to );\n\n      }\n\n    },\n\n    ByVertice: {\n\n      Direct: function ( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n        var from = ( vertexIndex * infoObject.dataSize );\n        var to = ( vertexIndex * infoObject.dataSize ) + infoObject.dataSize;\n\n        return slice( dataArray, infoObject.buffer, from, to );\n\n      }\n\n    },\n\n    AllSame: {\n\n      IndexToDirect: function ( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n        var from = infoObject.indices[ 0 ] * infoObject.dataSize;\n        var to = infoObject.indices[ 0 ] * infoObject.dataSize + infoObject.dataSize;\n\n        return slice( dataArray, infoObject.buffer, from, to );\n\n      }\n\n    }\n\n  };\n\n  function getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n    return GetData[ infoObject.mappingType ][ infoObject.referenceType ]( polygonVertexIndex, polygonIndex, vertexIndex, infoObject );\n\n  }\n\n  // Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n  function parseNurbsGeometry( geometryNode ) {\n\n    if ( THREE.NURBSCurve === undefined ) {\n\n      console.error( 'THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.' );\n      return new THREE.BufferGeometry();\n\n    }\n\n    var order = parseInt( geometryNode.Order );\n\n    if ( isNaN( order ) ) {\n\n      console.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geometryNode.Order, geometryNode.id );\n      return new THREE.BufferGeometry();\n\n    }\n\n    var degree = order - 1;\n\n    var knots = geometryNode.KnotVector.a;\n    var controlPoints = [];\n    var pointsValues = geometryNode.Points.a;\n\n    for ( var i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n      controlPoints.push( new THREE.Vector4().fromArray( pointsValues, i ) );\n\n    }\n\n    var startKnot, endKnot;\n\n    if ( geometryNode.Form === 'Closed' ) {\n\n      controlPoints.push( controlPoints[ 0 ] );\n\n    } else if ( geometryNode.Form === 'Periodic' ) {\n\n      startKnot = degree;\n      endKnot = knots.length - 1 - startKnot;\n\n      for ( var i = 0; i < degree; ++ i ) {\n\n        controlPoints.push( controlPoints[ i ] );\n\n      }\n\n    }\n\n    var curve = new THREE.NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n    var vertices = curve.getPoints( controlPoints.length * 7 );\n\n    var positions = new Float32Array( vertices.length * 3 );\n\n    vertices.forEach( function ( vertex, i ) {\n\n      vertex.toArray( positions, i * 3 );\n\n    } );\n\n    var geometry = new THREE.BufferGeometry();\n    geometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n\n    return geometry;\n\n  }\n\n  // create the main THREE.Group() to be returned by the loader\n  function parseScene( FBXTree, connections, skeletons, geometryMap, materialMap ) {\n\n    var sceneGraph = new THREE.Group();\n\n    var modelMap = parseModels( FBXTree, skeletons, geometryMap, materialMap, connections );\n\n    var modelNodes = FBXTree.Objects.Model;\n\n    modelMap.forEach( function ( model ) {\n\n      var modelNode = modelNodes[ model.ID ];\n      setLookAtProperties( FBXTree, model, modelNode, connections, sceneGraph );\n\n      var parentConnections = connections.get( model.ID ).parents;\n\n      parentConnections.forEach( function ( connection ) {\n\n        var parent = modelMap.get( connection.ID );\n        if ( parent !== undefined ) parent.add( model );\n\n      } );\n\n      if ( model.parent === null ) {\n\n        sceneGraph.add( model );\n\n      }\n\n\n    } );\n\n    bindSkeleton( FBXTree, skeletons, geometryMap, modelMap, connections );\n\n    addAnimations( FBXTree, connections, sceneGraph );\n\n    createAmbientLight( FBXTree, sceneGraph );\n\n    return sceneGraph;\n\n  }\n\n  // parse nodes in FBXTree.Objects.Model\n  function parseModels( FBXTree, skeletons, geometryMap, materialMap, connections ) {\n\n    var modelMap = new Map();\n    var modelNodes = FBXTree.Objects.Model;\n\n    for ( var nodeID in modelNodes ) {\n\n      var id = parseInt( nodeID );\n      var node = modelNodes[ nodeID ];\n      var relationships = connections.get( id );\n\n      var model = buildSkeleton( relationships, skeletons, id, node.attrName );\n\n      if ( ! model ) {\n\n        switch ( node.attrType ) {\n\n          case 'Camera':\n            model = createCamera( FBXTree, relationships );\n            break;\n          case 'Light':\n            model = createLight( FBXTree, relationships );\n            break;\n          case 'Mesh':\n            model = createMesh( FBXTree, relationships, geometryMap, materialMap );\n            break;\n          case 'NurbsCurve':\n            model = createCurve( relationships, geometryMap );\n            break;\n          case 'LimbNode': // usually associated with a Bone, however if a Bone was not created we'll make a Group instead\n          case 'Null':\n          default:\n            model = new THREE.Group();\n            break;\n\n        }\n\n        model.name = THREE.PropertyBinding.sanitizeNodeName( node.attrName );\n        model.ID = id;\n\n      }\n\n      setModelTransforms( FBXTree, model, node );\n      modelMap.set( id, model );\n\n    }\n\n    return modelMap;\n\n  }\n\n  function buildSkeleton( relationships, skeletons, id, name ) {\n\n    var bone = null;\n\n    relationships.parents.forEach( function ( parent ) {\n\n      for ( var ID in skeletons ) {\n\n        var skeleton = skeletons[ ID ];\n\n        skeleton.rawBones.forEach( function ( rawBone, i ) {\n\n          if ( rawBone.ID === parent.ID ) {\n\n            var subBone = bone;\n            bone = new THREE.Bone();\n            bone.matrixWorld.copy( rawBone.transformLink );\n\n            // set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n            bone.name = THREE.PropertyBinding.sanitizeNodeName( name );\n            bone.ID = id;\n\n            skeleton.bones[ i ] = bone;\n\n            // In cases where a bone is shared between multiple meshes\n            // duplicate the bone here and and it as a child of the first bone\n            if ( subBone !== null ) {\n\n              bone.add( subBone );\n\n            }\n\n          }\n\n        } );\n\n      }\n\n    } );\n\n    return bone;\n\n  }\n\n  // create a THREE.PerspectiveCamera or THREE.OrthographicCamera\n  function createCamera( FBXTree, relationships ) {\n\n    var model;\n    var cameraAttribute;\n\n    relationships.children.forEach( function ( child ) {\n\n      var attr = FBXTree.Objects.NodeAttribute[ child.ID ];\n\n      if ( attr !== undefined ) {\n\n        cameraAttribute = attr;\n\n      }\n\n    } );\n\n    if ( cameraAttribute === undefined ) {\n\n      model = new THREE.Object3D();\n\n    } else {\n\n      var type = 0;\n      if ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n        type = 1;\n\n      }\n\n      var nearClippingPlane = 1;\n      if ( cameraAttribute.NearPlane !== undefined ) {\n\n        nearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n      }\n\n      var farClippingPlane = 1000;\n      if ( cameraAttribute.FarPlane !== undefined ) {\n\n        farClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n      }\n\n\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n\n      if ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n        width = cameraAttribute.AspectWidth.value;\n        height = cameraAttribute.AspectHeight.value;\n\n      }\n\n      var aspect = width / height;\n\n      var fov = 45;\n      if ( cameraAttribute.FieldOfView !== undefined ) {\n\n        fov = cameraAttribute.FieldOfView.value;\n\n      }\n\n      var focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n      switch ( type ) {\n\n        case 0: // Perspective\n          model = new THREE.PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n          if ( focalLength !== null ) model.setFocalLength( focalLength );\n          break;\n\n        case 1: // Orthographic\n          model = new THREE.OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n          break;\n\n        default:\n          console.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n          model = new THREE.Object3D();\n          break;\n\n      }\n\n    }\n\n    return model;\n\n  }\n\n  // Create a THREE.DirectionalLight, THREE.PointLight or THREE.SpotLight\n  function createLight( FBXTree, relationships ) {\n\n    var model;\n    var lightAttribute;\n\n    relationships.children.forEach( function ( child ) {\n\n      var attr = FBXTree.Objects.NodeAttribute[ child.ID ];\n\n      if ( attr !== undefined ) {\n\n        lightAttribute = attr;\n\n      }\n\n    } );\n\n    if ( lightAttribute === undefined ) {\n\n      model = new THREE.Object3D();\n\n    } else {\n\n      var type;\n\n      // LightType can be undefined for Point lights\n      if ( lightAttribute.LightType === undefined ) {\n\n        type = 0;\n\n      } else {\n\n        type = lightAttribute.LightType.value;\n\n      }\n\n      var color = 0xffffff;\n\n      if ( lightAttribute.Color !== undefined ) {\n\n        color = new THREE.Color().fromArray( lightAttribute.Color.value );\n\n      }\n\n      var intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n      // light disabled\n      if ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n        intensity = 0;\n\n      }\n\n      var distance = 0;\n      if ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n        if ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n          distance = 0;\n\n        } else {\n\n          distance = lightAttribute.FarAttenuationEnd.value / 1000;\n\n        }\n\n      }\n\n      // TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n      var decay = 1;\n\n      switch ( type ) {\n\n        case 0: // Point\n          model = new THREE.PointLight( color, intensity, distance, decay );\n          break;\n\n        case 1: // Directional\n          model = new THREE.DirectionalLight( color, intensity );\n          break;\n\n        case 2: // Spot\n          var angle = Math.PI / 3;\n\n          if ( lightAttribute.InnerAngle !== undefined ) {\n\n            angle = THREE.Math.degToRad( lightAttribute.InnerAngle.value );\n\n          }\n\n          var penumbra = 0;\n          if ( lightAttribute.OuterAngle !== undefined ) {\n\n            // TODO: this is not correct - FBX calculates outer and inner angle in degrees\n            // with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n            // while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n            penumbra = THREE.Math.degToRad( lightAttribute.OuterAngle.value );\n            penumbra = Math.max( penumbra, 1 );\n\n          }\n\n          model = new THREE.SpotLight( color, intensity, distance, angle, penumbra, decay );\n          break;\n\n        default:\n          console.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a THREE.PointLight.' );\n          model = new THREE.PointLight( color, intensity );\n          break;\n\n      }\n\n      if ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n        model.castShadow = true;\n\n      }\n\n    }\n\n    return model;\n\n  }\n\n  function createMesh( FBXTree, relationships, geometryMap, materialMap ) {\n\n    var model;\n    var geometry = null;\n    var material = null;\n    var materials = [];\n\n    // get geometry and materials(s) from connections\n    relationships.children.forEach( function ( child ) {\n\n      if ( geometryMap.has( child.ID ) ) {\n\n        geometry = geometryMap.get( child.ID );\n\n      }\n\n      if ( materialMap.has( child.ID ) ) {\n\n        materials.push( materialMap.get( child.ID ) );\n\n      }\n\n    } );\n\n    if ( materials.length > 1 ) {\n\n      material = materials;\n\n    } else if ( materials.length > 0 ) {\n\n      material = materials[ 0 ];\n\n    } else {\n\n      material = new THREE.MeshPhongMaterial( { color: 0xcccccc } );\n      materials.push( material );\n\n    }\n\n    if ( 'color' in geometry.attributes ) {\n\n      materials.forEach( function ( material ) {\n\n        material.vertexColors = THREE.VertexColors;\n\n      } );\n\n    }\n\n    if ( geometry.FBX_Deformer ) {\n\n      materials.forEach( function ( material ) {\n\n        material.skinning = true;\n\n      } );\n\n      model = new THREE.SkinnedMesh( geometry, material );\n\n    } else {\n\n      model = new THREE.Mesh( geometry, material );\n\n    }\n\n    return model;\n\n  }\n\n  function createCurve( relationships, geometryMap ) {\n\n    var geometry = relationships.children.reduce( function ( geo, child ) {\n\n      if ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n      return geo;\n\n    }, null );\n\n    // FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n    var material = new THREE.LineBasicMaterial( { color: 0x3300ff, linewidth: 1 } );\n    return new THREE.Line( geometry, material );\n\n  }\n\n  // Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n  function createAmbientLight( FBXTree, sceneGraph ) {\n\n    if ( 'GlobalSettings' in FBXTree && 'AmbientColor' in FBXTree.GlobalSettings ) {\n\n      var ambientColor = FBXTree.GlobalSettings.AmbientColor.value;\n      var r = ambientColor[ 0 ];\n      var g = ambientColor[ 1 ];\n      var b = ambientColor[ 2 ];\n\n      if ( r !== 0 || g !== 0 || b !== 0 ) {\n\n        var color = new THREE.Color( r, g, b );\n        sceneGraph.add( new THREE.AmbientLight( color, 1 ) );\n\n      }\n\n    }\n\n  }\n\n  function setLookAtProperties( FBXTree, model, modelNode, connections, sceneGraph ) {\n\n    if ( 'LookAtProperty' in modelNode ) {\n\n      var children = connections.get( model.ID ).children;\n\n      children.forEach( function ( child ) {\n\n        if ( child.relationship === 'LookAtProperty' ) {\n\n          var lookAtTarget = FBXTree.Objects.Model[ child.ID ];\n\n          if ( 'Lcl_Translation' in lookAtTarget ) {\n\n            var pos = lookAtTarget.Lcl_Translation.value;\n\n            // DirectionalLight, SpotLight\n            if ( model.target !== undefined ) {\n\n              model.target.position.fromArray( pos );\n              sceneGraph.add( model.target );\n\n            } else { // Cameras and other Object3Ds\n\n              model.lookAt( new THREE.Vector3().fromArray( pos ) );\n\n            }\n\n          }\n\n        }\n\n      } );\n\n    }\n\n  }\n\n  // parse the model node for transform details and apply them to the model\n  function setModelTransforms( FBXTree, model, modelNode ) {\n\n    // http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n    if ( 'RotationOrder' in modelNode ) {\n\n      var enums = [\n        'XYZ', // default\n        'XZY',\n        'YZX',\n        'ZXY',\n        'YXZ',\n        'ZYX',\n        'SphericXYZ',\n      ];\n\n      var value = parseInt( modelNode.RotationOrder.value, 10 );\n\n      if ( value > 0 && value < 6 ) {\n\n        // model.rotation.order = enums[ value ];\n\n        // Note: Euler order other than XYZ is currently not supported, so just display a warning for now\n        console.warn( 'THREE.FBXLoader: unsupported Euler Order: %s. Currently only XYZ order is supported. Animations and rotations may be incorrect.', enums[ value ] );\n\n      } else if ( value === 6 ) {\n\n        console.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\n      }\n\n    }\n\n    if ( 'Lcl_Translation' in modelNode ) {\n\n      model.position.fromArray( modelNode.Lcl_Translation.value );\n\n    }\n\n    if ( 'Lcl_Rotation' in modelNode ) {\n\n      var rotation = modelNode.Lcl_Rotation.value.map( THREE.Math.degToRad );\n      rotation.push( 'ZYX' );\n      model.rotation.fromArray( rotation );\n\n    }\n\n    if ( 'Lcl_Scaling' in modelNode ) {\n\n      model.scale.fromArray( modelNode.Lcl_Scaling.value );\n\n    }\n\n    if ( 'PreRotation' in modelNode ) {\n\n      var array = modelNode.PreRotation.value.map( THREE.Math.degToRad );\n      array[ 3 ] = 'ZYX';\n\n      var preRotations = new THREE.Euler().fromArray( array );\n\n      preRotations = new THREE.Quaternion().setFromEuler( preRotations );\n      var currentRotation = new THREE.Quaternion().setFromEuler( model.rotation );\n      preRotations.multiply( currentRotation );\n      model.rotation.setFromQuaternion( preRotations, 'ZYX' );\n\n    }\n\n  }\n\n  function bindSkeleton( FBXTree, skeletons, geometryMap, modelMap, connections ) {\n\n    var bindMatrices = parsePoseNodes( FBXTree );\n\n    for ( var ID in skeletons ) {\n\n      var skeleton = skeletons[ ID ];\n\n      var parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n      parents.forEach( function ( parent ) {\n\n        if ( geometryMap.has( parent.ID ) ) {\n\n          var geoID = parent.ID;\n          var geoRelationships = connections.get( geoID );\n\n          geoRelationships.parents.forEach( function ( geoConnParent ) {\n\n            if ( modelMap.has( geoConnParent.ID ) ) {\n\n              var model = modelMap.get( geoConnParent.ID );\n\n              model.bind( new THREE.Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n            }\n\n          } );\n\n        }\n\n      } );\n\n    }\n\n  }\n\n  function parsePoseNodes( FBXTree ) {\n\n    var bindMatrices = {};\n\n    if ( 'Pose' in FBXTree.Objects ) {\n\n      var BindPoseNode = FBXTree.Objects.Pose;\n\n      for ( var nodeID in BindPoseNode ) {\n\n        if ( BindPoseNode[ nodeID ].attrType === 'BindPose' ) {\n\n          var poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n          if ( Array.isArray( poseNodes ) ) {\n\n            poseNodes.forEach( function ( poseNode ) {\n\n              bindMatrices[ poseNode.Node ] = new THREE.Matrix4().fromArray( poseNode.Matrix.a );\n\n            } );\n\n          } else {\n\n            bindMatrices[ poseNodes.Node ] = new THREE.Matrix4().fromArray( poseNodes.Matrix.a );\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return bindMatrices;\n\n  }\n\n  function parseAnimations( FBXTree, connections ) {\n\n    // since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n    // if this is undefined we can safely assume there are no animations\n    if ( FBXTree.Objects.AnimationCurve === undefined ) return undefined;\n\n    var curveNodesMap = parseAnimationCurveNodes( FBXTree );\n\n    parseAnimationCurves( FBXTree, connections, curveNodesMap );\n\n    var layersMap = parseAnimationLayers( FBXTree, connections, curveNodesMap );\n    var rawClips = parseAnimStacks( FBXTree, connections, layersMap );\n\n    return rawClips;\n\n  }\n\n  // parse nodes in FBXTree.Objects.AnimationCurveNode\n  // each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n  // and is referenced by an AnimationLayer\n  function parseAnimationCurveNodes( FBXTree ) {\n\n    var rawCurveNodes = FBXTree.Objects.AnimationCurveNode;\n\n    var curveNodesMap = new Map();\n\n    for ( var nodeID in rawCurveNodes ) {\n\n      var rawCurveNode = rawCurveNodes[ nodeID ];\n\n      if ( rawCurveNode.attrName.match( /S|R|T/ ) !== null ) {\n\n        var curveNode = {\n\n          id: rawCurveNode.id,\n          attr: rawCurveNode.attrName,\n          curves: {},\n\n        };\n\n        curveNodesMap.set( curveNode.id, curveNode );\n\n      }\n\n    }\n\n    return curveNodesMap;\n\n  }\n\n  // parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n  // previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n  // axis ( e.g. times and values of x rotation)\n  function parseAnimationCurves( FBXTree, connections, curveNodesMap ) {\n\n    var rawCurves = FBXTree.Objects.AnimationCurve;\n\n    for ( var nodeID in rawCurves ) {\n\n      var animationCurve = {\n\n        id: rawCurves[ nodeID ].id,\n        times: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n        values: rawCurves[ nodeID ].KeyValueFloat.a,\n\n      };\n\n      var relationships = connections.get( animationCurve.id );\n\n      if ( relationships !== undefined ) {\n\n        var animationCurveID = relationships.parents[ 0 ].ID;\n        var animationCurveRelationship = relationships.parents[ 0 ].relationship;\n        var axis = '';\n\n        if ( animationCurveRelationship.match( /X/ ) ) {\n\n          axis = 'x';\n\n        } else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n          axis = 'y';\n\n        } else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n          axis = 'z';\n\n        } else {\n\n          continue;\n\n        }\n\n        curveNodesMap.get( animationCurveID ).curves[ axis ] = animationCurve;\n\n      }\n\n    }\n\n  }\n\n  // parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n  // to various AnimationCurveNodes and is referenced by an AnimationStack node\n  // note: theoretically a stack can multiple layers, however in practice there always seems to be one per stack\n  function parseAnimationLayers( FBXTree, connections, curveNodesMap ) {\n\n    var rawLayers = FBXTree.Objects.AnimationLayer;\n\n    var layersMap = new Map();\n\n    for ( var nodeID in rawLayers ) {\n\n      var layerCurveNodes = [];\n\n      var connection = connections.get( parseInt( nodeID ) );\n\n      if ( connection !== undefined ) {\n\n        // all the animationCurveNodes used in the layer\n        var children = connection.children;\n\n        children.forEach( function ( child, i ) {\n\n          if ( curveNodesMap.has( child.ID ) ) {\n\n            var curveNode = curveNodesMap.get( child.ID );\n\n            // check that the curves are defined for at least one axis, otherwise ignore the curveNode\n            if ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n              if ( layerCurveNodes[ i ] === undefined ) {\n\n                var modelID;\n\n                connections.get( child.ID ).parents.forEach( function ( parent ) {\n\n                  if ( parent.relationship !== undefined ) modelID = parent.ID;\n\n                } );\n\n                var rawModel = FBXTree.Objects.Model[ modelID.toString() ];\n\n                var node = {\n\n                  modelName: THREE.PropertyBinding.sanitizeNodeName( rawModel.attrName ),\n                  initialPosition: [ 0, 0, 0 ],\n                  initialRotation: [ 0, 0, 0 ],\n                  initialScale: [ 1, 1, 1 ],\n\n                };\n\n                if ( 'Lcl_Translation' in rawModel ) node.initialPosition = rawModel.Lcl_Translation.value;\n\n                if ( 'Lcl_Rotation' in rawModel ) node.initialRotation = rawModel.Lcl_Rotation.value;\n\n                if ( 'Lcl_Scaling' in rawModel ) node.initialScale = rawModel.Lcl_Scaling.value;\n\n                // if the animated model is pre rotated, we'll have to apply the pre rotations to every\n                // animation value as well\n                if ( 'PreRotation' in rawModel ) node.preRotations = rawModel.PreRotation.value;\n\n                layerCurveNodes[ i ] = node;\n\n              }\n\n              layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n            }\n\n\n\n          }\n\n        } );\n\n        layersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n      }\n\n    }\n\n    return layersMap;\n\n  }\n\n  // parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n  // hierarchy. Each Stack node will be used to create a THREE.AnimationClip\n  function parseAnimStacks( FBXTree, connections, layersMap ) {\n\n    var rawStacks = FBXTree.Objects.AnimationStack;\n\n    // connect the stacks (clips) up to the layers\n    var rawClips = {};\n\n    for ( var nodeID in rawStacks ) {\n\n      var children = connections.get( parseInt( nodeID ) ).children;\n\n      if ( children.length > 1 ) {\n\n        // it seems like stacks will always be associated with a single layer. But just in case there are files\n        // where there are multiple layers per stack, we'll display a warning\n        console.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n      }\n\n      var layer = layersMap.get( children[ 0 ].ID );\n\n      rawClips[ nodeID ] = {\n\n        name: rawStacks[ nodeID ].attrName,\n        layer: layer,\n\n      };\n\n    }\n\n    return rawClips;\n\n  }\n\n  // take raw animation data from parseAnimations and connect it up to the loaded models\n  function addAnimations( FBXTree, connections, sceneGraph ) {\n\n    sceneGraph.animations = [];\n\n    var rawClips = parseAnimations( FBXTree, connections );\n\n    if ( rawClips === undefined ) return;\n\n\n    for ( var key in rawClips ) {\n\n      var rawClip = rawClips[ key ];\n\n      var clip = addClip( rawClip );\n\n      sceneGraph.animations.push( clip );\n\n    }\n\n  }\n\n  function addClip( rawClip ) {\n\n    var tracks = [];\n\n    rawClip.layer.forEach( function ( rawTracks ) {\n\n      tracks = tracks.concat( generateTracks( rawTracks ) );\n\n    } );\n\n    return new THREE.AnimationClip( rawClip.name, - 1, tracks );\n\n  }\n\n  function generateTracks( rawTracks ) {\n\n    var tracks = [];\n\n    if ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n      var positionTrack = generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, rawTracks.initialPosition, 'position' );\n      if ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n    }\n\n    if ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n      var rotationTrack = generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, rawTracks.initialRotation, rawTracks.preRotations );\n      if ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n    }\n\n    if ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n      var scaleTrack = generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, rawTracks.initialScale, 'scale' );\n      if ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n    }\n\n    return tracks;\n\n  }\n\n  function generateVectorTrack( modelName, curves, initialValue, type ) {\n\n    var times = getTimesForAllAxes( curves );\n    var values = getKeyframeTrackValues( times, curves, initialValue );\n\n    return new THREE.VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n  }\n\n  function generateRotationTrack( modelName, curves, initialValue, preRotations ) {\n\n    if ( curves.x !== undefined ) curves.x.values = curves.x.values.map( THREE.Math.degToRad );\n    if ( curves.y !== undefined ) curves.y.values = curves.y.values.map( THREE.Math.degToRad );\n    if ( curves.z !== undefined ) curves.z.values = curves.z.values.map( THREE.Math.degToRad );\n\n    var times = getTimesForAllAxes( curves );\n    var values = getKeyframeTrackValues( times, curves, initialValue );\n\n    if ( preRotations !== undefined ) {\n\n      preRotations = preRotations.map( THREE.Math.degToRad );\n      preRotations.push( 'ZYX' );\n\n      preRotations = new THREE.Euler().fromArray( preRotations );\n      preRotations = new THREE.Quaternion().setFromEuler( preRotations );\n\n    }\n\n    var quaternion = new THREE.Quaternion();\n    var euler = new THREE.Euler();\n\n    var quaternionValues = [];\n\n    for ( var i = 0; i < values.length; i += 3 ) {\n\n      euler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], 'ZYX' );\n\n      quaternion.setFromEuler( euler );\n\n      if ( preRotations !== undefined )quaternion.premultiply( preRotations );\n\n      quaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n    }\n\n    return new THREE.QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n  }\n\n  function getKeyframeTrackValues( times, curves, initialValue ) {\n\n    var prevValue = initialValue;\n\n    var values = [];\n\n    var xIndex = - 1;\n    var yIndex = - 1;\n    var zIndex = - 1;\n\n    times.forEach( function ( time ) {\n\n      if ( curves.x ) xIndex = curves.x.times.indexOf( time );\n      if ( curves.y ) yIndex = curves.y.times.indexOf( time );\n      if ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n      // if there is an x value defined for this frame, use that\n      if ( xIndex !== - 1 ) {\n\n        var xValue = curves.x.values[ xIndex ];\n        values.push( xValue );\n        prevValue[ 0 ] = xValue;\n\n      } else {\n\n        // otherwise use the x value from the previous frame\n        values.push( prevValue[ 0 ] );\n\n      }\n\n      if ( yIndex !== - 1 ) {\n\n        var yValue = curves.y.values[ yIndex ];\n        values.push( yValue );\n        prevValue[ 1 ] = yValue;\n\n      } else {\n\n        values.push( prevValue[ 1 ] );\n\n      }\n\n      if ( zIndex !== - 1 ) {\n\n        var zValue = curves.z.values[ zIndex ];\n        values.push( zValue );\n        prevValue[ 2 ] = zValue;\n\n      } else {\n\n        values.push( prevValue[ 2 ] );\n\n      }\n\n    } );\n\n    return values;\n\n  }\n\n  // For all animated objects, times are defined separately for each axis\n  // Here we'll combine the times into one sorted array without duplicates\n  function getTimesForAllAxes( curves ) {\n\n    var times = [];\n\n    // first join together the times for each axis, if defined\n    if ( curves.x !== undefined ) times = times.concat( curves.x.times );\n    if ( curves.y !== undefined ) times = times.concat( curves.y.times );\n    if ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n    // then sort them and remove duplicates\n    times = times.sort( function ( a, b ) {\n\n      return a - b;\n\n    } ).filter( function ( elem, index, array ) {\n\n      return array.indexOf( elem ) == index;\n\n    } );\n\n    return times;\n\n  }\n\n  // parse an FBX file in ASCII format\n  function TextParser() {}\n\n  Object.assign( TextParser.prototype, {\n\n    getPrevNode: function () {\n\n      return this.nodeStack[ this.currentIndent - 2 ];\n\n    },\n\n    getCurrentNode: function () {\n\n      return this.nodeStack[ this.currentIndent - 1 ];\n\n    },\n\n    getCurrentProp: function () {\n\n      return this.currentProp;\n\n    },\n\n    pushStack: function ( node ) {\n\n      this.nodeStack.push( node );\n      this.currentIndent += 1;\n\n    },\n\n    popStack: function () {\n\n      this.nodeStack.pop();\n      this.currentIndent -= 1;\n\n    },\n\n    setCurrentProp: function ( val, name ) {\n\n      this.currentProp = val;\n      this.currentPropName = name;\n\n    },\n\n    parse: function ( text ) {\n\n      this.currentIndent = 0;\n      this.allNodes = new FBXTree();\n      this.nodeStack = [];\n      this.currentProp = [];\n      this.currentPropName = '';\n\n      var self = this;\n\n      var split = text.split( '\\n' );\n\n      split.forEach( function ( line, i ) {\n\n        var matchComment = line.match( /^[\\s\\t]*;/ );\n        var matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n        if ( matchComment || matchEmpty ) return;\n\n        var matchBeginning = line.match( '^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '' );\n        var matchProperty = line.match( '^\\\\t{' + ( self.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n        var matchEnd = line.match( '^\\\\t{' + ( self.currentIndent - 1 ) + '}}' );\n\n        if ( matchBeginning ) {\n\n          self.parseNodeBegin( line, matchBeginning );\n\n        } else if ( matchProperty ) {\n\n          self.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n        } else if ( matchEnd ) {\n\n          self.popStack();\n\n        } else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n          // large arrays are split over multiple lines terminated with a ',' character\n          // if this is encountered the line needs to be joined to the previous line\n          self.parseNodePropertyContinued( line );\n\n        }\n\n      } );\n\n      return this.allNodes;\n\n    },\n\n    parseNodeBegin: function ( line, property ) {\n\n      var nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n      var nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n        return attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n      } );\n\n      var node = { name: nodeName };\n      var attrs = this.parseNodeAttr( nodeAttrs );\n\n      var currentNode = this.getCurrentNode();\n\n      // a top node\n      if ( this.currentIndent === 0 ) {\n\n        this.allNodes.add( nodeName, node );\n\n      } else { // a subnode\n\n        // if the subnode already exists, append it\n        if ( nodeName in currentNode ) {\n\n        // special case Pose needs PoseNodes as an array\n          if ( nodeName === 'PoseNode' ) {\n\n            currentNode.PoseNode.push( node );\n\n          } else if ( currentNode[ nodeName ].id !== undefined ) {\n\n            currentNode[ nodeName ] = {};\n            currentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n          }\n\n          if ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n        } else if ( typeof attrs.id === 'number' ) {\n\n          currentNode[ nodeName ] = {};\n          currentNode[ nodeName ][ attrs.id ] = node;\n\n        } else if ( nodeName !== 'Properties70' ) {\n\n          if ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n          else currentNode[ nodeName ] = node;\n\n        }\n\n      }\n\n      if ( typeof attrs.id === 'number' ) node.id = attrs.id;\n      if ( attrs.name !== '' ) node.attrName = attrs.name;\n      if ( attrs.type !== '' ) node.attrType = attrs.type;\n\n      this.pushStack( node );\n\n    },\n\n    parseNodeAttr: function ( attrs ) {\n\n      var id = attrs[ 0 ];\n\n      if ( attrs[ 0 ] !== '' ) {\n\n        id = parseInt( attrs[ 0 ] );\n\n        if ( isNaN( id ) ) {\n\n          id = attrs[ 0 ];\n\n        }\n\n      }\n\n      var name = '', type = '';\n\n      if ( attrs.length > 1 ) {\n\n        name = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n        type = attrs[ 2 ];\n\n      }\n\n      return { id: id, name: name, type: type };\n\n    },\n\n    parseNodeProperty: function ( line, property, contentLine ) {\n\n      var propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n      var propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n      // for special case: base64 image data follows \"Content: ,\" line\n      //\tContent: ,\n      //\t \"/9j/4RDaRXhpZgAATU0A...\"\n      if ( propName === 'Content' && propValue === ',' ) {\n\n        propValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n      }\n\n      var currentNode = this.getCurrentNode();\n      var parentName = currentNode.name;\n\n      if ( parentName === 'Properties70' ) {\n\n        this.parseNodeSpecialProperty( line, propName, propValue );\n        return;\n\n      }\n\n      // Connections\n      if ( propName === 'C' ) {\n\n        var connProps = propValue.split( ',' ).slice( 1 );\n        var from = parseInt( connProps[ 0 ] );\n        var to = parseInt( connProps[ 1 ] );\n\n        var rest = propValue.split( ',' ).slice( 3 );\n\n        rest = rest.map( function ( elem ) {\n\n          return elem.trim().replace( /^\"/, '' );\n\n        } );\n\n        propName = 'connections';\n        propValue = [ from, to ];\n        append( propValue, rest );\n\n        if ( currentNode[ propName ] === undefined ) {\n\n          currentNode[ propName ] = [];\n\n        }\n\n      }\n\n      // Node\n      if ( propName === 'Node' ) currentNode.id = propValue;\n\n      // connections\n      if ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n        currentNode[ propName ].push( propValue );\n\n      } else {\n\n        if ( propName !== 'a' ) currentNode[ propName ] = propValue;\n        else currentNode.a = propValue;\n\n      }\n\n      this.setCurrentProp( currentNode, propName );\n\n      // convert string to array, unless it ends in ',' in which case more will be added to it\n      if ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n        currentNode.a = parseNumberArray( propValue );\n\n      }\n\n    },\n\n    parseNodePropertyContinued: function ( line ) {\n\n      var currentNode = this.getCurrentNode();\n\n      currentNode.a += line;\n\n      // if the line doesn't end in ',' we have reached the end of the property value\n      // so convert the string to an array\n      if ( line.slice( - 1 ) !== ',' ) {\n\n        currentNode.a = parseNumberArray( currentNode.a );\n\n      }\n\n    },\n\n    // parse \"Property70\"\n    parseNodeSpecialProperty: function ( line, propName, propValue ) {\n\n      // split this\n      // P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n      // into array like below\n      // [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n      var props = propValue.split( '\",' ).map( function ( prop ) {\n\n        return prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n      } );\n\n      var innerPropName = props[ 0 ];\n      var innerPropType1 = props[ 1 ];\n      var innerPropType2 = props[ 2 ];\n      var innerPropFlag = props[ 3 ];\n      var innerPropValue = props[ 4 ];\n\n      // cast values where needed, otherwise leave as strings\n      switch ( innerPropType1 ) {\n\n        case 'int':\n        case 'enum':\n        case 'bool':\n        case 'ULongLong':\n        case 'double':\n        case 'Number':\n        case 'FieldOfView':\n          innerPropValue = parseFloat( innerPropValue );\n          break;\n\n        case 'Color':\n        case 'ColorRGB':\n        case 'Vector3D':\n        case 'Lcl_Translation':\n        case 'Lcl_Rotation':\n        case 'Lcl_Scaling':\n          innerPropValue = parseNumberArray( innerPropValue );\n          break;\n\n      }\n\n      // CAUTION: these props must append to parent's parent\n      this.getPrevNode()[ innerPropName ] = {\n\n        'type': innerPropType1,\n        'type2': innerPropType2,\n        'flag': innerPropFlag,\n        'value': innerPropValue\n\n      };\n\n      this.setCurrentProp( this.getPrevNode(), innerPropName );\n\n    },\n\n  } );\n\n  // Parse an FBX file in Binary format\n  function BinaryParser() {}\n\n  Object.assign( BinaryParser.prototype, {\n\n    parse: function ( buffer ) {\n\n      var reader = new BinaryReader( buffer );\n      reader.skip( 23 ); // skip magic 23 bytes\n\n      var version = reader.getUint32();\n\n      console.log( 'THREE.FBXLoader: FBX binary version: ' + version );\n\n      var allNodes = new FBXTree();\n\n      while ( ! this.endOfContent( reader ) ) {\n\n        var node = this.parseNode( reader, version );\n        if ( node !== null ) allNodes.add( node.name, node );\n\n      }\n\n      return allNodes;\n\n    },\n\n    // Check if reader has reached the end of content.\n    endOfContent: function ( reader ) {\n\n      // footer size: 160bytes + 16-byte alignment padding\n      // - 16bytes: magic\n      // - padding til 16-byte alignment (at least 1byte?)\n      //\t(seems like some exporters embed fixed 15 or 16bytes?)\n      // - 4bytes: magic\n      // - 4bytes: version\n      // - 120bytes: zero\n      // - 16bytes: magic\n      if ( reader.size() % 16 === 0 ) {\n\n        return ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n      } else {\n\n        return reader.getOffset() + 160 + 16 >= reader.size();\n\n      }\n\n    },\n\n    // recursively parse nodes until the end of the file is reached\n    parseNode: function ( reader, version ) {\n\n      var node = {};\n\n      // The first three data sizes depends on version.\n      var endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n      var numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n      // note: do not remove this even if you get a linter warning as it moves the buffer forward\n      var propertyListLen = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n      var nameLen = reader.getUint8();\n      var name = reader.getString( nameLen );\n\n      // Regards this node as NULL-record if endOffset is zero\n      if ( endOffset === 0 ) return null;\n\n      var propertyList = [];\n\n      for ( var i = 0; i < numProperties; i ++ ) {\n\n        propertyList.push( this.parseProperty( reader ) );\n\n      }\n\n      // Regards the first three elements in propertyList as id, attrName, and attrType\n      var id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n      var attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n      var attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n      // check if this node represents just a single property\n      // like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n      node.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n      while ( endOffset > reader.getOffset() ) {\n\n        var subNode = this.parseNode( reader, version );\n\n        if ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n      }\n\n      node.propertyList = propertyList; // raw property list used by parent\n\n      if ( typeof id === 'number' ) node.id = id;\n      if ( attrName !== '' ) node.attrName = attrName;\n      if ( attrType !== '' ) node.attrType = attrType;\n      if ( name !== '' ) node.name = name;\n\n      return node;\n\n    },\n\n    parseSubNode: function ( name, node, subNode ) {\n\n      // special case: child node is single property\n      if ( subNode.singleProperty === true ) {\n\n        var value = subNode.propertyList[ 0 ];\n\n        if ( Array.isArray( value ) ) {\n\n          node[ subNode.name ] = subNode;\n\n          subNode.a = value;\n\n        } else {\n\n          node[ subNode.name ] = value;\n\n        }\n\n      } else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n        var array = [];\n\n        subNode.propertyList.forEach( function ( property, i ) {\n\n          // first Connection is FBX type (OO, OP, etc.). We'll discard these\n          if ( i !== 0 ) array.push( property );\n\n        } );\n\n        if ( node.connections === undefined ) {\n\n          node.connections = [];\n\n        }\n\n        node.connections.push( array );\n\n      } else if ( subNode.name === 'Properties70' ) {\n\n        var keys = Object.keys( subNode );\n\n        keys.forEach( function ( key ) {\n\n          node[ key ] = subNode[ key ];\n\n        } );\n\n      } else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n        var innerPropName = subNode.propertyList[ 0 ];\n        var innerPropType1 = subNode.propertyList[ 1 ];\n        var innerPropType2 = subNode.propertyList[ 2 ];\n        var innerPropFlag = subNode.propertyList[ 3 ];\n        var innerPropValue;\n\n        if ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n        if ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n        if ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n          innerPropValue = [\n            subNode.propertyList[ 4 ],\n            subNode.propertyList[ 5 ],\n            subNode.propertyList[ 6 ]\n          ];\n\n        } else {\n\n          innerPropValue = subNode.propertyList[ 4 ];\n\n        }\n\n        // this will be copied to parent, see above\n        node[ innerPropName ] = {\n\n          'type': innerPropType1,\n          'type2': innerPropType2,\n          'flag': innerPropFlag,\n          'value': innerPropValue\n\n        };\n\n      } else if ( node[ subNode.name ] === undefined ) {\n\n        if ( typeof subNode.id === 'number' ) {\n\n          node[ subNode.name ] = {};\n          node[ subNode.name ][ subNode.id ] = subNode;\n\n        } else {\n\n          node[ subNode.name ] = subNode;\n\n        }\n\n      } else {\n\n        if ( subNode.name === 'PoseNode' ) {\n\n          if ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n            node[ subNode.name ] = [ node[ subNode.name ] ];\n\n          }\n\n          node[ subNode.name ].push( subNode );\n\n        } else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n          node[ subNode.name ][ subNode.id ] = subNode;\n\n        }\n\n      }\n\n    },\n\n    parseProperty: function ( reader ) {\n\n      var type = reader.getString( 1 );\n\n      switch ( type ) {\n\n        case 'C':\n          return reader.getBoolean();\n\n        case 'D':\n          return reader.getFloat64();\n\n        case 'F':\n          return reader.getFloat32();\n\n        case 'I':\n          return reader.getInt32();\n\n        case 'L':\n          return reader.getInt64();\n\n        case 'R':\n          var length = reader.getUint32();\n          return reader.getArrayBuffer( length );\n\n        case 'S':\n          var length = reader.getUint32();\n          return reader.getString( length );\n\n        case 'Y':\n          return reader.getInt16();\n\n        case 'b':\n        case 'c':\n        case 'd':\n        case 'f':\n        case 'i':\n        case 'l':\n\n          var arrayLength = reader.getUint32();\n          var encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n          var compressedLength = reader.getUint32();\n\n          if ( encoding === 0 ) {\n\n            switch ( type ) {\n\n              case 'b':\n              case 'c':\n                return reader.getBooleanArray( arrayLength );\n\n              case 'd':\n                return reader.getFloat64Array( arrayLength );\n\n              case 'f':\n                return reader.getFloat32Array( arrayLength );\n\n              case 'i':\n                return reader.getInt32Array( arrayLength );\n\n              case 'l':\n                return reader.getInt64Array( arrayLength );\n\n            }\n\n          }\n\n          if ( window.Zlib === undefined ) {\n\n            console.error( 'THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js' );\n\n          }\n\n          var inflate = new Zlib.Inflate( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) ); // eslint-disable-line no-undef\n          var reader2 = new BinaryReader( inflate.decompress().buffer );\n\n          switch ( type ) {\n\n            case 'b':\n            case 'c':\n              return reader2.getBooleanArray( arrayLength );\n\n            case 'd':\n              return reader2.getFloat64Array( arrayLength );\n\n            case 'f':\n              return reader2.getFloat32Array( arrayLength );\n\n            case 'i':\n              return reader2.getInt32Array( arrayLength );\n\n            case 'l':\n              return reader2.getInt64Array( arrayLength );\n\n          }\n\n        default:\n          throw new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n      }\n\n    }\n\n  } );\n\n\n  function BinaryReader( buffer, littleEndian ) {\n\n    this.dv = new DataView( buffer );\n    this.offset = 0;\n    this.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\n  }\n\n  Object.assign( BinaryReader.prototype, {\n\n    getOffset: function () {\n\n      return this.offset;\n\n    },\n\n    size: function () {\n\n      return this.dv.buffer.byteLength;\n\n    },\n\n    skip: function ( length ) {\n\n      this.offset += length;\n\n    },\n\n    // seems like true/false representation depends on exporter.\n    // true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n    // then sees LSB.\n    getBoolean: function () {\n\n      return ( this.getUint8() & 1 ) === 1;\n\n    },\n\n    getBooleanArray: function ( size ) {\n\n      var a = [];\n\n      for ( var i = 0; i < size; i ++ ) {\n\n        a.push( this.getBoolean() );\n\n      }\n\n      return a;\n\n    },\n\n    getUint8: function () {\n\n      var value = this.dv.getUint8( this.offset );\n      this.offset += 1;\n      return value;\n\n    },\n\n    getInt16: function () {\n\n      var value = this.dv.getInt16( this.offset, this.littleEndian );\n      this.offset += 2;\n      return value;\n\n    },\n\n    getInt32: function () {\n\n      var value = this.dv.getInt32( this.offset, this.littleEndian );\n      this.offset += 4;\n      return value;\n\n    },\n\n    getInt32Array: function ( size ) {\n\n      var a = [];\n\n      for ( var i = 0; i < size; i ++ ) {\n\n        a.push( this.getInt32() );\n\n      }\n\n      return a;\n\n    },\n\n    getUint32: function () {\n\n      var value = this.dv.getUint32( this.offset, this.littleEndian );\n      this.offset += 4;\n      return value;\n\n    },\n\n    // JavaScript doesn't support 64-bit integer so calculate this here\n    // 1 << 32 will return 1 so using multiply operation instead here.\n    // There's a possibility that this method returns wrong value if the value\n    // is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n    // TODO: safely handle 64-bit integer\n    getInt64: function () {\n\n      var low, high;\n\n      if ( this.littleEndian ) {\n\n        low = this.getUint32();\n        high = this.getUint32();\n\n      } else {\n\n        high = this.getUint32();\n        low = this.getUint32();\n\n      }\n\n      // calculate negative value\n      if ( high & 0x80000000 ) {\n\n        high = ~ high & 0xFFFFFFFF;\n        low = ~ low & 0xFFFFFFFF;\n\n        if ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n        low = ( low + 1 ) & 0xFFFFFFFF;\n\n        return - ( high * 0x100000000 + low );\n\n      }\n\n      return high * 0x100000000 + low;\n\n    },\n\n    getInt64Array: function ( size ) {\n\n      var a = [];\n\n      for ( var i = 0; i < size; i ++ ) {\n\n        a.push( this.getInt64() );\n\n      }\n\n      return a;\n\n    },\n\n    // Note: see getInt64() comment\n    getUint64: function () {\n\n      var low, high;\n\n      if ( this.littleEndian ) {\n\n        low = this.getUint32();\n        high = this.getUint32();\n\n      } else {\n\n        high = this.getUint32();\n        low = this.getUint32();\n\n      }\n\n      return high * 0x100000000 + low;\n\n    },\n\n    getFloat32: function () {\n\n      var value = this.dv.getFloat32( this.offset, this.littleEndian );\n      this.offset += 4;\n      return value;\n\n    },\n\n    getFloat32Array: function ( size ) {\n\n      var a = [];\n\n      for ( var i = 0; i < size; i ++ ) {\n\n        a.push( this.getFloat32() );\n\n      }\n\n      return a;\n\n    },\n\n    getFloat64: function () {\n\n      var value = this.dv.getFloat64( this.offset, this.littleEndian );\n      this.offset += 8;\n      return value;\n\n    },\n\n    getFloat64Array: function ( size ) {\n\n      var a = [];\n\n      for ( var i = 0; i < size; i ++ ) {\n\n        a.push( this.getFloat64() );\n\n      }\n\n      return a;\n\n    },\n\n    getArrayBuffer: function ( size ) {\n\n      var value = this.dv.buffer.slice( this.offset, this.offset + size );\n      this.offset += size;\n      return value;\n\n    },\n\n    getString: function ( size ) {\n\n      var a = new Uint8Array( size );\n\n      for ( var i = 0; i < size; i ++ ) {\n\n        a[ i ] = this.getUint8();\n\n      }\n\n      var nullByte = a.indexOf( 0 );\n      if ( nullByte >= 0 ) a = a.slice( 0, nullByte );\n\n      return THREE.LoaderUtils.decodeText( a );\n\n    }\n\n  } );\n\n  // FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n  // and BinaryParser( FBX Binary format)\n  function FBXTree() {}\n\n  Object.assign( FBXTree.prototype, {\n\n    add: function ( key, val ) {\n\n      this[ key ] = val;\n\n    },\n\n  } );\n\n  function isFbxFormatBinary( buffer ) {\n\n    var CORRECT = 'Kaydara FBX Binary  \\0';\n\n    return buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n  }\n\n  function isFbxFormatASCII( text ) {\n\n    var CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n    var cursor = 0;\n\n    function read( offset ) {\n\n      var result = text[ offset - 1 ];\n      text = text.slice( cursor + offset );\n      cursor ++;\n      return result;\n\n    }\n\n    for ( var i = 0; i < CORRECT.length; ++ i ) {\n\n      var num = read( 1 );\n      if ( num === CORRECT[ i ] ) {\n\n        return false;\n\n      }\n\n    }\n\n    return true;\n\n  }\n\n  function getFbxVersion( text ) {\n\n    var versionRegExp = /FBXVersion: (\\d+)/;\n    var match = text.match( versionRegExp );\n    if ( match ) {\n\n      var version = parseInt( match[ 1 ] );\n      return version;\n\n    }\n    throw new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n  }\n\n  // Converts FBX ticks into real time seconds.\n  function convertFBXTimeToSeconds( time ) {\n\n    return time / 46186158000;\n\n  }\n\n\n  // Parses comma separated list of numbers and returns them an array.\n  // Used internally by the TextParser\n  function parseNumberArray( value ) {\n\n    var array = value.split( ',' ).map( function ( val ) {\n\n      return parseFloat( val );\n\n    } );\n\n    return array;\n\n  }\n\n  function convertArrayBufferToString( buffer, from, to ) {\n\n    if ( from === undefined ) from = 0;\n    if ( to === undefined ) to = buffer.byteLength;\n\n    return THREE.LoaderUtils.decodeText( new Uint8Array( buffer, from, to ) );\n\n  }\n\n  function append( a, b ) {\n\n    for ( var i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n      a[ j ] = b[ i ];\n\n    }\n\n  }\n\n  function slice( a, b, from, to ) {\n\n    for ( var i = from, j = 0; i < to; i ++, j ++ ) {\n\n      a[ j ] = b[ i ];\n\n    }\n\n    return a;\n\n  }\n\n} )();\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Implement bounding sphere collision detection for entities with a mesh.\n * Sets the specified state on the intersected entities.\n *\n * @property {string} objects - Selector of the entities to test for collision.\n * @property {string} state - State to set on collided entities.\n *\n */\nmodule.exports = AFRAME.registerComponent('sphere-collider', {\n  schema: {\n    objects: {default: ''},\n    state: {default: 'collided'},\n    radius: {default: 0.05},\n    watch: {default: true}\n  },\n\n  init: function () {\n    /** @type {MutationObserver} */\n    this.observer = null;\n    /** @type {Array<Element>} Elements to watch for collisions. */\n    this.els = [];\n    /** @type {Array<Element>} Elements currently in collision state. */\n    this.collisions = [];\n\n    this.handleHit = this.handleHit.bind(this);\n    this.handleHitEnd = this.handleHitEnd.bind(this);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  play: function () {\n    const sceneEl = this.el.sceneEl;\n\n    if (this.data.watch) {\n      this.observer = new MutationObserver(this.update.bind(this, null));\n      this.observer.observe(sceneEl, {childList: true, subtree: true});\n    }\n  },\n\n  pause: function () {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  },\n\n  /**\n   * Update list of entities to test for collision.\n   */\n  update: function () {\n    const data = this.data;\n    let objectEls;\n\n    // Push entities into list of els to intersect.\n    if (data.objects) {\n      objectEls = this.el.sceneEl.querySelectorAll(data.objects);\n    } else {\n      // If objects not defined, intersect with everything.\n      objectEls = this.el.sceneEl.children;\n    }\n    // Convert from NodeList to Array\n    this.els = Array.prototype.slice.call(objectEls);\n  },\n\n  tick: (function () {\n    const position = new THREE.Vector3(),\n        meshPosition = new THREE.Vector3(),\n        colliderScale = new THREE.Vector3(),\n        distanceMap = new Map();\n    return function () {\n      const el = this.el,\n          data = this.data,\n          mesh = el.getObject3D('mesh'),\n          collisions = [];\n      let colliderRadius;\n\n      if (!mesh) { return; }\n\n      distanceMap.clear();\n      position.copy(el.object3D.getWorldPosition());\n      el.object3D.getWorldScale(colliderScale);\n      colliderRadius = data.radius * scaleFactor(colliderScale);\n      // Update collision list.\n      this.els.forEach(intersect);\n\n      // Emit events and add collision states, in order of distance.\n      collisions\n        .sort((a, b) => distanceMap.get(a) > distanceMap.get(b) ? 1 : -1)\n        .forEach(this.handleHit);\n\n      // Remove collision state from current element.\n      if (collisions.length === 0) { el.emit('hit', {el: null}); }\n\n      // Remove collision state from other elements.\n      this.collisions\n        .filter((el) => !distanceMap.has(el))\n        .forEach(this.handleHitEnd);\n\n      // Store new collisions\n      this.collisions = collisions;\n\n      // Bounding sphere collision detection\n      function intersect (el) {\n        let radius, mesh, distance, box, extent, size;\n\n        if (!el.isEntity) { return; }\n\n        mesh = el.getObject3D('mesh');\n\n        if (!mesh) { return; }\n\n        box = new THREE.Box3().setFromObject(mesh);\n        size = box.getSize();\n        extent = Math.max(size.x, size.y, size.z) / 2;\n        radius = Math.sqrt(2 * extent * extent);\n        box.getCenter(meshPosition);\n\n        if (!radius) { return; }\n\n        distance = position.distanceTo(meshPosition);\n        if (distance < radius + colliderRadius) {\n          collisions.push(el);\n          distanceMap.set(el, distance);\n        }\n      }\n      // use max of scale factors to maintain bounding sphere collision\n      function scaleFactor (scaleVec) {\n        return Math.max.apply(null, scaleVec.toArray());\n      }\n    };\n  })(),\n\n  handleHit: function (targetEl) {\n    targetEl.emit('hit');\n    targetEl.addState(this.data.state);\n    this.el.emit('hit', {el: targetEl});\n  },\n  handleHitEnd: function (targetEl) {\n    targetEl.emit('hitend');\n    targetEl.removeState(this.data.state);\n    this.el.emit('hitend', {el: targetEl});\n  }\n});\n","/**\n * CANNON.shape2mesh\n *\n * Source: http://schteppe.github.io/cannon.js/build/cannon.demo.js\n * Author: @schteppe\n */\nvar CANNON = require('cannon');\n\nCANNON.shape2mesh = function(body){\n    var obj = new THREE.Object3D();\n\n    for (var l = 0; l < body.shapes.length; l++) {\n        var shape = body.shapes[l];\n\n        var mesh;\n\n        switch(shape.type){\n\n        case CANNON.Shape.types.SPHERE:\n            var sphere_geometry = new THREE.SphereGeometry( shape.radius, 8, 8);\n            mesh = new THREE.Mesh( sphere_geometry, this.currentMaterial );\n            break;\n\n        case CANNON.Shape.types.PARTICLE:\n            mesh = new THREE.Mesh( this.particleGeo, this.particleMaterial );\n            var s = this.settings;\n            mesh.scale.set(s.particleSize,s.particleSize,s.particleSize);\n            break;\n\n        case CANNON.Shape.types.PLANE:\n            var geometry = new THREE.PlaneGeometry(10, 10, 4, 4);\n            mesh = new THREE.Object3D();\n            var submesh = new THREE.Object3D();\n            var ground = new THREE.Mesh( geometry, this.currentMaterial );\n            ground.scale.set(100, 100, 100);\n            submesh.add(ground);\n\n            ground.castShadow = true;\n            ground.receiveShadow = true;\n\n            mesh.add(submesh);\n            break;\n\n        case CANNON.Shape.types.BOX:\n            var box_geometry = new THREE.BoxGeometry(  shape.halfExtents.x*2,\n                                                        shape.halfExtents.y*2,\n                                                        shape.halfExtents.z*2 );\n            mesh = new THREE.Mesh( box_geometry, this.currentMaterial );\n            break;\n\n        case CANNON.Shape.types.CONVEXPOLYHEDRON:\n            var geo = new THREE.Geometry();\n\n            // Add vertices\n            for (var i = 0; i < shape.vertices.length; i++) {\n                var v = shape.vertices[i];\n                geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z));\n            }\n\n            for(var i=0; i < shape.faces.length; i++){\n                var face = shape.faces[i];\n\n                // add triangles\n                var a = face[0];\n                for (var j = 1; j < face.length - 1; j++) {\n                    var b = face[j];\n                    var c = face[j + 1];\n                    geo.faces.push(new THREE.Face3(a, b, c));\n                }\n            }\n            geo.computeBoundingSphere();\n            geo.computeFaceNormals();\n            mesh = new THREE.Mesh( geo, this.currentMaterial );\n            break;\n\n        case CANNON.Shape.types.HEIGHTFIELD:\n            var geometry = new THREE.Geometry();\n\n            var v0 = new CANNON.Vec3();\n            var v1 = new CANNON.Vec3();\n            var v2 = new CANNON.Vec3();\n            for (var xi = 0; xi < shape.data.length - 1; xi++) {\n                for (var yi = 0; yi < shape.data[xi].length - 1; yi++) {\n                    for (var k = 0; k < 2; k++) {\n                        shape.getConvexTrianglePillar(xi, yi, k===0);\n                        v0.copy(shape.pillarConvex.vertices[0]);\n                        v1.copy(shape.pillarConvex.vertices[1]);\n                        v2.copy(shape.pillarConvex.vertices[2]);\n                        v0.vadd(shape.pillarOffset, v0);\n                        v1.vadd(shape.pillarOffset, v1);\n                        v2.vadd(shape.pillarOffset, v2);\n                        geometry.vertices.push(\n                            new THREE.Vector3(v0.x, v0.y, v0.z),\n                            new THREE.Vector3(v1.x, v1.y, v1.z),\n                            new THREE.Vector3(v2.x, v2.y, v2.z)\n                        );\n                        var i = geometry.vertices.length - 3;\n                        geometry.faces.push(new THREE.Face3(i, i+1, i+2));\n                    }\n                }\n            }\n            geometry.computeBoundingSphere();\n            geometry.computeFaceNormals();\n            mesh = new THREE.Mesh(geometry, this.currentMaterial);\n            break;\n\n        case CANNON.Shape.types.TRIMESH:\n            var geometry = new THREE.Geometry();\n\n            var v0 = new CANNON.Vec3();\n            var v1 = new CANNON.Vec3();\n            var v2 = new CANNON.Vec3();\n            for (var i = 0; i < shape.indices.length / 3; i++) {\n                shape.getTriangleVertices(i, v0, v1, v2);\n                geometry.vertices.push(\n                    new THREE.Vector3(v0.x, v0.y, v0.z),\n                    new THREE.Vector3(v1.x, v1.y, v1.z),\n                    new THREE.Vector3(v2.x, v2.y, v2.z)\n                );\n                var j = geometry.vertices.length - 3;\n                geometry.faces.push(new THREE.Face3(j, j+1, j+2));\n            }\n            geometry.computeBoundingSphere();\n            geometry.computeFaceNormals();\n            mesh = new THREE.Mesh(geometry, this.currentMaterial);\n            break;\n\n        default:\n            throw \"Visual type not recognized: \"+shape.type;\n        }\n\n        mesh.receiveShadow = true;\n        mesh.castShadow = true;\n        if(mesh.children){\n            for(var i=0; i<mesh.children.length; i++){\n                mesh.children[i].castShadow = true;\n                mesh.children[i].receiveShadow = true;\n                if(mesh.children[i]){\n                    for(var j=0; j<mesh.children[i].length; j++){\n                        mesh.children[i].children[j].castShadow = true;\n                        mesh.children[i].children[j].receiveShadow = true;\n                    }\n                }\n            }\n        }\n\n        var o = body.shapeOffsets[l];\n        var q = body.shapeOrientations[l];\n        mesh.position.set(o.x, o.y, o.z);\n        mesh.quaternion.set(q.x, q.y, q.z, q.w);\n\n        obj.add(mesh);\n    }\n\n    return obj;\n};\n\nmodule.exports = CANNON.shape2mesh;\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = Equation;\n\nvar JacobianElement = require('../math/JacobianElement'),\n    Vec3 = require('../math/Vec3');\n\n/**\n * Equation base class\n * @class Equation\n * @constructor\n * @author schteppe\n * @param {Body} bi\n * @param {Body} bj\n * @param {Number} minForce Minimum (read: negative max) force to be applied by the constraint.\n * @param {Number} maxForce Maximum (read: positive max) force to be applied by the constraint.\n */\nfunction Equation(bi,bj,minForce,maxForce){\n    this.id = Equation.id++;\n\n    /**\n     * @property {number} minForce\n     */\n    this.minForce = typeof(minForce)===\"undefined\" ? -1e6 : minForce;\n\n    /**\n     * @property {number} maxForce\n     */\n    this.maxForce = typeof(maxForce)===\"undefined\" ? 1e6 : maxForce;\n\n    /**\n     * @property bi\n     * @type {Body}\n     */\n    this.bi = bi;\n\n    /**\n     * @property bj\n     * @type {Body}\n     */\n    this.bj = bj;\n\n    /**\n     * SPOOK parameter\n     * @property {number} a\n     */\n    this.a = 0.0;\n\n    /**\n     * SPOOK parameter\n     * @property {number} b\n     */\n    this.b = 0.0;\n\n    /**\n     * SPOOK parameter\n     * @property {number} eps\n     */\n    this.eps = 0.0;\n\n    /**\n     * @property {JacobianElement} jacobianElementA\n     */\n    this.jacobianElementA = new JacobianElement();\n\n    /**\n     * @property {JacobianElement} jacobianElementB\n     */\n    this.jacobianElementB = new JacobianElement();\n\n    /**\n     * @property {boolean} enabled\n     * @default true\n     */\n    this.enabled = true;\n\n    /**\n     * A number, proportional to the force added to the bodies.\n     * @property {number} multiplier\n     * @readonly\n     */\n    this.multiplier = 0;\n\n    // Set typical spook params\n    this.setSpookParams(1e7,4,1/60);\n}\nEquation.prototype.constructor = Equation;\n\nEquation.id = 0;\n\n/**\n * Recalculates a,b,eps.\n * @method setSpookParams\n */\nEquation.prototype.setSpookParams = function(stiffness,relaxation,timeStep){\n    var d = relaxation,\n        k = stiffness,\n        h = timeStep;\n    this.a = 4.0 / (h * (1 + 4 * d));\n    this.b = (4.0 * d) / (1 + 4 * d);\n    this.eps = 4.0 / (h * h * k * (1 + 4 * d));\n};\n\n/**\n * Computes the RHS of the SPOOK equation\n * @method computeB\n * @return {Number}\n */\nEquation.prototype.computeB = function(a,b,h){\n    var GW = this.computeGW(),\n        Gq = this.computeGq(),\n        GiMf = this.computeGiMf();\n    return - Gq * a - GW * b - GiMf*h;\n};\n\n/**\n * Computes G*q, where q are the generalized body coordinates\n * @method computeGq\n * @return {Number}\n */\nEquation.prototype.computeGq = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        xi = bi.position,\n        xj = bj.position;\n    return GA.spatial.dot(xi) + GB.spatial.dot(xj);\n};\n\nvar zero = new Vec3();\n\n/**\n * Computes G*W, where W are the body velocities\n * @method computeGW\n * @return {Number}\n */\nEquation.prototype.computeGW = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        vi = bi.velocity,\n        vj = bj.velocity,\n        wi = bi.angularVelocity,\n        wj = bj.angularVelocity;\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\n};\n\n\n/**\n * Computes G*Wlambda, where W are the body velocities\n * @method computeGWlambda\n * @return {Number}\n */\nEquation.prototype.computeGWlambda = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        vi = bi.vlambda,\n        vj = bj.vlambda,\n        wi = bi.wlambda,\n        wj = bj.wlambda;\n    return GA.multiplyVectors(vi,wi) + GB.multiplyVectors(vj,wj);\n};\n\n/**\n * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\n * @method computeGiMf\n * @return {Number}\n */\nvar iMfi = new Vec3(),\n    iMfj = new Vec3(),\n    invIi_vmult_taui = new Vec3(),\n    invIj_vmult_tauj = new Vec3();\nEquation.prototype.computeGiMf = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        fi = bi.force,\n        ti = bi.torque,\n        fj = bj.force,\n        tj = bj.torque,\n        invMassi = bi.invMassSolve,\n        invMassj = bj.invMassSolve;\n\n    fi.scale(invMassi,iMfi);\n    fj.scale(invMassj,iMfj);\n\n    bi.invInertiaWorldSolve.vmult(ti,invIi_vmult_taui);\n    bj.invInertiaWorldSolve.vmult(tj,invIj_vmult_tauj);\n\n    return GA.multiplyVectors(iMfi,invIi_vmult_taui) + GB.multiplyVectors(iMfj,invIj_vmult_tauj);\n};\n\n/**\n * Computes G*inv(M)*G'\n * @method computeGiMGt\n * @return {Number}\n */\nvar tmp = new Vec3();\nEquation.prototype.computeGiMGt = function(){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        invMassi = bi.invMassSolve,\n        invMassj = bj.invMassSolve,\n        invIi = bi.invInertiaWorldSolve,\n        invIj = bj.invInertiaWorldSolve,\n        result = invMassi + invMassj;\n\n    invIi.vmult(GA.rotational,tmp);\n    result += tmp.dot(GA.rotational);\n\n    invIj.vmult(GB.rotational,tmp);\n    result += tmp.dot(GB.rotational);\n\n    return  result;\n};\n\nvar addToWlambda_temp = new Vec3(),\n    addToWlambda_Gi = new Vec3(),\n    addToWlambda_Gj = new Vec3(),\n    addToWlambda_ri = new Vec3(),\n    addToWlambda_rj = new Vec3(),\n    addToWlambda_Mdiag = new Vec3();\n\n/**\n * Add constraint velocity to the bodies.\n * @method addToWlambda\n * @param {Number} deltalambda\n */\nEquation.prototype.addToWlambda = function(deltalambda){\n    var GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n        bi = this.bi,\n        bj = this.bj,\n        temp = addToWlambda_temp;\n\n    // Add to linear velocity\n    // v_lambda += inv(M) * delta_lamba * G\n    bi.vlambda.addScaledVector(bi.invMassSolve * deltalambda, GA.spatial, bi.vlambda);\n    bj.vlambda.addScaledVector(bj.invMassSolve * deltalambda, GB.spatial, bj.vlambda);\n\n    // Add to angular velocity\n    bi.invInertiaWorldSolve.vmult(GA.rotational,temp);\n    bi.wlambda.addScaledVector(deltalambda, temp, bi.wlambda);\n\n    bj.invInertiaWorldSolve.vmult(GB.rotational,temp);\n    bj.wlambda.addScaledVector(deltalambda, temp, bj.wlambda);\n};\n\n/**\n * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\n * @method computeInvC\n * @param  {Number} eps\n * @return {Number}\n */\nEquation.prototype.computeC = function(){\n    return this.computeGiMGt() + this.eps;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/**\n * Polyfill for the additional KeyboardEvent properties defined in the D3E and\n * D4E draft specifications, by @inexorabletash.\n *\n * See: https://github.com/inexorabletash/polyfill\n */\n(function(global) {\n  var nativeKeyboardEvent = ('KeyboardEvent' in global);\n  if (!nativeKeyboardEvent)\n    global.KeyboardEvent = function KeyboardEvent() { throw TypeError('Illegal constructor'); };\n\n  if (!('DOM_KEY_LOCATION_STANDARD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_STANDARD = 0x00; // Default or unknown location\n  if (!('DOM_KEY_LOCATION_LEFT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_LEFT          = 0x01; // e.g. Left Alt key\n  if (!('DOM_KEY_LOCATION_RIGHT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_RIGHT         = 0x02; // e.g. Right Alt key\n  if (!('DOM_KEY_LOCATION_NUMPAD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD        = 0x03; // e.g. Numpad 0 or +\n\n  var STANDARD = window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,\n      LEFT = window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,\n      RIGHT = window.KeyboardEvent.DOM_KEY_LOCATION_RIGHT,\n      NUMPAD = window.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD;\n\n  //--------------------------------------------------------------------\n  //\n  // Utilities\n  //\n  //--------------------------------------------------------------------\n\n  function contains(s, ss) { return String(s).indexOf(ss) !== -1; }\n\n  var os = (function() {\n    if (contains(navigator.platform, 'Win')) { return 'win'; }\n    if (contains(navigator.platform, 'Mac')) { return 'mac'; }\n    if (contains(navigator.platform, 'CrOS')) { return 'cros'; }\n    if (contains(navigator.platform, 'Linux')) { return 'linux'; }\n    if (contains(navigator.userAgent, 'iPad') || contains(navigator.platform, 'iPod') || contains(navigator.platform, 'iPhone')) { return 'ios'; }\n    return '';\n  } ());\n\n  var browser = (function() {\n    if (contains(navigator.userAgent, 'Chrome/')) { return 'chrome'; }\n    if (contains(navigator.vendor, 'Apple')) { return 'safari'; }\n    if (contains(navigator.userAgent, 'MSIE')) { return 'ie'; }\n    if (contains(navigator.userAgent, 'Gecko/')) { return 'moz'; }\n    if (contains(navigator.userAgent, 'Opera/')) { return 'opera'; }\n    return '';\n  } ());\n\n  var browser_os = browser + '-' + os;\n\n  function mergeIf(baseTable, select, table) {\n    if (browser_os === select || browser === select || os === select) {\n      Object.keys(table).forEach(function(keyCode) {\n        baseTable[keyCode] = table[keyCode];\n      });\n    }\n  }\n\n  function remap(o, key) {\n    var r = {};\n    Object.keys(o).forEach(function(k) {\n      var item = o[k];\n      if (key in item) {\n        r[item[key]] = item;\n      }\n    });\n    return r;\n  }\n\n  function invert(o) {\n    var r = {};\n    Object.keys(o).forEach(function(k) {\n      r[o[k]] = k;\n    });\n    return r;\n  }\n\n  //--------------------------------------------------------------------\n  //\n  // Generic Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // \"keyInfo\" is a dictionary:\n  //   code: string - name from DOM Level 3 KeyboardEvent code Values\n  //     https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html\n  //   location (optional): number - one of the DOM_KEY_LOCATION values\n  //   keyCap (optional): string - keyboard label in en-US locale\n  // USB code Usage ID from page 0x07 unless otherwise noted (Informative)\n\n  // Map of keyCode to keyInfo\n  var keyCodeToInfoTable = {\n    // 0x01 - VK_LBUTTON\n    // 0x02 - VK_RBUTTON\n    0x03: { code: 'Cancel' }, // [USB: 0x9b] char \\x0018 ??? (Not in D3E)\n    // 0x04 - VK_MBUTTON\n    // 0x05 - VK_XBUTTON1\n    // 0x06 - VK_XBUTTON2\n    0x06: { code: 'Help' }, // [USB: 0x75] ???\n    // 0x07 - undefined\n    0x08: { code: 'Backspace' }, // [USB: 0x2a] Labelled Delete on Macintosh keyboards.\n    0x09: { code: 'Tab' }, // [USB: 0x2b]\n    // 0x0A-0x0B - reserved\n    0X0C: { code: 'Clear' }, // [USB: 0x9c] NumPad Center (Not in D3E)\n    0X0D: { code: 'Enter' }, // [USB: 0x28]\n    // 0x0E-0x0F - undefined\n\n    0x10: { code: 'Shift' },\n    0x11: { code: 'Control' },\n    0x12: { code: 'Alt' },\n    0x13: { code: 'Pause' }, // [USB: 0x48]\n    0x14: { code: 'CapsLock' }, // [USB: 0x39]\n    0x15: { code: 'KanaMode' }, // [USB: 0x88] - \"HangulMode\" for Korean layout\n    0x16: { code: 'HangulMode' }, // [USB: 0x90] 0x15 as well in MSDN VK table ???\n    0x17: { code: 'JunjaMode' }, // (Not in D3E)\n    0x18: { code: 'FinalMode' }, // (Not in D3E)\n    0x19: { code: 'KanjiMode' }, // [USB: 0x91] - \"HanjaMode\" for Korean layout\n    // 0x1A - undefined\n    0x1B: { code: 'Escape' }, // [USB: 0x29]\n    0x1C: { code: 'Convert' }, // [USB: 0x8a]\n    0x1D: { code: 'NonConvert' }, // [USB: 0x8b]\n    0x1E: { code: 'Accept' }, // (Not in D3E)\n    0x1F: { code: 'ModeChange' }, // (Not in D3E)\n\n    0x20: { code: 'Space' }, // [USB: 0x2c]\n    0x21: { code: 'PageUp' }, // [USB: 0x4b]\n    0x22: { code: 'PageDown' }, // [USB: 0x4e]\n    0x23: { code: 'End' }, // [USB: 0x4d]\n    0x24: { code: 'Home' }, // [USB: 0x4a]\n    0x25: { code: 'ArrowLeft' }, // [USB: 0x50]\n    0x26: { code: 'ArrowUp' }, // [USB: 0x52]\n    0x27: { code: 'ArrowRight' }, // [USB: 0x4f]\n    0x28: { code: 'ArrowDown' }, // [USB: 0x51]\n    0x29: { code: 'Select' }, // (Not in D3E)\n    0x2A: { code: 'Print' }, // (Not in D3E)\n    0x2B: { code: 'Execute' }, // [USB: 0x74] (Not in D3E)\n    0x2C: { code: 'PrintScreen' }, // [USB: 0x46]\n    0x2D: { code: 'Insert' }, // [USB: 0x49]\n    0x2E: { code: 'Delete' }, // [USB: 0x4c]\n    0x2F: { code: 'Help' }, // [USB: 0x75] ???\n\n    0x30: { code: 'Digit0', keyCap: '0' }, // [USB: 0x27] 0)\n    0x31: { code: 'Digit1', keyCap: '1' }, // [USB: 0x1e] 1!\n    0x32: { code: 'Digit2', keyCap: '2' }, // [USB: 0x1f] 2@\n    0x33: { code: 'Digit3', keyCap: '3' }, // [USB: 0x20] 3#\n    0x34: { code: 'Digit4', keyCap: '4' }, // [USB: 0x21] 4$\n    0x35: { code: 'Digit5', keyCap: '5' }, // [USB: 0x22] 5%\n    0x36: { code: 'Digit6', keyCap: '6' }, // [USB: 0x23] 6^\n    0x37: { code: 'Digit7', keyCap: '7' }, // [USB: 0x24] 7&\n    0x38: { code: 'Digit8', keyCap: '8' }, // [USB: 0x25] 8*\n    0x39: { code: 'Digit9', keyCap: '9' }, // [USB: 0x26] 9(\n    // 0x3A-0x40 - undefined\n\n    0x41: { code: 'KeyA', keyCap: 'a' }, // [USB: 0x04]\n    0x42: { code: 'KeyB', keyCap: 'b' }, // [USB: 0x05]\n    0x43: { code: 'KeyC', keyCap: 'c' }, // [USB: 0x06]\n    0x44: { code: 'KeyD', keyCap: 'd' }, // [USB: 0x07]\n    0x45: { code: 'KeyE', keyCap: 'e' }, // [USB: 0x08]\n    0x46: { code: 'KeyF', keyCap: 'f' }, // [USB: 0x09]\n    0x47: { code: 'KeyG', keyCap: 'g' }, // [USB: 0x0a]\n    0x48: { code: 'KeyH', keyCap: 'h' }, // [USB: 0x0b]\n    0x49: { code: 'KeyI', keyCap: 'i' }, // [USB: 0x0c]\n    0x4A: { code: 'KeyJ', keyCap: 'j' }, // [USB: 0x0d]\n    0x4B: { code: 'KeyK', keyCap: 'k' }, // [USB: 0x0e]\n    0x4C: { code: 'KeyL', keyCap: 'l' }, // [USB: 0x0f]\n    0x4D: { code: 'KeyM', keyCap: 'm' }, // [USB: 0x10]\n    0x4E: { code: 'KeyN', keyCap: 'n' }, // [USB: 0x11]\n    0x4F: { code: 'KeyO', keyCap: 'o' }, // [USB: 0x12]\n\n    0x50: { code: 'KeyP', keyCap: 'p' }, // [USB: 0x13]\n    0x51: { code: 'KeyQ', keyCap: 'q' }, // [USB: 0x14]\n    0x52: { code: 'KeyR', keyCap: 'r' }, // [USB: 0x15]\n    0x53: { code: 'KeyS', keyCap: 's' }, // [USB: 0x16]\n    0x54: { code: 'KeyT', keyCap: 't' }, // [USB: 0x17]\n    0x55: { code: 'KeyU', keyCap: 'u' }, // [USB: 0x18]\n    0x56: { code: 'KeyV', keyCap: 'v' }, // [USB: 0x19]\n    0x57: { code: 'KeyW', keyCap: 'w' }, // [USB: 0x1a]\n    0x58: { code: 'KeyX', keyCap: 'x' }, // [USB: 0x1b]\n    0x59: { code: 'KeyY', keyCap: 'y' }, // [USB: 0x1c]\n    0x5A: { code: 'KeyZ', keyCap: 'z' }, // [USB: 0x1d]\n    0x5B: { code: 'OSLeft', location: LEFT }, // [USB: 0xe3]\n    0x5C: { code: 'OSRight', location: RIGHT }, // [USB: 0xe7]\n    0x5D: { code: 'ContextMenu' }, // [USB: 0x65] Context Menu\n    // 0x5E - reserved\n    0x5F: { code: 'Standby' }, // [USB: 0x82] Sleep\n\n    0x60: { code: 'Numpad0', keyCap: '0', location: NUMPAD }, // [USB: 0x62]\n    0x61: { code: 'Numpad1', keyCap: '1', location: NUMPAD }, // [USB: 0x59]\n    0x62: { code: 'Numpad2', keyCap: '2', location: NUMPAD }, // [USB: 0x5a]\n    0x63: { code: 'Numpad3', keyCap: '3', location: NUMPAD }, // [USB: 0x5b]\n    0x64: { code: 'Numpad4', keyCap: '4', location: NUMPAD }, // [USB: 0x5c]\n    0x65: { code: 'Numpad5', keyCap: '5', location: NUMPAD }, // [USB: 0x5d]\n    0x66: { code: 'Numpad6', keyCap: '6', location: NUMPAD }, // [USB: 0x5e]\n    0x67: { code: 'Numpad7', keyCap: '7', location: NUMPAD }, // [USB: 0x5f]\n    0x68: { code: 'Numpad8', keyCap: '8', location: NUMPAD }, // [USB: 0x60]\n    0x69: { code: 'Numpad9', keyCap: '9', location: NUMPAD }, // [USB: 0x61]\n    0x6A: { code: 'NumpadMultiply', keyCap: '*', location: NUMPAD }, // [USB: 0x55]\n    0x6B: { code: 'NumpadAdd', keyCap: '+', location: NUMPAD }, // [USB: 0x57]\n    0x6C: { code: 'NumpadComma', keyCap: ',', location: NUMPAD }, // [USB: 0x85]\n    0x6D: { code: 'NumpadSubtract', keyCap: '-', location: NUMPAD }, // [USB: 0x56]\n    0x6E: { code: 'NumpadDecimal', keyCap: '.', location: NUMPAD }, // [USB: 0x63]\n    0x6F: { code: 'NumpadDivide', keyCap: '/', location: NUMPAD }, // [USB: 0x54]\n\n    0x70: { code: 'F1' }, // [USB: 0x3a]\n    0x71: { code: 'F2' }, // [USB: 0x3b]\n    0x72: { code: 'F3' }, // [USB: 0x3c]\n    0x73: { code: 'F4' }, // [USB: 0x3d]\n    0x74: { code: 'F5' }, // [USB: 0x3e]\n    0x75: { code: 'F6' }, // [USB: 0x3f]\n    0x76: { code: 'F7' }, // [USB: 0x40]\n    0x77: { code: 'F8' }, // [USB: 0x41]\n    0x78: { code: 'F9' }, // [USB: 0x42]\n    0x79: { code: 'F10' }, // [USB: 0x43]\n    0x7A: { code: 'F11' }, // [USB: 0x44]\n    0x7B: { code: 'F12' }, // [USB: 0x45]\n    0x7C: { code: 'F13' }, // [USB: 0x68]\n    0x7D: { code: 'F14' }, // [USB: 0x69]\n    0x7E: { code: 'F15' }, // [USB: 0x6a]\n    0x7F: { code: 'F16' }, // [USB: 0x6b]\n\n    0x80: { code: 'F17' }, // [USB: 0x6c]\n    0x81: { code: 'F18' }, // [USB: 0x6d]\n    0x82: { code: 'F19' }, // [USB: 0x6e]\n    0x83: { code: 'F20' }, // [USB: 0x6f]\n    0x84: { code: 'F21' }, // [USB: 0x70]\n    0x85: { code: 'F22' }, // [USB: 0x71]\n    0x86: { code: 'F23' }, // [USB: 0x72]\n    0x87: { code: 'F24' }, // [USB: 0x73]\n    // 0x88-0x8F - unassigned\n\n    0x90: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n    0x91: { code: 'ScrollLock' }, // [USB: 0x47]\n    // 0x92-0x96 - OEM specific\n    // 0x97-0x9F - unassigned\n\n    // NOTE: 0xA0-0xA5 usually mapped to 0x10-0x12 in browsers\n    0xA0: { code: 'ShiftLeft', location: LEFT }, // [USB: 0xe1]\n    0xA1: { code: 'ShiftRight', location: RIGHT }, // [USB: 0xe5]\n    0xA2: { code: 'ControlLeft', location: LEFT }, // [USB: 0xe0]\n    0xA3: { code: 'ControlRight', location: RIGHT }, // [USB: 0xe4]\n    0xA4: { code: 'AltLeft', location: LEFT }, // [USB: 0xe2]\n    0xA5: { code: 'AltRight', location: RIGHT }, // [USB: 0xe6]\n\n    0xA6: { code: 'BrowserBack' }, // [USB: 0x0c/0x0224]\n    0xA7: { code: 'BrowserForward' }, // [USB: 0x0c/0x0225]\n    0xA8: { code: 'BrowserRefresh' }, // [USB: 0x0c/0x0227]\n    0xA9: { code: 'BrowserStop' }, // [USB: 0x0c/0x0226]\n    0xAA: { code: 'BrowserSearch' }, // [USB: 0x0c/0x0221]\n    0xAB: { code: 'BrowserFavorites' }, // [USB: 0x0c/0x0228]\n    0xAC: { code: 'BrowserHome' }, // [USB: 0x0c/0x0222]\n    0xAD: { code: 'VolumeMute' }, // [USB: 0x7f]\n    0xAE: { code: 'VolumeDown' }, // [USB: 0x81]\n    0xAF: { code: 'VolumeUp' }, // [USB: 0x80]\n\n    0xB0: { code: 'MediaTrackNext' }, // [USB: 0x0c/0x00b5]\n    0xB1: { code: 'MediaTrackPrevious' }, // [USB: 0x0c/0x00b6]\n    0xB2: { code: 'MediaStop' }, // [USB: 0x0c/0x00b7]\n    0xB3: { code: 'MediaPlayPause' }, // [USB: 0x0c/0x00cd]\n    0xB4: { code: 'LaunchMail' }, // [USB: 0x0c/0x018a]\n    0xB5: { code: 'MediaSelect' },\n    0xB6: { code: 'LaunchApp1' },\n    0xB7: { code: 'LaunchApp2' },\n    // 0xB8-0xB9 - reserved\n    0xBA: { code: 'Semicolon',  keyCap: ';' }, // [USB: 0x33] ;: (US Standard 101)\n    0xBB: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n    0xBC: { code: 'Comma', keyCap: ',' }, // [USB: 0x36] ,<\n    0xBD: { code: 'Minus', keyCap: '-' }, // [USB: 0x2d] -_\n    0xBE: { code: 'Period', keyCap: '.' }, // [USB: 0x37] .>\n    0xBF: { code: 'Slash', keyCap: '/' }, // [USB: 0x38] /? (US Standard 101)\n\n    0xC0: { code: 'Backquote', keyCap: '`' }, // [USB: 0x35] `~ (US Standard 101)\n    // 0xC1-0xCF - reserved\n\n    // 0xD0-0xD7 - reserved\n    // 0xD8-0xDA - unassigned\n    0xDB: { code: 'BracketLeft', keyCap: '[' }, // [USB: 0x2f] [{ (US Standard 101)\n    0xDC: { code: 'Backslash',  keyCap: '\\\\' }, // [USB: 0x31] \\| (US Standard 101)\n    0xDD: { code: 'BracketRight', keyCap: ']' }, // [USB: 0x30] ]} (US Standard 101)\n    0xDE: { code: 'Quote', keyCap: '\\'' }, // [USB: 0x34] '\" (US Standard 101)\n    // 0xDF - miscellaneous/varies\n\n    // 0xE0 - reserved\n    // 0xE1 - OEM specific\n    0xE2: { code: 'IntlBackslash',  keyCap: '\\\\' }, // [USB: 0x64] \\| (UK Standard 102)\n    // 0xE3-0xE4 - OEM specific\n    0xE5: { code: 'Process' }, // (Not in D3E)\n    // 0xE6 - OEM specific\n    // 0xE7 - VK_PACKET\n    // 0xE8 - unassigned\n    // 0xE9-0xEF - OEM specific\n\n    // 0xF0-0xF5 - OEM specific\n    0xF6: { code: 'Attn' }, // [USB: 0x9a] (Not in D3E)\n    0xF7: { code: 'CrSel' }, // [USB: 0xa3] (Not in D3E)\n    0xF8: { code: 'ExSel' }, // [USB: 0xa4] (Not in D3E)\n    0xF9: { code: 'EraseEof' }, // (Not in D3E)\n    0xFA: { code: 'Play' }, // (Not in D3E)\n    0xFB: { code: 'ZoomToggle' }, // (Not in D3E)\n    // 0xFC - VK_NONAME - reserved\n    // 0xFD - VK_PA1\n    0xFE: { code: 'Clear' } // [USB: 0x9c] (Not in D3E)\n  };\n\n  // No legacy keyCode, but listed in D3E:\n\n  // code: usb\n  // 'IntlHash': 0x070032,\n  // 'IntlRo': 0x070087,\n  // 'IntlYen': 0x070089,\n  // 'NumpadBackspace': 0x0700bb,\n  // 'NumpadClear': 0x0700d8,\n  // 'NumpadClearEntry': 0x0700d9,\n  // 'NumpadMemoryAdd': 0x0700d3,\n  // 'NumpadMemoryClear': 0x0700d2,\n  // 'NumpadMemoryRecall': 0x0700d1,\n  // 'NumpadMemoryStore': 0x0700d0,\n  // 'NumpadMemorySubtract': 0x0700d4,\n  // 'NumpadParenLeft': 0x0700b6,\n  // 'NumpadParenRight': 0x0700b7,\n\n  //--------------------------------------------------------------------\n  //\n  // Browser/OS Specific Mappings\n  //\n  //--------------------------------------------------------------------\n\n  mergeIf(keyCodeToInfoTable,\n          'moz', {\n            0x3B: { code: 'Semicolon', keyCap: ';' }, // [USB: 0x33] ;: (US Standard 101)\n            0x3D: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n            0x6B: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n            0x6D: { code: 'Minus', keyCap: '-' }, // [USB: 0x2d] -_\n            0xBB: { code: 'NumpadAdd', keyCap: '+', location: NUMPAD }, // [USB: 0x57]\n            0xBD: { code: 'NumpadSubtract', keyCap: '-', location: NUMPAD } // [USB: 0x56]\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'moz-mac', {\n            0x0C: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n            0xAD: { code: 'Minus', keyCap: '-' } // [USB: 0x2d] -_\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'moz-win', {\n            0xAD: { code: 'Minus', keyCap: '-' } // [USB: 0x2d] -_\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'chrome-mac', {\n            0x5D: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n          });\n\n  // Windows via Bootcamp (!)\n  if (0) {\n    mergeIf(keyCodeToInfoTable,\n            'chrome-win', {\n              0xC0: { code: 'Quote', keyCap: '\\'' }, // [USB: 0x34] '\" (US Standard 101)\n              0xDE: { code: 'Backslash',  keyCap: '\\\\' }, // [USB: 0x31] \\| (US Standard 101)\n              0xDF: { code: 'Backquote', keyCap: '`' } // [USB: 0x35] `~ (US Standard 101)\n            });\n\n    mergeIf(keyCodeToInfoTable,\n            'ie', {\n              0xC0: { code: 'Quote', keyCap: '\\'' }, // [USB: 0x34] '\" (US Standard 101)\n              0xDE: { code: 'Backslash',  keyCap: '\\\\' }, // [USB: 0x31] \\| (US Standard 101)\n              0xDF: { code: 'Backquote', keyCap: '`' } // [USB: 0x35] `~ (US Standard 101)\n            });\n  }\n\n  mergeIf(keyCodeToInfoTable,\n          'safari', {\n            0x03: { code: 'Enter' }, // [USB: 0x28] old Safari\n            0x19: { code: 'Tab' } // [USB: 0x2b] old Safari for Shift+Tab\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'ios', {\n            0x0A: { code: 'Enter', location: STANDARD } // [USB: 0x28]\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'safari-mac', {\n            0x5B: { code: 'OSLeft', location: LEFT }, // [USB: 0xe3]\n            0x5D: { code: 'OSRight', location: RIGHT }, // [USB: 0xe7]\n            0xE5: { code: 'KeyQ', keyCap: 'Q' } // [USB: 0x14] On alternate presses, Ctrl+Q sends this\n          });\n\n  //--------------------------------------------------------------------\n  //\n  // Identifier Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // Cases where newer-ish browsers send keyIdentifier which can be\n  // used to disambiguate keys.\n\n  // keyIdentifierTable[keyIdentifier] -> keyInfo\n\n  var keyIdentifierTable = {};\n  if ('cros' === os) {\n    keyIdentifierTable['U+00A0'] = { code: 'ShiftLeft', location: LEFT };\n    keyIdentifierTable['U+00A1'] = { code: 'ShiftRight', location: RIGHT };\n    keyIdentifierTable['U+00A2'] = { code: 'ControlLeft', location: LEFT };\n    keyIdentifierTable['U+00A3'] = { code: 'ControlRight', location: RIGHT };\n    keyIdentifierTable['U+00A4'] = { code: 'AltLeft', location: LEFT };\n    keyIdentifierTable['U+00A5'] = { code: 'AltRight', location: RIGHT };\n  }\n  if ('chrome-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = { code: 'ContextMenu' };\n  }\n  if ('safari-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = { code: 'ContextMenu' };\n  }\n  if ('ios' === os) {\n    // These only generate keyup events\n    keyIdentifierTable['U+0010'] = { code: 'Function' };\n\n    keyIdentifierTable['U+001C'] = { code: 'ArrowLeft' };\n    keyIdentifierTable['U+001D'] = { code: 'ArrowRight' };\n    keyIdentifierTable['U+001E'] = { code: 'ArrowUp' };\n    keyIdentifierTable['U+001F'] = { code: 'ArrowDown' };\n\n    keyIdentifierTable['U+0001'] = { code: 'Home' }; // [USB: 0x4a] Fn + ArrowLeft\n    keyIdentifierTable['U+0004'] = { code: 'End' }; // [USB: 0x4d] Fn + ArrowRight\n    keyIdentifierTable['U+000B'] = { code: 'PageUp' }; // [USB: 0x4b] Fn + ArrowUp\n    keyIdentifierTable['U+000C'] = { code: 'PageDown' }; // [USB: 0x4e] Fn + ArrowDown\n  }\n\n  //--------------------------------------------------------------------\n  //\n  // Location Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // Cases where newer-ish browsers send location/keyLocation which\n  // can be used to disambiguate keys.\n\n  // locationTable[location][keyCode] -> keyInfo\n  var locationTable = [];\n  locationTable[LEFT] = {\n    0x10: { code: 'ShiftLeft', location: LEFT }, // [USB: 0xe1]\n    0x11: { code: 'ControlLeft', location: LEFT }, // [USB: 0xe0]\n    0x12: { code: 'AltLeft', location: LEFT } // [USB: 0xe2]\n  };\n  locationTable[RIGHT] = {\n    0x10: { code: 'ShiftRight', location: RIGHT }, // [USB: 0xe5]\n    0x11: { code: 'ControlRight', location: RIGHT }, // [USB: 0xe4]\n    0x12: { code: 'AltRight', location: RIGHT } // [USB: 0xe6]\n  };\n  locationTable[NUMPAD] = {\n    0x0D: { code: 'NumpadEnter', location: NUMPAD } // [USB: 0x58]\n  };\n\n  mergeIf(locationTable[NUMPAD], 'moz', {\n    0x6D: { code: 'NumpadSubtract', location: NUMPAD }, // [USB: 0x56]\n    0x6B: { code: 'NumpadAdd', location: NUMPAD } // [USB: 0x57]\n  });\n  mergeIf(locationTable[LEFT], 'moz-mac', {\n    0xE0: { code: 'OSLeft', location: LEFT } // [USB: 0xe3]\n  });\n  mergeIf(locationTable[RIGHT], 'moz-mac', {\n    0xE0: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n  mergeIf(locationTable[RIGHT], 'moz-win', {\n    0x5B: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n\n\n  mergeIf(locationTable[RIGHT], 'mac', {\n    0x5D: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n\n  mergeIf(locationTable[NUMPAD], 'chrome-mac', {\n    0x0C: { code: 'NumLock', location: NUMPAD } // [USB: 0x53]\n  });\n\n  mergeIf(locationTable[NUMPAD], 'safari-mac', {\n    0x0C: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n    0xBB: { code: 'NumpadAdd', location: NUMPAD }, // [USB: 0x57]\n    0xBD: { code: 'NumpadSubtract', location: NUMPAD }, // [USB: 0x56]\n    0xBE: { code: 'NumpadDecimal', location: NUMPAD }, // [USB: 0x63]\n    0xBF: { code: 'NumpadDivide', location: NUMPAD } // [USB: 0x54]\n  });\n\n\n  //--------------------------------------------------------------------\n  //\n  // Key Values\n  //\n  //--------------------------------------------------------------------\n\n  // Mapping from `code` values to `key` values. Values defined at:\n  // https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-key.html\n  // Entries are only provided when `key` differs from `code`. If\n  // printable, `shiftKey` has the shifted printable character. This\n  // assumes US Standard 101 layout\n\n  var codeToKeyTable = {\n    // Modifier Keys\n    ShiftLeft: { key: 'Shift' },\n    ShiftRight: { key: 'Shift' },\n    ControlLeft: { key: 'Control' },\n    ControlRight: { key: 'Control' },\n    AltLeft: { key: 'Alt' },\n    AltRight: { key: 'Alt' },\n    OSLeft: { key: 'OS' },\n    OSRight: { key: 'OS' },\n\n    // Whitespace Keys\n    NumpadEnter: { key: 'Enter' },\n    Space: { key: ' ' },\n\n    // Printable Keys\n    Digit0: { key: '0', shiftKey: ')' },\n    Digit1: { key: '1', shiftKey: '!' },\n    Digit2: { key: '2', shiftKey: '@' },\n    Digit3: { key: '3', shiftKey: '#' },\n    Digit4: { key: '4', shiftKey: '$' },\n    Digit5: { key: '5', shiftKey: '%' },\n    Digit6: { key: '6', shiftKey: '^' },\n    Digit7: { key: '7', shiftKey: '&' },\n    Digit8: { key: '8', shiftKey: '*' },\n    Digit9: { key: '9', shiftKey: '(' },\n    KeyA: { key: 'a', shiftKey: 'A' },\n    KeyB: { key: 'b', shiftKey: 'B' },\n    KeyC: { key: 'c', shiftKey: 'C' },\n    KeyD: { key: 'd', shiftKey: 'D' },\n    KeyE: { key: 'e', shiftKey: 'E' },\n    KeyF: { key: 'f', shiftKey: 'F' },\n    KeyG: { key: 'g', shiftKey: 'G' },\n    KeyH: { key: 'h', shiftKey: 'H' },\n    KeyI: { key: 'i', shiftKey: 'I' },\n    KeyJ: { key: 'j', shiftKey: 'J' },\n    KeyK: { key: 'k', shiftKey: 'K' },\n    KeyL: { key: 'l', shiftKey: 'L' },\n    KeyM: { key: 'm', shiftKey: 'M' },\n    KeyN: { key: 'n', shiftKey: 'N' },\n    KeyO: { key: 'o', shiftKey: 'O' },\n    KeyP: { key: 'p', shiftKey: 'P' },\n    KeyQ: { key: 'q', shiftKey: 'Q' },\n    KeyR: { key: 'r', shiftKey: 'R' },\n    KeyS: { key: 's', shiftKey: 'S' },\n    KeyT: { key: 't', shiftKey: 'T' },\n    KeyU: { key: 'u', shiftKey: 'U' },\n    KeyV: { key: 'v', shiftKey: 'V' },\n    KeyW: { key: 'w', shiftKey: 'W' },\n    KeyX: { key: 'x', shiftKey: 'X' },\n    KeyY: { key: 'y', shiftKey: 'Y' },\n    KeyZ: { key: 'z', shiftKey: 'Z' },\n    Numpad0: { key: '0' },\n    Numpad1: { key: '1' },\n    Numpad2: { key: '2' },\n    Numpad3: { key: '3' },\n    Numpad4: { key: '4' },\n    Numpad5: { key: '5' },\n    Numpad6: { key: '6' },\n    Numpad7: { key: '7' },\n    Numpad8: { key: '8' },\n    Numpad9: { key: '9' },\n    NumpadMultiply: { key: '*' },\n    NumpadAdd: { key: '+' },\n    NumpadComma: { key: ',' },\n    NumpadSubtract: { key: '-' },\n    NumpadDecimal: { key: '.' },\n    NumpadDivide: { key: '/' },\n    Semicolon: { key: ';', shiftKey: ':' },\n    Equal: { key: '=', shiftKey: '+' },\n    Comma: { key: ',', shiftKey: '<' },\n    Minus: { key: '-', shiftKey: '_' },\n    Period: { key: '.', shiftKey: '>' },\n    Slash: { key: '/', shiftKey: '?' },\n    Backquote: { key: '`', shiftKey: '~' },\n    BracketLeft: { key: '[', shiftKey: '{' },\n    Backslash: { key: '\\\\', shiftKey: '|' },\n    BracketRight: { key: ']', shiftKey: '}' },\n    Quote: { key: '\\'', shiftKey: '\"' },\n    IntlBackslash: { key: '\\\\', shiftKey: '|' }\n  };\n\n  mergeIf(codeToKeyTable, 'mac', {\n    OSLeft: { key: 'Meta' },\n    OSRight: { key: 'Meta' }\n  });\n\n  // Corrections for 'key' names in older browsers (e.g. FF36-)\n  // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.key#Key_values\n  var keyFixTable = {\n    Esc: 'Escape',\n    Nonconvert: 'NonConvert',\n    Left: 'ArrowLeft',\n    Up: 'ArrowUp',\n    Right: 'ArrowRight',\n    Down: 'ArrowDown',\n    Del: 'Delete',\n    Menu: 'ContextMenu',\n    MediaNextTrack: 'MediaTrackNext',\n    MediaPreviousTrack: 'MediaTrackPrevious',\n    SelectMedia: 'MediaSelect',\n    HalfWidth: 'Hankaku',\n    FullWidth: 'Zenkaku',\n    RomanCharacters: 'Romaji',\n    Crsel: 'CrSel',\n    Exsel: 'ExSel',\n    Zoom: 'ZoomToggle'\n  };\n\n  //--------------------------------------------------------------------\n  //\n  // Exported Functions\n  //\n  //--------------------------------------------------------------------\n\n\n  var codeTable = remap(keyCodeToInfoTable, 'code');\n\n  try {\n    var nativeLocation = nativeKeyboardEvent && ('location' in new KeyboardEvent(''));\n  } catch (_) {}\n\n  function keyInfoForEvent(event) {\n    var keyCode = 'keyCode' in event ? event.keyCode : 'which' in event ? event.which : 0;\n\n    var keyInfo = (function(){\n      if (nativeLocation || 'keyLocation' in event) {\n        var location = nativeLocation ? event.location : event.keyLocation;\n        if (location && keyCode in locationTable[location]) {\n          return locationTable[location][keyCode];\n        }\n      }\n      if ('keyIdentifier' in event && event.keyIdentifier in keyIdentifierTable) {\n        return keyIdentifierTable[event.keyIdentifier];\n      }\n      if (keyCode in keyCodeToInfoTable) {\n        return keyCodeToInfoTable[keyCode];\n      }\n      return null;\n    }());\n\n    // TODO: Track these down and move to general tables\n    if (0) {\n      // TODO: Map these for newerish browsers?\n      // TODO: iOS only?\n      // TODO: Override with more common keyIdentifier name?\n      switch (event.keyIdentifier) {\n      case 'U+0010': keyInfo = { code: 'Function' }; break;\n      case 'U+001C': keyInfo = { code: 'ArrowLeft' }; break;\n      case 'U+001D': keyInfo = { code: 'ArrowRight' }; break;\n      case 'U+001E': keyInfo = { code: 'ArrowUp' }; break;\n      case 'U+001F': keyInfo = { code: 'ArrowDown' }; break;\n      }\n    }\n\n    if (!keyInfo)\n      return null;\n\n    var key = (function() {\n      var entry = codeToKeyTable[keyInfo.code];\n      if (!entry) return keyInfo.code;\n      return (event.shiftKey && 'shiftKey' in entry) ? entry.shiftKey : entry.key;\n    }());\n\n    return {\n      code: keyInfo.code,\n      key: key,\n      location: keyInfo.location,\n      keyCap: keyInfo.keyCap\n    };\n  }\n\n  function queryKeyCap(code, locale) {\n    code = String(code);\n    if (!codeTable.hasOwnProperty(code)) return 'Undefined';\n    if (locale && String(locale).toLowerCase() !== 'en-us') throw Error('Unsupported locale');\n    var keyInfo = codeTable[code];\n    return keyInfo.keyCap || keyInfo.code || 'Undefined';\n  }\n\n  if ('KeyboardEvent' in global && 'defineProperty' in Object) {\n    (function() {\n      function define(o, p, v) {\n        if (p in o) return;\n        Object.defineProperty(o, p, v);\n      }\n\n      define(KeyboardEvent.prototype, 'code', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return keyInfo ? keyInfo.code : '';\n      }});\n\n      // Fix for nonstandard `key` values (FF36-)\n      if ('key' in KeyboardEvent.prototype) {\n        var desc = Object.getOwnPropertyDescriptor(KeyboardEvent.prototype, 'key');\n        Object.defineProperty(KeyboardEvent.prototype, 'key', { get: function() {\n          var key = desc.get.call(this);\n          return keyFixTable.hasOwnProperty(key) ? keyFixTable[key] : key;\n        }});\n      }\n\n      define(KeyboardEvent.prototype, 'key', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return (keyInfo && 'key' in keyInfo) ? keyInfo.key : 'Unidentified';\n      }});\n\n      define(KeyboardEvent.prototype, 'location', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return (keyInfo && 'location' in keyInfo) ? keyInfo.location : STANDARD;\n      }});\n\n      define(KeyboardEvent.prototype, 'locale', { get: function() {\n        return '';\n      }});\n    }());\n  }\n\n  if (!('queryKeyCap' in global.KeyboardEvent))\n    global.KeyboardEvent.queryKeyCap = queryKeyCap;\n\n  // Helper for IE8-\n  global.identifyKey = function(event) {\n    if ('code' in event)\n      return;\n\n    var keyInfo = keyInfoForEvent(event);\n    event.code = keyInfo ? keyInfo.code : '';\n    event.key = (keyInfo && 'key' in keyInfo) ? keyInfo.key : 'Unidentified';\n    event.location = ('location' in event) ? event.location :\n      ('keyLocation' in event) ? event.keyLocation :\n      (keyInfo && 'location' in keyInfo) ? keyInfo.location : STANDARD;\n    event.locale = '';\n  };\n\n} (window));\n","module.exports = Vec3;\n\nvar Mat3 = require('./Mat3');\n\n/**\n * 3-dimensional vector\n * @class Vec3\n * @constructor\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @author schteppe\n * @example\n *     var v = new Vec3(1, 2, 3);\n *     console.log('x=' + v.x); // x=1\n */\nfunction Vec3(x,y,z){\n    /**\n     * @property x\n     * @type {Number}\n     */\n    this.x = x||0.0;\n\n    /**\n     * @property y\n     * @type {Number}\n     */\n    this.y = y||0.0;\n\n    /**\n     * @property z\n     * @type {Number}\n     */\n    this.z = z||0.0;\n}\n\n/**\n * @static\n * @property {Vec3} ZERO\n */\nVec3.ZERO = new Vec3(0, 0, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_X\n */\nVec3.UNIT_X = new Vec3(1, 0, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_Y\n */\nVec3.UNIT_Y = new Vec3(0, 1, 0);\n\n/**\n * @static\n * @property {Vec3} UNIT_Z\n */\nVec3.UNIT_Z = new Vec3(0, 0, 1);\n\n/**\n * Vector cross product\n * @method cross\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\nVec3.prototype.cross = function(v,target){\n    var vx=v.x, vy=v.y, vz=v.z, x=this.x, y=this.y, z=this.z;\n    target = target || new Vec3();\n\n    target.x = (y * vz) - (z * vy);\n    target.y = (z * vx) - (x * vz);\n    target.z = (x * vy) - (y * vx);\n\n    return target;\n};\n\n/**\n * Set the vectors' 3 elements\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @return Vec3\n */\nVec3.prototype.set = function(x,y,z){\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n};\n\n/**\n * Set all components of the vector to zero.\n * @method setZero\n */\nVec3.prototype.setZero = function(){\n    this.x = this.y = this.z = 0;\n};\n\n/**\n * Vector addition\n * @method vadd\n * @param {Vec3} v\n * @param {Vec3} target Optional.\n * @return {Vec3}\n */\nVec3.prototype.vadd = function(v,target){\n    if(target){\n        target.x = v.x + this.x;\n        target.y = v.y + this.y;\n        target.z = v.z + this.z;\n    } else {\n        return new Vec3(this.x + v.x,\n                               this.y + v.y,\n                               this.z + v.z);\n    }\n};\n\n/**\n * Vector subtraction\n * @method vsub\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\nVec3.prototype.vsub = function(v,target){\n    if(target){\n        target.x = this.x - v.x;\n        target.y = this.y - v.y;\n        target.z = this.z - v.z;\n    } else {\n        return new Vec3(this.x-v.x,\n                               this.y-v.y,\n                               this.z-v.z);\n    }\n};\n\n/**\n * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\n * @method crossmat\n * @see http://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf\n * @return {Mat3}\n */\nVec3.prototype.crossmat = function(){\n    return new Mat3([     0,  -this.z,   this.y,\n                            this.z,        0,  -this.x,\n                           -this.y,   this.x,        0]);\n};\n\n/**\n * Normalize the vector. Note that this changes the values in the vector.\n * @method normalize\n * @return {Number} Returns the norm of the vector\n */\nVec3.prototype.normalize = function(){\n    var x=this.x, y=this.y, z=this.z;\n    var n = Math.sqrt(x*x + y*y + z*z);\n    if(n>0.0){\n        var invN = 1/n;\n        this.x *= invN;\n        this.y *= invN;\n        this.z *= invN;\n    } else {\n        // Make something up\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n    }\n    return n;\n};\n\n/**\n * Get the version of this vector that is of length 1.\n * @method unit\n * @param {Vec3} target Optional target to save in\n * @return {Vec3} Returns the unit vector\n */\nVec3.prototype.unit = function(target){\n    target = target || new Vec3();\n    var x=this.x, y=this.y, z=this.z;\n    var ninv = Math.sqrt(x*x + y*y + z*z);\n    if(ninv>0.0){\n        ninv = 1.0/ninv;\n        target.x = x * ninv;\n        target.y = y * ninv;\n        target.z = z * ninv;\n    } else {\n        target.x = 1;\n        target.y = 0;\n        target.z = 0;\n    }\n    return target;\n};\n\n/**\n * Get the length of the vector\n * @method norm\n * @return {Number}\n * @deprecated Use .length() instead\n */\nVec3.prototype.norm = function(){\n    var x=this.x, y=this.y, z=this.z;\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Get the length of the vector\n * @method length\n * @return {Number}\n */\nVec3.prototype.length = Vec3.prototype.norm;\n\n/**\n * Get the squared length of the vector\n * @method norm2\n * @return {Number}\n * @deprecated Use .lengthSquared() instead.\n */\nVec3.prototype.norm2 = function(){\n    return this.dot(this);\n};\n\n/**\n * Get the squared length of the vector.\n * @method lengthSquared\n * @return {Number}\n */\nVec3.prototype.lengthSquared = Vec3.prototype.norm2;\n\n/**\n * Get distance from this point to another point\n * @method distanceTo\n * @param  {Vec3} p\n * @return {Number}\n */\nVec3.prototype.distanceTo = function(p){\n    var x=this.x, y=this.y, z=this.z;\n    var px=p.x, py=p.y, pz=p.z;\n    return Math.sqrt((px-x)*(px-x)+\n                     (py-y)*(py-y)+\n                     (pz-z)*(pz-z));\n};\n\n/**\n * Get squared distance from this point to another point\n * @method distanceSquared\n * @param  {Vec3} p\n * @return {Number}\n */\nVec3.prototype.distanceSquared = function(p){\n    var x=this.x, y=this.y, z=this.z;\n    var px=p.x, py=p.y, pz=p.z;\n    return (px-x)*(px-x) + (py-y)*(py-y) + (pz-z)*(pz-z);\n};\n\n/**\n * Multiply all the components of the vector with a scalar.\n * @deprecated Use .scale instead\n * @method mult\n * @param {Number} scalar\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n * @deprecated Use .scale() instead\n */\nVec3.prototype.mult = function(scalar,target){\n    target = target || new Vec3();\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    target.x = scalar * x;\n    target.y = scalar * y;\n    target.z = scalar * z;\n    return target;\n};\n\n/**\n * Multiply the vector with an other vector, component-wise.\n * @method mult\n * @param {Number} vector\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n */\nVec3.prototype.vmul = function(vector, target){\n    target = target || new Vec3();\n    target.x = vector.x * this.x;\n    target.y = vector.y * this.y;\n    target.z = vector.z * this.z;\n    return target;\n};\n\n/**\n * Multiply the vector with a scalar.\n * @method scale\n * @param {Number} scalar\n * @param {Vec3} target\n * @return {Vec3}\n */\nVec3.prototype.scale = Vec3.prototype.mult;\n\n/**\n * Scale a vector and add it to this vector. Save the result in \"target\". (target = this + vector * scalar)\n * @method addScaledVector\n * @param {Number} scalar\n * @param {Vec3} vector\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n */\nVec3.prototype.addScaledVector = function(scalar, vector, target){\n    target = target || new Vec3();\n    target.x = this.x + scalar * vector.x;\n    target.y = this.y + scalar * vector.y;\n    target.z = this.z + scalar * vector.z;\n    return target;\n};\n\n/**\n * Calculate dot product\n * @method dot\n * @param {Vec3} v\n * @return {Number}\n */\nVec3.prototype.dot = function(v){\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n};\n\n/**\n * @method isZero\n * @return bool\n */\nVec3.prototype.isZero = function(){\n    return this.x===0 && this.y===0 && this.z===0;\n};\n\n/**\n * Make the vector point in the opposite direction.\n * @method negate\n * @param {Vec3} target Optional target to save in\n * @return {Vec3}\n */\nVec3.prototype.negate = function(target){\n    target = target || new Vec3();\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    return target;\n};\n\n/**\n * Compute two artificial tangents to the vector\n * @method tangents\n * @param {Vec3} t1 Vector object to save the first tangent in\n * @param {Vec3} t2 Vector object to save the second tangent in\n */\nvar Vec3_tangents_n = new Vec3();\nvar Vec3_tangents_randVec = new Vec3();\nVec3.prototype.tangents = function(t1,t2){\n    var norm = this.norm();\n    if(norm>0.0){\n        var n = Vec3_tangents_n;\n        var inorm = 1/norm;\n        n.set(this.x*inorm,this.y*inorm,this.z*inorm);\n        var randVec = Vec3_tangents_randVec;\n        if(Math.abs(n.x) < 0.9){\n            randVec.set(1,0,0);\n            n.cross(randVec,t1);\n        } else {\n            randVec.set(0,1,0);\n            n.cross(randVec,t1);\n        }\n        n.cross(t1,t2);\n    } else {\n        // The normal length is zero, make something up\n        t1.set(1, 0, 0);\n        t2.set(0, 1, 0);\n    }\n};\n\n/**\n * Converts to a more readable format\n * @method toString\n * @return string\n */\nVec3.prototype.toString = function(){\n    return this.x+\",\"+this.y+\",\"+this.z;\n};\n\n/**\n * Converts to an array\n * @method toArray\n * @return Array\n */\nVec3.prototype.toArray = function(){\n    return [this.x, this.y, this.z];\n};\n\n/**\n * Copies value of source to this vector.\n * @method copy\n * @param {Vec3} source\n * @return {Vec3} this\n */\nVec3.prototype.copy = function(source){\n    this.x = source.x;\n    this.y = source.y;\n    this.z = source.z;\n    return this;\n};\n\n\n/**\n * Do a linear interpolation between two vectors\n * @method lerp\n * @param {Vec3} v\n * @param {Number} t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\n * @param {Vec3} target\n */\nVec3.prototype.lerp = function(v,t,target){\n    var x=this.x, y=this.y, z=this.z;\n    target.x = x + (v.x-x)*t;\n    target.y = y + (v.y-y)*t;\n    target.z = z + (v.z-z)*t;\n};\n\n/**\n * Check if a vector equals is almost equal to another one.\n * @method almostEquals\n * @param {Vec3} v\n * @param {Number} precision\n * @return bool\n */\nVec3.prototype.almostEquals = function(v,precision){\n    if(precision===undefined){\n        precision = 1e-6;\n    }\n    if( Math.abs(this.x-v.x)>precision ||\n        Math.abs(this.y-v.y)>precision ||\n        Math.abs(this.z-v.z)>precision){\n        return false;\n    }\n    return true;\n};\n\n/**\n * Check if a vector is almost zero\n * @method almostZero\n * @param {Number} precision\n */\nVec3.prototype.almostZero = function(precision){\n    if(precision===undefined){\n        precision = 1e-6;\n    }\n    if( Math.abs(this.x)>precision ||\n        Math.abs(this.y)>precision ||\n        Math.abs(this.z)>precision){\n        return false;\n    }\n    return true;\n};\n\nvar antip_neg = new Vec3();\n\n/**\n * Check if the vector is anti-parallel to another vector.\n * @method isAntiparallelTo\n * @param  {Vec3}  v\n * @param  {Number}  precision Set to zero for exact comparisons\n * @return {Boolean}\n */\nVec3.prototype.isAntiparallelTo = function(v,precision){\n    this.negate(antip_neg);\n    return antip_neg.almostEquals(v,precision);\n};\n\n/**\n * Clone the vector\n * @method clone\n * @return {Vec3}\n */\nVec3.prototype.clone = function(){\n    return new Vec3(this.x, this.y, this.z);\n};","module.exports = HingeConstraint;\n\nvar Constraint = require('./Constraint');\nvar PointToPointConstraint = require('./PointToPointConstraint');\nvar RotationalEquation = require('../equations/RotationalEquation');\nvar RotationalMotorEquation = require('../equations/RotationalMotorEquation');\nvar ContactEquation = require('../equations/ContactEquation');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\n * @class HingeConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA] A point defined locally in bodyA. This defines the offset of axisA.\n * @param {Vec3} [options.axisA] An axis that bodyA can rotate around, defined locally in bodyA.\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction HingeConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    /**\n     * Rotation axis, defined locally in bodyA.\n     * @property {Vec3} axisA\n     */\n    var axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1,0,0);\n    axisA.normalize();\n\n    /**\n     * Rotation axis, defined locally in bodyB.\n     * @property {Vec3} axisB\n     */\n    var axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1,0,0);\n    axisB.normalize();\n\n    /**\n     * @property {RotationalEquation} rotationalEquation1\n     */\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation2\n     */\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalMotorEquation} motorEquation\n     */\n    var motor = this.motorEquation = new RotationalMotorEquation(bodyA,bodyB,maxForce);\n    motor.enabled = false; // Not enabled by default\n\n    // Equations to be fed to the solver\n    this.equations.push(\n        r1, // rotational1\n        r2, // rotational2\n        motor\n    );\n}\nHingeConstraint.prototype = new PointToPointConstraint();\nHingeConstraint.constructor = HingeConstraint;\n\n/**\n * @method enableMotor\n */\nHingeConstraint.prototype.enableMotor = function(){\n    this.motorEquation.enabled = true;\n};\n\n/**\n * @method disableMotor\n */\nHingeConstraint.prototype.disableMotor = function(){\n    this.motorEquation.enabled = false;\n};\n\n/**\n * @method setMotorSpeed\n * @param {number} speed\n */\nHingeConstraint.prototype.setMotorSpeed = function(speed){\n    this.motorEquation.targetVelocity = speed;\n};\n\n/**\n * @method setMotorMaxForce\n * @param {number} maxForce\n */\nHingeConstraint.prototype.setMotorMaxForce = function(maxForce){\n    this.motorEquation.maxForce = maxForce;\n    this.motorEquation.minForce = -maxForce;\n};\n\nvar HingeConstraint_update_tmpVec1 = new Vec3();\nvar HingeConstraint_update_tmpVec2 = new Vec3();\n\nHingeConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        motor = this.motorEquation,\n        r1 = this.rotationalEquation1,\n        r2 = this.rotationalEquation2,\n        worldAxisA = HingeConstraint_update_tmpVec1,\n        worldAxisB = HingeConstraint_update_tmpVec2;\n\n    var axisA = this.axisA;\n    var axisB = this.axisB;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    // Get world axes\n    bodyA.quaternion.vmult(axisA, worldAxisA);\n    bodyB.quaternion.vmult(axisB, worldAxisB);\n\n    worldAxisA.tangents(r1.axisA, r2.axisA);\n    r1.axisB.copy(worldAxisB);\n    r2.axisB.copy(worldAxisB);\n\n    if(this.motorEquation.enabled){\n        bodyA.quaternion.vmult(this.axisA, motor.axisA);\n        bodyB.quaternion.vmult(this.axisB, motor.axisB);\n    }\n};\n\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({ beforeCreate: vuexInit });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      if ( options === void 0 ) options = {};\n\n      options.init = options.init\n        ? [vuexInit].concat(options.init)\n        : vuexInit;\n      _init.call(this, options);\n    };\n  }\n\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n  function vuexInit () {\n    var options = this.$options;\n    // store injection\n    if (options.store) {\n      this.$store = typeof options.store === 'function'\n        ? options.store()\n        : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook =\n  typeof window !== 'undefined' &&\n  window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin (store) {\n  if (!devtoolHook) { return }\n\n  store._devtoolHook = devtoolHook;\n\n  devtoolHook.emit('vuex:init', store);\n\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n\n/**\n * forEach for object\n */\nfunction forEachValue (obj, fn) {\n  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });\n}\n\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nfunction isPromise (val) {\n  return val && typeof val.then === 'function'\n}\n\nfunction assert (condition, msg) {\n  if (!condition) { throw new Error((\"[vuex] \" + msg)) }\n}\n\nvar Module = function Module (rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = { namespaced: { configurable: true } };\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced\n};\n\nModule.prototype.addChild = function addChild (key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild (key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild (key) {\n  return this._children[key]\n};\n\nModule.prototype.update = function update (rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild (fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter (fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction (fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation (fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties( Module.prototype, prototypeAccessors$1 );\n\nvar ModuleCollection = function ModuleCollection (rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get (path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key)\n  }, this.root)\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace (path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '')\n  }, '')\n};\n\nModuleCollection.prototype.update = function update$1 (rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register (path, rawModule, runtime) {\n    var this$1 = this;\n    if ( runtime === void 0 ) runtime = true;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  }\n\n  // register nested modules\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister (path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n  if (!parent.getChild(key).runtime) { return }\n\n  parent.removeChild(key);\n};\n\nfunction update (path, targetModule, newModule) {\n  if (process.env.NODE_ENV !== 'production') {\n    assertRawModule(path, newModule);\n  }\n\n  // update target module\n  targetModule.update(newModule);\n\n  // update nested modules\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\n            \"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" +\n            'manual reload is needed'\n          );\n        }\n        return\n      }\n      update(\n        path.concat(key),\n        targetModule.getChild(key),\n        newModule.modules[key]\n      );\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) { return typeof value === 'function'; },\n  expected: 'function'\n};\n\nvar objectAssert = {\n  assert: function (value) { return typeof value === 'function' ||\n    (typeof value === 'object' && typeof value.handler === 'function'); },\n  expected: 'function or object with \"handler\" function'\n};\n\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule (path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) { return }\n\n    var assertOptions = assertTypes[key];\n\n    forEachValue(rawModule[key], function (value, type) {\n      assert(\n        assertOptions.assert(value),\n        makeAssertionMessage(path, key, type, value, assertOptions.expected)\n      );\n    });\n  });\n}\n\nfunction makeAssertionMessage (path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + (path.join('.')) + \"\\\"\";\n  }\n  buf += \" is \" + (JSON.stringify(value)) + \".\";\n  return buf\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store (options) {\n  var this$1 = this;\n  if ( options === void 0 ) options = {};\n\n  // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];\n  var strict = options.strict; if ( strict === void 0 ) strict = false;\n\n  var state = options.state; if ( state === void 0 ) state = {};\n  if (typeof state === 'function') {\n    state = state() || {};\n  }\n\n  // store internal state\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue();\n\n  // bind commit and dispatch to self\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n  this.dispatch = function boundDispatch (type, payload) {\n    return dispatch.call(store, type, payload)\n  };\n  this.commit = function boundCommit (type, payload, options) {\n    return commit.call(store, type, payload, options)\n  };\n\n  // strict mode\n  this.strict = strict;\n\n  // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n  installModule(this, state, [], this._modules.root);\n\n  // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n  resetStoreVM(this, state);\n\n  // apply plugins\n  plugins.forEach(function (plugin) { return plugin(this$1); });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = { state: { configurable: true } };\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (process.env.NODE_ENV !== 'production') {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit (_type, _payload, _options) {\n    var this$1 = this;\n\n  // check object-style commit\n  var ref = unifyObjectStyle(_type, _payload, _options);\n    var type = ref.type;\n    var payload = ref.payload;\n    var options = ref.options;\n\n  var mutation = { type: type, payload: payload };\n  var entry = this._mutations[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown mutation type: \" + type));\n    }\n    return\n  }\n  this._withCommit(function () {\n    entry.forEach(function commitIterator (handler) {\n      handler(payload);\n    });\n  });\n  this._subscribers.forEach(function (sub) { return sub(mutation, this$1.state); });\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    options && options.silent\n  ) {\n    console.warn(\n      \"[vuex] mutation type: \" + type + \". Silent option has been removed. \" +\n      'Use the filter functionality in the vue-devtools'\n    );\n  }\n};\n\nStore.prototype.dispatch = function dispatch (_type, _payload) {\n    var this$1 = this;\n\n  // check object-style dispatch\n  var ref = unifyObjectStyle(_type, _payload);\n    var type = ref.type;\n    var payload = ref.payload;\n\n  var action = { type: type, payload: payload };\n  var entry = this._actions[type];\n  if (!entry) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] unknown action type: \" + type));\n    }\n    return\n  }\n\n  this._actionSubscribers.forEach(function (sub) { return sub(action, this$1.state); });\n\n  return entry.length > 1\n    ? Promise.all(entry.map(function (handler) { return handler(payload); }))\n    : entry[0](payload)\n};\n\nStore.prototype.subscribe = function subscribe (fn) {\n  return genericSubscribe(fn, this._subscribers)\n};\n\nStore.prototype.subscribeAction = function subscribeAction (fn) {\n  return genericSubscribe(fn, this._actionSubscribers)\n};\n\nStore.prototype.watch = function watch (getter, cb, options) {\n    var this$1 = this;\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)\n};\n\nStore.prototype.replaceState = function replaceState (state) {\n    var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule (path, rawModule, options) {\n    if ( options === void 0 ) options = {};\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState);\n  // reset store to update getters...\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule (path) {\n    var this$1 = this;\n\n  if (typeof path === 'string') { path = [path]; }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate (newOptions) {\n  this._modules.update(newOptions);\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit (fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties( Store.prototype, prototypeAccessors );\n\nfunction genericSubscribe (fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n  return function () {\n    var i = subs.indexOf(fn);\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  }\n}\n\nfunction resetStore (store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state;\n  // init all modules\n  installModule(store, state, [], store._modules.root, true);\n  // reset vm\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM (store, state, hot) {\n  var oldVm = store._vm;\n\n  // bind store public getters\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () { return fn(store); };\n    Object.defineProperty(store.getters, key, {\n      get: function () { return store._vm[key]; },\n      enumerable: true // for local getters\n    });\n  });\n\n  // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent;\n\n  // enable strict mode for new vm\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n    Vue.nextTick(function () { return oldVm.$destroy(); });\n  }\n}\n\nfunction installModule (store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n  var namespace = store._modules.getNamespace(path);\n\n  // register in namespace map\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  }\n\n  // set state\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\nfunction makeLocalContext (store, namespace, path) {\n  var noNamespace = namespace === '';\n\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {\n          console.error((\"[vuex] unknown local action type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      return store.dispatch(type, payload)\n    },\n\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n        if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {\n          console.error((\"[vuex] unknown local mutation type: \" + (args.type) + \", global type: \" + type));\n          return\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  };\n\n  // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace\n        ? function () { return store.getters; }\n        : function () { return makeLocalGetters(store, namespace); }\n    },\n    state: {\n      get: function () { return getNestedState(store.state, path); }\n    }\n  });\n\n  return local\n}\n\nfunction makeLocalGetters (store, namespace) {\n  var gettersProxy = {};\n\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) { return }\n\n    // extract local getter type\n    var localType = type.slice(splitPos);\n\n    // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () { return store.getters[type]; },\n      enumerable: true\n    });\n  });\n\n  return gettersProxy\n}\n\nfunction registerMutation (store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler (payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction (store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler (payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n        throw err\n      })\n    } else {\n      return res\n    }\n  });\n}\n\nfunction registerGetter (store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error((\"[vuex] duplicate getter key: \" + type));\n    }\n    return\n  }\n  store._wrappedGetters[type] = function wrappedGetter (store) {\n    return rawGetter(\n      local.state, // local state\n      local.getters, // local getters\n      store.state, // root state\n      store.getters // root getters\n    )\n  };\n}\n\nfunction enableStrictMode (store) {\n  store._vm.$watch(function () { return this._data.$$state }, function () {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, { deep: true, sync: true });\n}\n\nfunction getNestedState (state, path) {\n  return path.length\n    ? path.reduce(function (state, key) { return state[key]; }, state)\n    : state\n}\n\nfunction unifyObjectStyle (type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof type === 'string', (\"Expects string as the type, but found \" + (typeof type) + \".\"));\n  }\n\n  return { type: type, payload: payload, options: options }\n}\n\nfunction install (_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\n        '[vuex] already installed. Vue.use(Vuex) should be called only once.'\n      );\n    }\n    return\n  }\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState () {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n        if (!module) {\n          return\n        }\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n      return typeof val === 'function'\n        ? val.call(this, state, getters)\n        : state[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var commit = this.$store.commit;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n        if (!module) {\n          return\n        }\n        commit = module.context.commit;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [commit].concat(args))\n        : commit.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    val = namespace + val;\n    res[key] = function mappedGetter () {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return\n      }\n      if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {\n        console.error((\"[vuex] unknown getter: \" + val));\n        return\n      }\n      return this.$store.getters[val]\n    };\n    // mark vuex getter for devtools\n    res[key].vuex = true;\n  });\n  return res\n});\n\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      var dispatch = this.$store.dispatch;\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n        if (!module) {\n          return\n        }\n        dispatch = module.context.dispatch;\n      }\n      return typeof val === 'function'\n        ? val.apply(this, [dispatch].concat(args))\n        : dispatch.apply(this.$store, [val].concat(args))\n    };\n  });\n  return res\n});\n\nvar createNamespacedHelpers = function (namespace) { return ({\n  mapState: mapState.bind(null, namespace),\n  mapGetters: mapGetters.bind(null, namespace),\n  mapMutations: mapMutations.bind(null, namespace),\n  mapActions: mapActions.bind(null, namespace)\n}); };\n\nfunction normalizeMap (map) {\n  return Array.isArray(map)\n    ? map.map(function (key) { return ({ key: key, val: key }); })\n    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })\n}\n\nfunction normalizeNamespace (fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n    return fn(namespace, map)\n  }\n}\n\nfunction getModuleByNamespace (store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n  if (process.env.NODE_ENV !== 'production' && !module) {\n    console.error((\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace));\n  }\n  return module\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\nexport { Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers };\nexport default index_esm;\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","module.exports = RotationalMotorEquation;\n\nvar Vec3 = require('../math/Vec3');\nvar Mat3 = require('../math/Mat3');\nvar Equation = require('./Equation');\n\n/**\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\n * @class RotationalMotorEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} maxForce\n * @extends Equation\n */\nfunction RotationalMotorEquation(bodyA, bodyB, maxForce){\n    maxForce = typeof(maxForce)!=='undefined' ? maxForce : 1e6;\n    Equation.call(this,bodyA,bodyB,-maxForce,maxForce);\n\n    /**\n     * World oriented rotational axis\n     * @property {Vec3} axisA\n     */\n    this.axisA = new Vec3();\n\n    /**\n     * World oriented rotational axis\n     * @property {Vec3} axisB\n     */\n    this.axisB = new Vec3(); // World oriented rotational axis\n\n    /**\n     * Motor velocity\n     * @property {Number} targetVelocity\n     */\n    this.targetVelocity = 0;\n}\n\nRotationalMotorEquation.prototype = new Equation();\nRotationalMotorEquation.prototype.constructor = RotationalMotorEquation;\n\nRotationalMotorEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n\n        axisA = this.axisA,\n        axisB = this.axisB,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // g = 0\n    // gdot = axisA * wi - axisB * wj\n    // gdot = G * W = G * [vi wi vj wj]\n    // =>\n    // G = [0 axisA 0 -axisB]\n\n    GA.rotational.copy(axisA);\n    axisB.negate(GB.rotational);\n\n    var GW = this.computeGW() - this.targetVelocity,\n        GiMf = this.computeGiMf();\n\n    var B = - GW * b - h * GiMf;\n\n    return B;\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","require('./src/controls');\nrequire('./src/loaders');\nrequire('./src/misc');\nrequire('./src/pathfinding');\nrequire('./src/primitives');\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = Material;\n\n/**\n * Defines a physics material.\n * @class Material\n * @constructor\n * @param {object} [options]\n * @author schteppe\n */\nfunction Material(options){\n    var name = '';\n    options = options || {};\n\n    // Backwards compatibility fix\n    if(typeof(options) === 'string'){\n        name = options;\n        options = {};\n    } else if(typeof(options) === 'object') {\n        name = '';\n    }\n\n    /**\n     * @property name\n     * @type {String}\n     */\n    this.name = name;\n\n    /**\n     * material id.\n     * @property id\n     * @type {number}\n     */\n    this.id = Material.idCounter++;\n\n    /**\n     * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} friction\n     */\n    this.friction = typeof(options.friction) !== 'undefined' ? options.friction : -1;\n\n    /**\n     * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n     * @property {number} restitution\n     */\n    this.restitution = typeof(options.restitution) !== 'undefined' ? options.restitution : -1;\n}\n\nMaterial.idCounter = 0;\n","module.exports = ObjectCollisionMatrix;\n\n/**\n * Records what objects are colliding with each other\n * @class ObjectCollisionMatrix\n * @constructor\n */\nfunction ObjectCollisionMatrix() {\n\n    /**\n     * The matrix storage\n     * @property matrix\n     * @type {Object}\n     */\n\tthis.matrix = {};\n}\n\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\nObjectCollisionMatrix.prototype.get = function(i, j) {\n\ti = i.id;\n\tj = j.id;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n\treturn i+'-'+j in this.matrix;\n};\n\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\nObjectCollisionMatrix.prototype.set = function(i, j, value) {\n\ti = i.id;\n\tj = j.id;\n    if (j > i) {\n        var temp = j;\n        j = i;\n        i = temp;\n\t}\n\tif (value) {\n\t\tthis.matrix[i+'-'+j] = true;\n\t}\n\telse {\n\t\tdelete this.matrix[i+'-'+j];\n\t}\n};\n\n/**\n * Empty the matrix\n * @method reset\n */\nObjectCollisionMatrix.prototype.reset = function() {\n\tthis.matrix = {};\n};\n\n/**\n * Set max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\nObjectCollisionMatrix.prototype.setNumObjects = function(n) {\n};\n","/* global performance */\n\nmodule.exports = World;\n\nvar Shape = require('../shapes/Shape');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar GSSolver = require('../solver/GSSolver');\nvar ContactEquation = require('../equations/ContactEquation');\nvar FrictionEquation = require('../equations/FrictionEquation');\nvar Narrowphase = require('./Narrowphase');\nvar EventTarget = require('../utils/EventTarget');\nvar ArrayCollisionMatrix = require('../collision/ArrayCollisionMatrix');\nvar OverlapKeeper = require('../collision/OverlapKeeper');\nvar Material = require('../material/Material');\nvar ContactMaterial = require('../material/ContactMaterial');\nvar Body = require('../objects/Body');\nvar TupleDictionary = require('../utils/TupleDictionary');\nvar RaycastResult = require('../collision/RaycastResult');\nvar AABB = require('../collision/AABB');\nvar Ray = require('../collision/Ray');\nvar NaiveBroadphase = require('../collision/NaiveBroadphase');\n\n/**\n * The physics world\n * @class World\n * @constructor\n * @extends EventTarget\n * @param {object} [options]\n * @param {Vec3} [options.gravity]\n * @param {boolean} [options.allowSleep]\n * @param {Broadphase} [options.broadphase]\n * @param {Solver} [options.solver]\n * @param {boolean} [options.quatNormalizeFast]\n * @param {number} [options.quatNormalizeSkip]\n */\nfunction World(options){\n    options = options || {};\n    EventTarget.apply(this);\n\n    /**\n     * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\n     * @property {Number} dt\n     */\n    this.dt = -1;\n\n    /**\n     * Makes bodies go to sleep when they've been inactive\n     * @property allowSleep\n     * @type {Boolean}\n     * @default false\n     */\n    this.allowSleep = !!options.allowSleep;\n\n    /**\n     * All the current contacts (instances of ContactEquation) in the world.\n     * @property contacts\n     * @type {Array}\n     */\n    this.contacts = [];\n    this.frictionEquations = [];\n\n    /**\n     * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\n     * @property quatNormalizeSkip\n     * @type {Number}\n     * @default 0\n     */\n    this.quatNormalizeSkip = options.quatNormalizeSkip !== undefined ? options.quatNormalizeSkip : 0;\n\n    /**\n     * Set to true to use fast quaternion normalization. It is often enough accurate to use. If bodies tend to explode, set to false.\n     * @property quatNormalizeFast\n     * @type {Boolean}\n     * @see Quaternion.normalizeFast\n     * @see Quaternion.normalize\n     * @default false\n     */\n    this.quatNormalizeFast = options.quatNormalizeFast !== undefined ? options.quatNormalizeFast : false;\n\n    /**\n     * The wall-clock time since simulation start\n     * @property time\n     * @type {Number}\n     */\n    this.time = 0.0;\n\n    /**\n     * Number of timesteps taken since start\n     * @property stepnumber\n     * @type {Number}\n     */\n    this.stepnumber = 0;\n\n    /// Default and last timestep sizes\n    this.default_dt = 1/60;\n\n    this.nextId = 0;\n    /**\n     * @property gravity\n     * @type {Vec3}\n     */\n    this.gravity = new Vec3();\n    if(options.gravity){\n        this.gravity.copy(options.gravity);\n    }\n\n    /**\n     * The broadphase algorithm to use. Default is NaiveBroadphase\n     * @property broadphase\n     * @type {Broadphase}\n     */\n    this.broadphase = options.broadphase !== undefined ? options.broadphase : new NaiveBroadphase();\n\n    /**\n     * @property bodies\n     * @type {Array}\n     */\n    this.bodies = [];\n\n    /**\n     * The solver algorithm to use. Default is GSSolver\n     * @property solver\n     * @type {Solver}\n     */\n    this.solver = options.solver !== undefined ? options.solver : new GSSolver();\n\n    /**\n     * @property constraints\n     * @type {Array}\n     */\n    this.constraints = [];\n\n    /**\n     * @property narrowphase\n     * @type {Narrowphase}\n     */\n    this.narrowphase = new Narrowphase(this);\n\n    /**\n     * @property {ArrayCollisionMatrix} collisionMatrix\n\t * @type {ArrayCollisionMatrix}\n\t */\n\tthis.collisionMatrix = new ArrayCollisionMatrix();\n\n    /**\n     * CollisionMatrix from the previous step.\n     * @property {ArrayCollisionMatrix} collisionMatrixPrevious\n\t * @type {ArrayCollisionMatrix}\n\t */\n\tthis.collisionMatrixPrevious = new ArrayCollisionMatrix();\n\n    this.bodyOverlapKeeper = new OverlapKeeper();\n    this.shapeOverlapKeeper = new OverlapKeeper();\n\n    /**\n     * All added materials\n     * @property materials\n     * @type {Array}\n     */\n    this.materials = [];\n\n    /**\n     * @property contactmaterials\n     * @type {Array}\n     */\n    this.contactmaterials = [];\n\n    /**\n     * Used to look up a ContactMaterial given two instances of Material.\n     * @property {TupleDictionary} contactMaterialTable\n     */\n    this.contactMaterialTable = new TupleDictionary();\n\n    this.defaultMaterial = new Material(\"default\");\n\n    /**\n     * This contact material is used if no suitable contactmaterial is found for a contact.\n     * @property defaultContactMaterial\n     * @type {ContactMaterial}\n     */\n    this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, { friction: 0.3, restitution: 0.0 });\n\n    /**\n     * @property doProfiling\n     * @type {Boolean}\n     */\n    this.doProfiling = false;\n\n    /**\n     * @property profile\n     * @type {Object}\n     */\n    this.profile = {\n        solve:0,\n        makeContactConstraints:0,\n        broadphase:0,\n        integrate:0,\n        narrowphase:0,\n    };\n\n    /**\n     * Time accumulator for interpolation. See http://gafferongames.com/game-physics/fix-your-timestep/\n     * @property {Number} accumulator\n     */\n    this.accumulator = 0;\n\n    /**\n     * @property subsystems\n     * @type {Array}\n     */\n    this.subsystems = [];\n\n    /**\n     * Dispatched after a body has been added to the world.\n     * @event addBody\n     * @param {Body} body The body that has been added to the world.\n     */\n    this.addBodyEvent = {\n        type:\"addBody\",\n        body : null\n    };\n\n    /**\n     * Dispatched after a body has been removed from the world.\n     * @event removeBody\n     * @param {Body} body The body that has been removed from the world.\n     */\n    this.removeBodyEvent = {\n        type:\"removeBody\",\n        body : null\n    };\n\n    this.idToBodyMap = {};\n\n    this.broadphase.setWorld(this);\n}\nWorld.prototype = new EventTarget();\n\n// Temp stuff\nvar tmpAABB1 = new AABB();\nvar tmpArray1 = [];\nvar tmpRay = new Ray();\n\n/**\n * Get the contact material between materials m1 and m2\n * @method getContactMaterial\n * @param {Material} m1\n * @param {Material} m2\n * @return {ContactMaterial} The contact material if it was found.\n */\nWorld.prototype.getContactMaterial = function(m1,m2){\n    return this.contactMaterialTable.get(m1.id,m2.id); //this.contactmaterials[this.mats2cmat[i+j*this.materials.length]];\n};\n\n/**\n * Get number of objects in the world.\n * @method numObjects\n * @return {Number}\n * @deprecated\n */\nWorld.prototype.numObjects = function(){\n    return this.bodies.length;\n};\n\n/**\n * Store old collision state info\n * @method collisionMatrixTick\n */\nWorld.prototype.collisionMatrixTick = function(){\n\tvar temp = this.collisionMatrixPrevious;\n\tthis.collisionMatrixPrevious = this.collisionMatrix;\n\tthis.collisionMatrix = temp;\n\tthis.collisionMatrix.reset();\n\n    this.bodyOverlapKeeper.tick();\n    this.shapeOverlapKeeper.tick();\n};\n\n/**\n * Add a rigid body to the simulation.\n * @method add\n * @param {Body} body\n * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\n * @todo Adding an array of bodies should be possible. This would save some loops too\n * @deprecated Use .addBody instead\n */\nWorld.prototype.add = World.prototype.addBody = function(body){\n    if(this.bodies.indexOf(body) !== -1){\n        return;\n    }\n    body.index = this.bodies.length;\n    this.bodies.push(body);\n    body.world = this;\n    body.initPosition.copy(body.position);\n    body.initVelocity.copy(body.velocity);\n    body.timeLastSleepy = this.time;\n    if(body instanceof Body){\n        body.initAngularVelocity.copy(body.angularVelocity);\n        body.initQuaternion.copy(body.quaternion);\n    }\n\tthis.collisionMatrix.setNumObjects(this.bodies.length);\n    this.addBodyEvent.body = body;\n    this.idToBodyMap[body.id] = body;\n    this.dispatchEvent(this.addBodyEvent);\n};\n\n/**\n * Add a constraint to the simulation.\n * @method addConstraint\n * @param {Constraint} c\n */\nWorld.prototype.addConstraint = function(c){\n    this.constraints.push(c);\n};\n\n/**\n * Removes a constraint\n * @method removeConstraint\n * @param {Constraint} c\n */\nWorld.prototype.removeConstraint = function(c){\n    var idx = this.constraints.indexOf(c);\n    if(idx!==-1){\n        this.constraints.splice(idx,1);\n    }\n};\n\n/**\n * Raycast test\n * @method rayTest\n * @param {Vec3} from\n * @param {Vec3} to\n * @param {RaycastResult} result\n * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\n */\nWorld.prototype.rayTest = function(from, to, result){\n    if(result instanceof RaycastResult){\n        // Do raycastclosest\n        this.raycastClosest(from, to, {\n            skipBackfaces: true\n        }, result);\n    } else {\n        // Do raycastAll\n        this.raycastAll(from, to, {\n            skipBackfaces: true\n        }, result);\n    }\n};\n\n/**\n * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\n * @method raycastAll\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {Function} callback\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastAll = function(from, to, options, callback){\n    options.mode = Ray.ALL;\n    options.from = from;\n    options.to = to;\n    options.callback = callback;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\n * @method raycastAny\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastAny = function(from, to, options, result){\n    options.mode = Ray.ANY;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Ray cast, and return information of the closest hit.\n * @method raycastClosest\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\nWorld.prototype.raycastClosest = function(from, to, options, result){\n    options.mode = Ray.CLOSEST;\n    options.from = from;\n    options.to = to;\n    options.result = result;\n    return tmpRay.intersectWorld(this, options);\n};\n\n/**\n * Remove a rigid body from the simulation.\n * @method remove\n * @param {Body} body\n * @deprecated Use .removeBody instead\n */\nWorld.prototype.remove = function(body){\n    body.world = null;\n    var n = this.bodies.length - 1,\n        bodies = this.bodies,\n        idx = bodies.indexOf(body);\n    if(idx !== -1){\n        bodies.splice(idx, 1); // Todo: should use a garbage free method\n\n        // Recompute index\n        for(var i=0; i!==bodies.length; i++){\n            bodies[i].index = i;\n        }\n\n        this.collisionMatrix.setNumObjects(n);\n        this.removeBodyEvent.body = body;\n        delete this.idToBodyMap[body.id];\n        this.dispatchEvent(this.removeBodyEvent);\n    }\n};\n\n/**\n * Remove a rigid body from the simulation.\n * @method removeBody\n * @param {Body} body\n */\nWorld.prototype.removeBody = World.prototype.remove;\n\nWorld.prototype.getBodyById = function(id){\n    return this.idToBodyMap[id];\n};\n\n// TODO Make a faster map\nWorld.prototype.getShapeById = function(id){\n    var bodies = this.bodies;\n    for(var i=0, bl = bodies.length; i<bl; i++){\n        var shapes = bodies[i].shapes;\n        for (var j = 0, sl = shapes.length; j < sl; j++) {\n            var shape = shapes[j];\n            if(shape.id === id){\n                return shape;\n            }\n        }\n    }\n};\n\n/**\n * Adds a material to the World.\n * @method addMaterial\n * @param {Material} m\n * @todo Necessary?\n */\nWorld.prototype.addMaterial = function(m){\n    this.materials.push(m);\n};\n\n/**\n * Adds a contact material to the World\n * @method addContactMaterial\n * @param {ContactMaterial} cmat\n */\nWorld.prototype.addContactMaterial = function(cmat) {\n\n    // Add contact material\n    this.contactmaterials.push(cmat);\n\n    // Add current contact material to the material table\n    this.contactMaterialTable.set(cmat.materials[0].id,cmat.materials[1].id,cmat);\n};\n\n// performance.now()\nif(typeof performance === 'undefined'){\n    performance = {};\n}\nif(!performance.now){\n    var nowOffset = Date.now();\n    if (performance.timing && performance.timing.navigationStart){\n        nowOffset = performance.timing.navigationStart;\n    }\n    performance.now = function(){\n        return Date.now() - nowOffset;\n    };\n}\n\nvar step_tmp1 = new Vec3();\n\n/**\n * Step the physics world forward in time.\n *\n * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\n *\n * @method step\n * @param {Number} dt                       The fixed time step size to use.\n * @param {Number} [timeSinceLastCalled]    The time elapsed since the function was last called.\n * @param {Number} [maxSubSteps=10]         Maximum number of fixed steps to take per function call.\n *\n * @example\n *     // fixed timestepping without interpolation\n *     world.step(1/60);\n *\n * @see http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World\n */\nWorld.prototype.step = function(dt, timeSinceLastCalled, maxSubSteps){\n    maxSubSteps = maxSubSteps || 10;\n    timeSinceLastCalled = timeSinceLastCalled || 0;\n\n    if(timeSinceLastCalled === 0){ // Fixed, simple stepping\n\n        this.internalStep(dt);\n\n        // Increment time\n        this.time += dt;\n\n    } else {\n\n        this.accumulator += timeSinceLastCalled;\n        var substeps = 0;\n        while (this.accumulator >= dt && substeps < maxSubSteps) {\n            // Do fixed steps to catch up\n            this.internalStep(dt);\n            this.accumulator -= dt;\n            substeps++;\n        }\n\n        var t = (this.accumulator % dt) / dt;\n        for(var j=0; j !== this.bodies.length; j++){\n            var b = this.bodies[j];\n            b.previousPosition.lerp(b.position, t, b.interpolatedPosition);\n            b.previousQuaternion.slerp(b.quaternion, t, b.interpolatedQuaternion);\n            b.previousQuaternion.normalize();\n        }\n        this.time += timeSinceLastCalled;\n    }\n};\n\nvar\n    /**\n     * Dispatched after the world has stepped forward in time.\n     * @event postStep\n     */\n    World_step_postStepEvent = {type:\"postStep\"}, // Reusable event objects to save memory\n    /**\n     * Dispatched before the world steps forward in time.\n     * @event preStep\n     */\n    World_step_preStepEvent = {type:\"preStep\"},\n    World_step_collideEvent = {type:Body.COLLIDE_EVENT_NAME, body:null, contact:null },\n    World_step_oldContacts = [], // Pools for unused objects\n    World_step_frictionEquationPool = [],\n    World_step_p1 = [], // Reusable arrays for collision pairs\n    World_step_p2 = [],\n    World_step_gvec = new Vec3(), // Temporary vectors and quats\n    World_step_vi = new Vec3(),\n    World_step_vj = new Vec3(),\n    World_step_wi = new Vec3(),\n    World_step_wj = new Vec3(),\n    World_step_t1 = new Vec3(),\n    World_step_t2 = new Vec3(),\n    World_step_rixn = new Vec3(),\n    World_step_rjxn = new Vec3(),\n    World_step_step_q = new Quaternion(),\n    World_step_step_w = new Quaternion(),\n    World_step_step_wq = new Quaternion(),\n    invI_tau_dt = new Vec3();\nWorld.prototype.internalStep = function(dt){\n    this.dt = dt;\n\n    var world = this,\n        that = this,\n        contacts = this.contacts,\n        p1 = World_step_p1,\n        p2 = World_step_p2,\n        N = this.numObjects(),\n        bodies = this.bodies,\n        solver = this.solver,\n        gravity = this.gravity,\n        doProfiling = this.doProfiling,\n        profile = this.profile,\n        DYNAMIC = Body.DYNAMIC,\n        profilingStart,\n        constraints = this.constraints,\n        frictionEquationPool = World_step_frictionEquationPool,\n        gnorm = gravity.norm(),\n        gx = gravity.x,\n        gy = gravity.y,\n        gz = gravity.z,\n        i=0;\n\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n\n    // Add gravity to all objects\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.type === DYNAMIC){ // Only for dynamic bodies\n            var f = bi.force, m = bi.mass;\n            f.x += m*gx;\n            f.y += m*gy;\n            f.z += m*gz;\n        }\n    }\n\n    // Update subsystems\n    for(var i=0, Nsubsystems=this.subsystems.length; i!==Nsubsystems; i++){\n        this.subsystems[i].update();\n    }\n\n    // Collision detection\n    if(doProfiling){ profilingStart = performance.now(); }\n    p1.length = 0; // Clean up pair arrays from last step\n    p2.length = 0;\n    this.broadphase.collisionPairs(this,p1,p2);\n    if(doProfiling){ profile.broadphase = performance.now() - profilingStart; }\n\n    // Remove constrained pairs with collideConnected == false\n    var Nconstraints = constraints.length;\n    for(i=0; i!==Nconstraints; i++){\n        var c = constraints[i];\n        if(!c.collideConnected){\n            for(var j = p1.length-1; j>=0; j-=1){\n                if( (c.bodyA === p1[j] && c.bodyB === p2[j]) ||\n                    (c.bodyB === p1[j] && c.bodyA === p2[j])){\n                    p1.splice(j, 1);\n                    p2.splice(j, 1);\n                }\n            }\n        }\n    }\n\n    this.collisionMatrixTick();\n\n    // Generate contacts\n    if(doProfiling){ profilingStart = performance.now(); }\n    var oldcontacts = World_step_oldContacts;\n    var NoldContacts = contacts.length;\n\n    for(i=0; i!==NoldContacts; i++){\n        oldcontacts.push(contacts[i]);\n    }\n    contacts.length = 0;\n\n    // Transfer FrictionEquation from current list to the pool for reuse\n    var NoldFrictionEquations = this.frictionEquations.length;\n    for(i=0; i!==NoldFrictionEquations; i++){\n        frictionEquationPool.push(this.frictionEquations[i]);\n    }\n    this.frictionEquations.length = 0;\n\n    this.narrowphase.getContacts(\n        p1,\n        p2,\n        this,\n        contacts,\n        oldcontacts, // To be reused\n        this.frictionEquations,\n        frictionEquationPool\n    );\n\n    if(doProfiling){\n        profile.narrowphase = performance.now() - profilingStart;\n    }\n\n    // Loop over all collisions\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n\n    // Add all friction eqs\n    for (var i = 0; i < this.frictionEquations.length; i++) {\n        solver.addEquation(this.frictionEquations[i]);\n    }\n\n    var ncontacts = contacts.length;\n    for(var k=0; k!==ncontacts; k++){\n\n        // Current contact\n        var c = contacts[k];\n\n        // Get current collision indeces\n        var bi = c.bi,\n            bj = c.bj,\n            si = c.si,\n            sj = c.sj;\n\n        // Get collision properties\n        var cm;\n        if(bi.material && bj.material){\n            cm = this.getContactMaterial(bi.material,bj.material) || this.defaultContactMaterial;\n        } else {\n            cm = this.defaultContactMaterial;\n        }\n\n        // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n        var mu = cm.friction;\n        // c.restitution = cm.restitution;\n\n        // If friction or restitution were specified in the material, use them\n        if(bi.material && bj.material){\n            if(bi.material.friction >= 0 && bj.material.friction >= 0){\n                mu = bi.material.friction * bj.material.friction;\n            }\n\n            if(bi.material.restitution >= 0 && bj.material.restitution >= 0){\n                c.restitution = bi.material.restitution * bj.material.restitution;\n            }\n        }\n\n\t\t// c.setSpookParams(\n  //           cm.contactEquationStiffness,\n  //           cm.contactEquationRelaxation,\n  //           dt\n  //       );\n\n\t\tsolver.addEquation(c);\n\n\t\t// // Add friction constraint equation\n\t\t// if(mu > 0){\n\n\t\t// \t// Create 2 tangent equations\n\t\t// \tvar mug = mu * gnorm;\n\t\t// \tvar reducedMass = (bi.invMass + bj.invMass);\n\t\t// \tif(reducedMass > 0){\n\t\t// \t\treducedMass = 1/reducedMass;\n\t\t// \t}\n\t\t// \tvar pool = frictionEquationPool;\n\t\t// \tvar c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n\t\t// \tvar c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n\t\t// \tthis.frictionEquations.push(c1, c2);\n\n\t\t// \tc1.bi = c2.bi = bi;\n\t\t// \tc1.bj = c2.bj = bj;\n\t\t// \tc1.minForce = c2.minForce = -mug*reducedMass;\n\t\t// \tc1.maxForce = c2.maxForce = mug*reducedMass;\n\n\t\t// \t// Copy over the relative vectors\n\t\t// \tc1.ri.copy(c.ri);\n\t\t// \tc1.rj.copy(c.rj);\n\t\t// \tc2.ri.copy(c.ri);\n\t\t// \tc2.rj.copy(c.rj);\n\n\t\t// \t// Construct tangents\n\t\t// \tc.ni.tangents(c1.t, c2.t);\n\n  //           // Set spook params\n  //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n  //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n\n  //           c1.enabled = c2.enabled = c.enabled;\n\n\t\t// \t// Add equations to solver\n\t\t// \tsolver.addEquation(c1);\n\t\t// \tsolver.addEquation(c2);\n\t\t// }\n\n        if( bi.allowSleep &&\n            bi.type === Body.DYNAMIC &&\n            bi.sleepState  === Body.SLEEPING &&\n            bj.sleepState  === Body.AWAKE &&\n            bj.type !== Body.STATIC\n        ){\n            var speedSquaredB = bj.velocity.norm2() + bj.angularVelocity.norm2();\n            var speedLimitSquaredB = Math.pow(bj.sleepSpeedLimit,2);\n            if(speedSquaredB >= speedLimitSquaredB*2){\n                bi._wakeUpAfterNarrowphase = true;\n            }\n        }\n\n        if( bj.allowSleep &&\n            bj.type === Body.DYNAMIC &&\n            bj.sleepState  === Body.SLEEPING &&\n            bi.sleepState  === Body.AWAKE &&\n            bi.type !== Body.STATIC\n        ){\n            var speedSquaredA = bi.velocity.norm2() + bi.angularVelocity.norm2();\n            var speedLimitSquaredA = Math.pow(bi.sleepSpeedLimit,2);\n            if(speedSquaredA >= speedLimitSquaredA*2){\n                bj._wakeUpAfterNarrowphase = true;\n            }\n        }\n\n        // Now we know that i and j are in contact. Set collision matrix state\n\t\tthis.collisionMatrix.set(bi, bj, true);\n\n        if (!this.collisionMatrixPrevious.get(bi, bj)) {\n            // First contact!\n            // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\n            World_step_collideEvent.body = bj;\n            World_step_collideEvent.contact = c;\n            bi.dispatchEvent(World_step_collideEvent);\n\n            World_step_collideEvent.body = bi;\n            bj.dispatchEvent(World_step_collideEvent);\n        }\n\n        this.bodyOverlapKeeper.set(bi.id, bj.id);\n        this.shapeOverlapKeeper.set(si.id, sj.id);\n    }\n\n    this.emitContactEvents();\n\n    if(doProfiling){\n        profile.makeContactConstraints = performance.now() - profilingStart;\n        profilingStart = performance.now();\n    }\n\n    // Wake up bodies\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi._wakeUpAfterNarrowphase){\n            bi.wakeUp();\n            bi._wakeUpAfterNarrowphase = false;\n        }\n    }\n\n    // Add user-added constraints\n    var Nconstraints = constraints.length;\n    for(i=0; i!==Nconstraints; i++){\n        var c = constraints[i];\n        c.update();\n        for(var j=0, Neq=c.equations.length; j!==Neq; j++){\n            var eq = c.equations[j];\n            solver.addEquation(eq);\n        }\n    }\n\n    // Solve the constrained system\n    solver.solve(dt,this);\n\n    if(doProfiling){\n        profile.solve = performance.now() - profilingStart;\n    }\n\n    // Remove all contacts from solver\n    solver.removeAllEquations();\n\n    // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\n    var pow = Math.pow;\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.type & DYNAMIC){ // Only for dynamic bodies\n            var ld = pow(1.0 - bi.linearDamping,dt);\n            var v = bi.velocity;\n            v.mult(ld,v);\n            var av = bi.angularVelocity;\n            if(av){\n                var ad = pow(1.0 - bi.angularDamping,dt);\n                av.mult(ad,av);\n            }\n        }\n    }\n\n    this.dispatchEvent(World_step_preStepEvent);\n\n    // Invoke pre-step callbacks\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        if(bi.preStep){\n            bi.preStep.call(bi);\n        }\n    }\n\n    // Leap frog\n    // vnew = v + h*f/m\n    // xnew = x + h*vnew\n    if(doProfiling){\n        profilingStart = performance.now();\n    }\n    var stepnumber = this.stepnumber;\n    var quatNormalize = stepnumber % (this.quatNormalizeSkip + 1) === 0;\n    var quatNormalizeFast = this.quatNormalizeFast;\n\n    for(i=0; i!==N; i++){\n        bodies[i].integrate(dt, quatNormalize, quatNormalizeFast);\n    }\n    this.clearForces();\n\n    this.broadphase.dirty = true;\n\n    if(doProfiling){\n        profile.integrate = performance.now() - profilingStart;\n    }\n\n    // Update world time\n    this.time += dt;\n    this.stepnumber += 1;\n\n    this.dispatchEvent(World_step_postStepEvent);\n\n    // Invoke post-step callbacks\n    for(i=0; i!==N; i++){\n        var bi = bodies[i];\n        var postStep = bi.postStep;\n        if(postStep){\n            postStep.call(bi);\n        }\n    }\n\n    // Sleeping update\n    if(this.allowSleep){\n        for(i=0; i!==N; i++){\n            bodies[i].sleepTick(this.time);\n        }\n    }\n};\n\nWorld.prototype.emitContactEvents = (function(){\n    var additions = [];\n    var removals = [];\n    var beginContactEvent = {\n        type: 'beginContact',\n        bodyA: null,\n        bodyB: null\n    };\n    var endContactEvent = {\n        type: 'endContact',\n        bodyA: null,\n        bodyB: null\n    };\n    var beginShapeContactEvent = {\n        type: 'beginShapeContact',\n        bodyA: null,\n        bodyB: null,\n        shapeA: null,\n        shapeB: null\n    };\n    var endShapeContactEvent = {\n        type: 'endShapeContact',\n        bodyA: null,\n        bodyB: null,\n        shapeA: null,\n        shapeB: null\n    };\n    return function(){\n        var hasBeginContact = this.hasAnyEventListener('beginContact');\n        var hasEndContact = this.hasAnyEventListener('endContact');\n\n        if(hasBeginContact || hasEndContact){\n            this.bodyOverlapKeeper.getDiff(additions, removals);\n        }\n\n        if(hasBeginContact){\n            for (var i = 0, l = additions.length; i < l; i += 2) {\n                beginContactEvent.bodyA = this.getBodyById(additions[i]);\n                beginContactEvent.bodyB = this.getBodyById(additions[i+1]);\n                this.dispatchEvent(beginContactEvent);\n            }\n            beginContactEvent.bodyA = beginContactEvent.bodyB = null;\n        }\n\n        if(hasEndContact){\n            for (var i = 0, l = removals.length; i < l; i += 2) {\n                endContactEvent.bodyA = this.getBodyById(removals[i]);\n                endContactEvent.bodyB = this.getBodyById(removals[i+1]);\n                this.dispatchEvent(endContactEvent);\n            }\n            endContactEvent.bodyA = endContactEvent.bodyB = null;\n        }\n\n        additions.length = removals.length = 0;\n\n        var hasBeginShapeContact = this.hasAnyEventListener('beginShapeContact');\n        var hasEndShapeContact = this.hasAnyEventListener('endShapeContact');\n\n        if(hasBeginShapeContact || hasEndShapeContact){\n            this.shapeOverlapKeeper.getDiff(additions, removals);\n        }\n\n        if(hasBeginShapeContact){\n            for (var i = 0, l = additions.length; i < l; i += 2) {\n                var shapeA = this.getShapeById(additions[i]);\n                var shapeB = this.getShapeById(additions[i+1]);\n                beginShapeContactEvent.shapeA = shapeA;\n                beginShapeContactEvent.shapeB = shapeB;\n                beginShapeContactEvent.bodyA = shapeA.body;\n                beginShapeContactEvent.bodyB = shapeB.body;\n                this.dispatchEvent(beginShapeContactEvent);\n            }\n            beginShapeContactEvent.bodyA = beginShapeContactEvent.bodyB = beginShapeContactEvent.shapeA = beginShapeContactEvent.shapeB = null;\n        }\n\n        if(hasEndShapeContact){\n            for (var i = 0, l = removals.length; i < l; i += 2) {\n                var shapeA = this.getShapeById(removals[i]);\n                var shapeB = this.getShapeById(removals[i+1]);\n                endShapeContactEvent.shapeA = shapeA;\n                endShapeContactEvent.shapeB = shapeB;\n                endShapeContactEvent.bodyA = shapeA.body;\n                endShapeContactEvent.bodyB = shapeB.body;\n                this.dispatchEvent(endShapeContactEvent);\n            }\n            endShapeContactEvent.bodyA = endShapeContactEvent.bodyB = endShapeContactEvent.shapeA = endShapeContactEvent.shapeB = null;\n        }\n\n    };\n})();\n\n/**\n * Sets all body forces in the world to zero.\n * @method clearForces\n */\nWorld.prototype.clearForces = function(){\n    var bodies = this.bodies;\n    var N = bodies.length;\n    for(var i=0; i !== N; i++){\n        var b = bodies[i],\n            force = b.force,\n            tau = b.torque;\n\n        b.force.set(0,0,0);\n        b.torque.set(0,0,0);\n    }\n};\n","module.exports = GSSolver;\n\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Solver = require('./Solver');\n\n/**\n * Constraint equation Gauss-Seidel solver.\n * @class GSSolver\n * @constructor\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @author schteppe / https://github.com/schteppe\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n * @extends Solver\n */\nfunction GSSolver(){\n    Solver.call(this);\n\n    /**\n     * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n     * @property iterations\n     * @type {Number}\n     * @todo write more about solver and iterations in the wiki\n     */\n    this.iterations = 10;\n\n    /**\n     * When tolerance is reached, the system is assumed to be converged.\n     * @property tolerance\n     * @type {Number}\n     */\n    this.tolerance = 1e-7;\n}\nGSSolver.prototype = new Solver();\n\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\nvar GSSolver_solve_invCs = [];\nvar GSSolver_solve_Bs = [];\nGSSolver.prototype.solve = function(dt,world){\n    var iter = 0,\n        maxIter = this.iterations,\n        tolSquared = this.tolerance*this.tolerance,\n        equations = this.equations,\n        Neq = equations.length,\n        bodies = world.bodies,\n        Nbodies = bodies.length,\n        h = dt,\n        q, B, invC, deltalambda, deltalambdaTot, GWlambda, lambdaj;\n\n    // Update solve mass\n    if(Neq !== 0){\n        for(var i=0; i!==Nbodies; i++){\n            bodies[i].updateSolveMassProperties();\n        }\n    }\n\n    // Things that does not change during iteration can be computed once\n    var invCs = GSSolver_solve_invCs,\n        Bs = GSSolver_solve_Bs,\n        lambda = GSSolver_solve_lambda;\n    invCs.length = Neq;\n    Bs.length = Neq;\n    lambda.length = Neq;\n    for(var i=0; i!==Neq; i++){\n        var c = equations[i];\n        lambda[i] = 0.0;\n        Bs[i] = c.computeB(h);\n        invCs[i] = 1.0 / c.computeC();\n    }\n\n    if(Neq !== 0){\n\n        // Reset vlambda\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                vlambda=b.vlambda,\n                wlambda=b.wlambda;\n            vlambda.set(0,0,0);\n            wlambda.set(0,0,0);\n        }\n\n        // Iterate over equations\n        for(iter=0; iter!==maxIter; iter++){\n\n            // Accumulate the total error for each iteration.\n            deltalambdaTot = 0.0;\n\n            for(var j=0; j!==Neq; j++){\n\n                var c = equations[j];\n\n                // Compute iteration\n                B = Bs[j];\n                invC = invCs[j];\n                lambdaj = lambda[j];\n                GWlambda = c.computeGWlambda();\n                deltalambda = invC * ( B - GWlambda - c.eps * lambdaj );\n\n                // Clamp if we are not within the min/max interval\n                if(lambdaj + deltalambda < c.minForce){\n                    deltalambda = c.minForce - lambdaj;\n                } else if(lambdaj + deltalambda > c.maxForce){\n                    deltalambda = c.maxForce - lambdaj;\n                }\n                lambda[j] += deltalambda;\n\n                deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n                c.addToWlambda(deltalambda);\n            }\n\n            // If the total error is small enough - stop iterate\n            if(deltalambdaTot*deltalambdaTot < tolSquared){\n                break;\n            }\n        }\n\n        // Add result to velocity\n        for(var i=0; i!==Nbodies; i++){\n            var b=bodies[i],\n                v=b.velocity,\n                w=b.angularVelocity;\n\n            b.vlambda.vmul(b.linearFactor, b.vlambda);\n            v.vadd(b.vlambda, v);\n\n            b.wlambda.vmul(b.angularFactor, b.wlambda);\n            w.vadd(b.wlambda, w);\n        }\n\n        // Set the .multiplier property of each equation\n        var l = equations.length;\n        var invDt = 1 / h;\n        while(l--){\n            equations[l].multiplier = lambda[l] * invDt;\n        }\n    }\n\n    return iter;\n};\n","const LoopMode = {\n  once: THREE.LoopOnce,\n  repeat: THREE.LoopRepeat,\n  pingpong: THREE.LoopPingPong\n};\n\n/**\n * animation-mixer\n *\n * Player for animation clips. Intended to be compatible with any model format that supports\n * skeletal or morph animations through THREE.AnimationMixer.\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\n */\nmodule.exports = AFRAME.registerComponent('animation-mixer', {\n  schema: {\n    clip:  {default: '*'},\n    duration: {default: 0},\n    crossFadeDuration: {default: 0},\n    loop: {default: 'repeat', oneOf: Object.keys(LoopMode)},\n    repetitions: {default: Infinity, min: 0}\n  },\n\n  init: function () {\n    /** @type {THREE.Mesh} */\n    this.model = null;\n    /** @type {THREE.AnimationMixer} */\n    this.mixer = null;\n    /** @type {Array<THREE.AnimationAction>} */\n    this.activeActions = [];\n\n    const model = this.el.getObject3D('mesh');\n\n    if (model) {\n      this.load(model);\n    } else {\n      this.el.addEventListener('model-loaded', (e) => {\n        this.load(e.detail.model);\n      });\n    }\n  },\n\n  load: function (model) {\n    const el = this.el;\n    this.model = model;\n    this.mixer = new THREE.AnimationMixer(model);\n    this.mixer.addEventListener('loop', (e) => {\n      el.emit('animation-loop', {action: e.action, loopDelta: e.loopDelta});\n    });\n    this.mixer.addEventListener('finished', (e) => {\n      el.emit('animation-finished', {action: e.action, direction: e.direction});\n    });\n    if (this.data.clip) this.update({});\n  },\n\n  remove: function () {\n    if (this.mixer) this.mixer.stopAllAction();\n  },\n\n  update: function (previousData) {\n    if (!previousData) return;\n\n    this.stopAction();\n\n    if (this.data.clip) {\n      this.playAction();\n    }\n  },\n\n  stopAction: function () {\n    const data = this.data;\n    for (let i = 0; i < this.activeActions.length; i++) {\n      data.crossFadeDuration\n        ? this.activeActions[i].fadeOut(data.crossFadeDuration)\n        : this.activeActions[i].stop();\n    }\n    this.activeActions.length = 0;\n  },\n\n  playAction: function () {\n    if (!this.mixer) return;\n\n    const model = this.model,\n        data = this.data,\n        clips = model.animations || (model.geometry || {}).animations || [];\n\n    if (!clips.length) return;\n\n    const re = wildcardToRegExp(data.clip);\n\n    for (let clip, i = 0; (clip = clips[i]); i++) {\n      if (clip.name.match(re)) {\n        const action = this.mixer.clipAction(clip, model);\n        action.enabled = true;\n        if (data.duration) action.setDuration(data.duration);\n        action\n          .setLoop(LoopMode[data.loop], data.repetitions)\n          .fadeIn(data.crossFadeDuration)\n          .play();\n        this.activeActions.push(action);\n      }\n    }\n  },\n\n  tick: function (t, dt) {\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\n  }\n});\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n */\nfunction wildcardToRegExp (s) {\n  return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n */\nfunction regExpEscape (s) {\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n","class Utils {\n\n  static computeCentroids (geometry) {\n    var f, fl, face;\n\n    for ( f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\n\n      face = geometry.faces[ f ];\n      face.centroid = new THREE.Vector3( 0, 0, 0 );\n\n      face.centroid.add( geometry.vertices[ face.a ] );\n      face.centroid.add( geometry.vertices[ face.b ] );\n      face.centroid.add( geometry.vertices[ face.c ] );\n      face.centroid.divideScalar( 3 );\n\n    }\n  }\n\n  static roundNumber (number, decimals) {\n    var newnumber = Number(number + '').toFixed(parseInt(decimals));\n    return parseFloat(newnumber);\n  }\n\n  static sample (list) {\n    return list[Math.floor(Math.random() * list.length)];\n  }\n\n  static mergeVertexIds (aList, bList) {\n\n    var sharedVertices = [];\n\n    aList.forEach((vID) => {\n      if (bList.indexOf(vID) >= 0) {\n        sharedVertices.push(vID);\n      }\n    });\n\n    if (sharedVertices.length < 2) return [];\n\n    if (sharedVertices.includes(aList[0]) && sharedVertices.includes(aList[aList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      aList.push(aList.shift());\n    }\n\n    if (sharedVertices.includes(bList[0]) && sharedVertices.includes(bList[bList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      bList.push(bList.shift());\n    }\n\n    // Again!\n    sharedVertices = [];\n\n    aList.forEach((vId) => {\n      if (bList.includes(vId)) {\n        sharedVertices.push(vId);\n      }\n    });\n\n    var clockwiseMostSharedVertex = sharedVertices[1];\n    var counterClockwiseMostSharedVertex = sharedVertices[0];\n\n\n    var cList = aList.slice();\n    while (cList[0] !== clockwiseMostSharedVertex) {\n      cList.push(cList.shift());\n    }\n\n    var c = 0;\n\n    var temp = bList.slice();\n    while (temp[0] !== counterClockwiseMostSharedVertex) {\n      temp.push(temp.shift());\n\n      if (c++ > 10) throw new Error('Unexpected state');\n    }\n\n    // Shave\n    temp.shift();\n    temp.pop();\n\n    cList = cList.concat(temp);\n\n    return cList;\n  }\n\n  static setPolygonCentroid (polygon, navigationMesh) {\n    var sum = new THREE.Vector3();\n\n    var vertices = navigationMesh.vertices;\n\n    polygon.vertexIds.forEach((vId) => {\n      sum.add(vertices[vId]);\n    });\n\n    sum.divideScalar(polygon.vertexIds.length);\n\n    polygon.centroid.copy(sum);\n  }\n\n  static cleanPolygon (polygon, navigationMesh) {\n\n    var newVertexIds = [];\n\n    var vertices = navigationMesh.vertices;\n\n    for (var i = 0; i < polygon.vertexIds.length; i++) {\n\n      var vertex = vertices[polygon.vertexIds[i]];\n\n      var nextVertexId, previousVertexId;\n      var nextVertex, previousVertex;\n\n      if (i === 0) {\n        nextVertexId = polygon.vertexIds[1];\n        previousVertexId = polygon.vertexIds[polygon.vertexIds.length - 1];\n      } else if (i === polygon.vertexIds.length - 1) {\n        nextVertexId = polygon.vertexIds[0];\n        previousVertexId = polygon.vertexIds[polygon.vertexIds.length - 2];\n      } else {\n        nextVertexId = polygon.vertexIds[i + 1];\n        previousVertexId = polygon.vertexIds[i - 1];\n      }\n\n      nextVertex = vertices[nextVertexId];\n      previousVertex = vertices[previousVertexId];\n\n      var a = nextVertex.clone().sub(vertex);\n      var b = previousVertex.clone().sub(vertex);\n\n      var angle = a.angleTo(b);\n\n      if (angle > Math.PI - 0.01 && angle < Math.PI + 0.01) {\n\n        // Remove the neighbours who had this vertex\n        var goodNeighbours = [];\n        polygon.neighbours.forEach((neighbour) => {\n          if (!neighbour.vertexIds.includes(polygon.vertexIds[i])) {\n            goodNeighbours.push(neighbour);\n          }\n        });\n        polygon.neighbours = goodNeighbours;\n\n\n        // TODO cleanup the list of vertices and rebuild vertexIds for all polygons\n      } else {\n        newVertexIds.push(polygon.vertexIds[i]);\n      }\n\n    }\n\n    polygon.vertexIds = newVertexIds;\n\n    this.setPolygonCentroid(polygon, navigationMesh);\n\n  }\n\n  static isConvex (polygon, navigationMesh) {\n\n    var vertices = navigationMesh.vertices;\n\n    if (polygon.vertexIds.length < 3) return false;\n\n    var convex = true;\n\n    var total = 0;\n\n    var results = [];\n\n    for (var i = 0; i < polygon.vertexIds.length; i++) {\n\n      var vertex = vertices[polygon.vertexIds[i]];\n\n      var nextVertex, previousVertex;\n\n      if (i === 0) {\n        nextVertex = vertices[polygon.vertexIds[1]];\n        previousVertex = vertices[polygon.vertexIds[polygon.vertexIds.length - 1]];\n      } else if (i === polygon.vertexIds.length - 1) {\n        nextVertex = vertices[polygon.vertexIds[0]];\n        previousVertex = vertices[polygon.vertexIds[polygon.vertexIds.length - 2]];\n      } else {\n        nextVertex = vertices[polygon.vertexIds[i + 1]];\n        previousVertex = vertices[polygon.vertexIds[i - 1]];\n      }\n\n      var a = nextVertex.clone().sub(vertex);\n      var b = previousVertex.clone().sub(vertex);\n\n      var angle = a.angleTo(b);\n      total += angle;\n\n      if (angle === Math.PI || angle === 0) return false;\n\n      var r = a.cross(b).y;\n      results.push(r);\n    }\n\n    // if ( total > (polygon.vertexIds.length-2)*Math.PI ) return false;\n\n    results.forEach((r) => {\n      if (r === 0) convex = false;\n    });\n\n    if (results[0] > 0) {\n      results.forEach((r) => {\n        if (r < 0) convex = false;\n      });\n    } else {\n      results.forEach((r) => {\n        if (r > 0) convex = false;\n      });\n    }\n\n    return convex;\n  }\n\n  static distanceToSquared (a, b) {\n\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n  }\n\n  //+ Jonas Raoni Soares Silva\n  //@ http://jsfromhell.com/math/is-point-in-poly [rev. #0]\n  static isPointInPoly (poly, pt) {\n    for (var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)\n      ((poly[i].z <= pt.z && pt.z < poly[j].z) || (poly[j].z <= pt.z && pt.z < poly[i].z)) && (pt.x < (poly[j].x - poly[i].x) * (pt.z - poly[i].z) / (poly[j].z - poly[i].z) + poly[i].x) && (c = !c);\n    return c;\n  }\n\n  static isVectorInPolygon (vector, polygon, vertices) {\n\n    // reference point will be the centroid of the polygon\n    // We need to rotate the vector as well as all the points which the polygon uses\n\n    var lowestPoint = 100000;\n    var highestPoint = -100000;\n\n    var polygonVertices = [];\n\n    polygon.vertexIds.forEach((vId) => {\n      lowestPoint = Math.min(vertices[vId].y, lowestPoint);\n      highestPoint = Math.max(vertices[vId].y, highestPoint);\n      polygonVertices.push(vertices[vId]);\n    });\n\n    if (vector.y < highestPoint + 0.5 && vector.y > lowestPoint - 0.5 &&\n      this.isPointInPoly(polygonVertices, vector)) {\n      return true;\n    }\n    return false;\n  }\n\n  static triarea2 (a, b, c) {\n    var ax = b.x - a.x;\n    var az = b.z - a.z;\n    var bx = c.x - a.x;\n    var bz = c.z - a.z;\n    return bx * az - ax * bz;\n  }\n\n  static vequal (a, b) {\n    return this.distanceToSquared(a, b) < 0.00001;\n  }\n\n  static array_intersect () {\n    let i, shortest, nShortest, n, len, ret = [],\n      obj = {},\n      nOthers;\n    nOthers = arguments.length - 1;\n    nShortest = arguments[0].length;\n    shortest = 0;\n    for (i = 0; i <= nOthers; i++) {\n      n = arguments[i].length;\n      if (n < nShortest) {\n        shortest = i;\n        nShortest = n;\n      }\n    }\n\n    for (i = 0; i <= nOthers; i++) {\n      n = (i === shortest) ? 0 : (i || shortest); //Read the shortest array first. Read the first array instead of the shortest\n      len = arguments[n].length;\n      for (var j = 0; j < len; j++) {\n        var elem = arguments[n][j];\n        if (obj[elem] === i - 1) {\n          if (i === nOthers) {\n            ret.push(elem);\n            obj[elem] = 0;\n          } else {\n            obj[elem] = i;\n          }\n        } else if (i === 0) {\n          obj[elem] = 0;\n        }\n      }\n    }\n    return ret;\n  }\n}\n\nmodule.exports = Utils;\n","// Export classes\nmodule.exports = {\n    version :                       require('../package.json').version,\n\n    AABB :                          require('./collision/AABB'),\n    ArrayCollisionMatrix :          require('./collision/ArrayCollisionMatrix'),\n    Body :                          require('./objects/Body'),\n    Box :                           require('./shapes/Box'),\n    Broadphase :                    require('./collision/Broadphase'),\n    Constraint :                    require('./constraints/Constraint'),\n    ContactEquation :               require('./equations/ContactEquation'),\n    Narrowphase :                   require('./world/Narrowphase'),\n    ConeTwistConstraint :           require('./constraints/ConeTwistConstraint'),\n    ContactMaterial :               require('./material/ContactMaterial'),\n    ConvexPolyhedron :              require('./shapes/ConvexPolyhedron'),\n    Cylinder :                      require('./shapes/Cylinder'),\n    DistanceConstraint :            require('./constraints/DistanceConstraint'),\n    Equation :                      require('./equations/Equation'),\n    EventTarget :                   require('./utils/EventTarget'),\n    FrictionEquation :              require('./equations/FrictionEquation'),\n    GSSolver :                      require('./solver/GSSolver'),\n    GridBroadphase :                require('./collision/GridBroadphase'),\n    Heightfield :                   require('./shapes/Heightfield'),\n    HingeConstraint :               require('./constraints/HingeConstraint'),\n    LockConstraint :                require('./constraints/LockConstraint'),\n    Mat3 :                          require('./math/Mat3'),\n    Material :                      require('./material/Material'),\n    NaiveBroadphase :               require('./collision/NaiveBroadphase'),\n    ObjectCollisionMatrix :         require('./collision/ObjectCollisionMatrix'),\n    Pool :                          require('./utils/Pool'),\n    Particle :                      require('./shapes/Particle'),\n    Plane :                         require('./shapes/Plane'),\n    PointToPointConstraint :        require('./constraints/PointToPointConstraint'),\n    Quaternion :                    require('./math/Quaternion'),\n    Ray :                           require('./collision/Ray'),\n    RaycastVehicle :                require('./objects/RaycastVehicle'),\n    RaycastResult :                 require('./collision/RaycastResult'),\n    RigidVehicle :                  require('./objects/RigidVehicle'),\n    RotationalEquation :            require('./equations/RotationalEquation'),\n    RotationalMotorEquation :       require('./equations/RotationalMotorEquation'),\n    SAPBroadphase :                 require('./collision/SAPBroadphase'),\n    SPHSystem :                     require('./objects/SPHSystem'),\n    Shape :                         require('./shapes/Shape'),\n    Solver :                        require('./solver/Solver'),\n    Sphere :                        require('./shapes/Sphere'),\n    SplitSolver :                   require('./solver/SplitSolver'),\n    Spring :                        require('./objects/Spring'),\n    Transform :                     require('./math/Transform'),\n    Trimesh :                       require('./shapes/Trimesh'),\n    Vec3 :                          require('./math/Vec3'),\n    Vec3Pool :                      require('./utils/Vec3Pool'),\n    World :                         require('./world/World'),\n};\n","var CANNON = require('cannon');\n\nrequire('./src/components/math');\nrequire('./src/components/body/body');\nrequire('./src/components/body/dynamic-body');\nrequire('./src/components/body/static-body');\nrequire('./src/components/shape/shape')\nrequire('./src/components/constraint');\nrequire('./src/system');\n\nmodule.exports = {\n  registerAll: function () {\n    console.warn('registerAll() is deprecated. Components are automatically registered.');\n  }\n};\n\n// Export CANNON.js.\nwindow.CANNON = window.CANNON || CANNON;\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var Vec3 = require('../math/Vec3');\nvar Transform = require('../math/Transform');\nvar RaycastResult = require('../collision/RaycastResult');\nvar Utils = require('../utils/Utils');\n\nmodule.exports = WheelInfo;\n\n/**\n * @class WheelInfo\n * @constructor\n * @param {Object} [options]\n *\n * @param {Vec3} [options.chassisConnectionPointLocal]\n * @param {Vec3} [options.chassisConnectionPointWorld]\n * @param {Vec3} [options.directionLocal]\n * @param {Vec3} [options.directionWorld]\n * @param {Vec3} [options.axleLocal]\n * @param {Vec3} [options.axleWorld]\n * @param {number} [options.suspensionRestLength=1]\n * @param {number} [options.suspensionMaxLength=2]\n * @param {number} [options.radius=1]\n * @param {number} [options.suspensionStiffness=100]\n * @param {number} [options.dampingCompression=10]\n * @param {number} [options.dampingRelaxation=10]\n * @param {number} [options.frictionSlip=10000]\n * @param {number} [options.steering=0]\n * @param {number} [options.rotation=0]\n * @param {number} [options.deltaRotation=0]\n * @param {number} [options.rollInfluence=0.01]\n * @param {number} [options.maxSuspensionForce]\n * @param {boolean} [options.isFrontWheel=true]\n * @param {number} [options.clippedInvContactDotSuspension=1]\n * @param {number} [options.suspensionRelativeVelocity=0]\n * @param {number} [options.suspensionForce=0]\n * @param {number} [options.skidInfo=0]\n * @param {number} [options.suspensionLength=0]\n * @param {number} [options.maxSuspensionTravel=1]\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\n */\nfunction WheelInfo(options){\n    options = Utils.defaults(options, {\n        chassisConnectionPointLocal: new Vec3(),\n        chassisConnectionPointWorld: new Vec3(),\n        directionLocal: new Vec3(),\n        directionWorld: new Vec3(),\n        axleLocal: new Vec3(),\n        axleWorld: new Vec3(),\n        suspensionRestLength: 1,\n        suspensionMaxLength: 2,\n        radius: 1,\n        suspensionStiffness: 100,\n        dampingCompression: 10,\n        dampingRelaxation: 10,\n        frictionSlip: 10000,\n        steering: 0,\n        rotation: 0,\n        deltaRotation: 0,\n        rollInfluence: 0.01,\n        maxSuspensionForce: Number.MAX_VALUE,\n        isFrontWheel: true,\n        clippedInvContactDotSuspension: 1,\n        suspensionRelativeVelocity: 0,\n        suspensionForce: 0,\n        skidInfo: 0,\n        suspensionLength: 0,\n        maxSuspensionTravel: 1,\n        useCustomSlidingRotationalSpeed: false,\n        customSlidingRotationalSpeed: -0.1\n    });\n\n    /**\n     * Max travel distance of the suspension, in meters.\n     * @property {number} maxSuspensionTravel\n     */\n    this.maxSuspensionTravel = options.maxSuspensionTravel;\n\n    /**\n     * Speed to apply to the wheel rotation when the wheel is sliding.\n     * @property {number} customSlidingRotationalSpeed\n     */\n    this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n\n    /**\n     * If the customSlidingRotationalSpeed should be used.\n     * @property {Boolean} useCustomSlidingRotationalSpeed\n     */\n    this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n\n    /**\n     * @property {Boolean} sliding\n     */\n    this.sliding = false;\n\n    /**\n     * Connection point, defined locally in the chassis body frame.\n     * @property {Vec3} chassisConnectionPointLocal\n     */\n    this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n\n    /**\n     * @property {Vec3} chassisConnectionPointWorld\n     */\n    this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n\n    /**\n     * @property {Vec3} directionLocal\n     */\n    this.directionLocal = options.directionLocal.clone();\n\n    /**\n     * @property {Vec3} directionWorld\n     */\n    this.directionWorld = options.directionWorld.clone();\n\n    /**\n     * @property {Vec3} axleLocal\n     */\n    this.axleLocal = options.axleLocal.clone();\n\n    /**\n     * @property {Vec3} axleWorld\n     */\n    this.axleWorld = options.axleWorld.clone();\n\n    /**\n     * @property {number} suspensionRestLength\n     */\n    this.suspensionRestLength = options.suspensionRestLength;\n\n    /**\n     * @property {number} suspensionMaxLength\n     */\n    this.suspensionMaxLength = options.suspensionMaxLength;\n\n    /**\n     * @property {number} radius\n     */\n    this.radius = options.radius;\n\n    /**\n     * @property {number} suspensionStiffness\n     */\n    this.suspensionStiffness = options.suspensionStiffness;\n\n    /**\n     * @property {number} dampingCompression\n     */\n    this.dampingCompression = options.dampingCompression;\n\n    /**\n     * @property {number} dampingRelaxation\n     */\n    this.dampingRelaxation = options.dampingRelaxation;\n\n    /**\n     * @property {number} frictionSlip\n     */\n    this.frictionSlip = options.frictionSlip;\n\n    /**\n     * @property {number} steering\n     */\n    this.steering = 0;\n\n    /**\n     * Rotation value, in radians.\n     * @property {number} rotation\n     */\n    this.rotation = 0;\n\n    /**\n     * @property {number} deltaRotation\n     */\n    this.deltaRotation = 0;\n\n    /**\n     * @property {number} rollInfluence\n     */\n    this.rollInfluence = options.rollInfluence;\n\n    /**\n     * @property {number} maxSuspensionForce\n     */\n    this.maxSuspensionForce = options.maxSuspensionForce;\n\n    /**\n     * @property {number} engineForce\n     */\n    this.engineForce = 0;\n\n    /**\n     * @property {number} brake\n     */\n    this.brake = 0;\n\n    /**\n     * @property {number} isFrontWheel\n     */\n    this.isFrontWheel = options.isFrontWheel;\n\n    /**\n     * @property {number} clippedInvContactDotSuspension\n     */\n    this.clippedInvContactDotSuspension = 1;\n\n    /**\n     * @property {number} suspensionRelativeVelocity\n     */\n    this.suspensionRelativeVelocity = 0;\n\n    /**\n     * @property {number} suspensionForce\n     */\n    this.suspensionForce = 0;\n\n    /**\n     * @property {number} skidInfo\n     */\n    this.skidInfo = 0;\n\n    /**\n     * @property {number} suspensionLength\n     */\n    this.suspensionLength = 0;\n\n    /**\n     * @property {number} sideImpulse\n     */\n    this.sideImpulse = 0;\n\n    /**\n     * @property {number} forwardImpulse\n     */\n    this.forwardImpulse = 0;\n\n    /**\n     * The result from raycasting\n     * @property {RaycastResult} raycastResult\n     */\n    this.raycastResult = new RaycastResult();\n\n    /**\n     * Wheel world transform\n     * @property {Transform} worldTransform\n     */\n    this.worldTransform = new Transform();\n\n    /**\n     * @property {boolean} isInContact\n     */\n    this.isInContact = false;\n}\n\nvar chassis_velocity_at_contactPoint = new Vec3();\nvar relpos = new Vec3();\nvar chassis_velocity_at_contactPoint = new Vec3();\nWheelInfo.prototype.updateWheel = function(chassis){\n    var raycastResult = this.raycastResult;\n\n    if (this.isInContact){\n        var project= raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n        raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n        chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n        var projVel = raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\n        if (project >= -0.1) {\n            this.suspensionRelativeVelocity = 0.0;\n            this.clippedInvContactDotSuspension = 1.0 / 0.1;\n        } else {\n            var inv = -1 / project;\n            this.suspensionRelativeVelocity = projVel * inv;\n            this.clippedInvContactDotSuspension = inv;\n        }\n\n    } else {\n        // Not in contact : position wheel in a nice (rest length) position\n        raycastResult.suspensionLength = this.suspensionRestLength;\n        this.suspensionRelativeVelocity = 0.0;\n        raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n        this.clippedInvContactDotSuspension = 1.0;\n    }\n};","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","var CANNON = require('cannon');\nvar mathUtils = require('./math');\n\n/******************************************************************************\n * IDs\n */\n\nvar ID = '__id';\nmodule.exports.ID = ID;\n\nvar nextID = {};\nmodule.exports.assignID = function (prefix, object) {\n  if (object[ID]) return;\n  nextID[prefix] = nextID[prefix] || 1;\n  object[ID] = prefix + '_' + nextID[prefix]++;\n};\n\n/******************************************************************************\n * Bodies\n */\n\nmodule.exports.serializeBody = function (body) {\n  var message = {\n    // Shapes.\n    shapes: body.shapes.map(serializeShape),\n    shapeOffsets: body.shapeOffsets.map(serializeVec3),\n    shapeOrientations: body.shapeOrientations.map(serializeQuaternion),\n\n    // Vectors.\n    position: serializeVec3(body.position),\n    quaternion: body.quaternion.toArray(),\n    velocity: serializeVec3(body.velocity),\n    angularVelocity: serializeVec3(body.angularVelocity),\n\n    // Properties.\n    id: body[ID],\n    mass: body.mass,\n    linearDamping: body.linearDamping,\n    angularDamping: body.angularDamping,\n    fixedRotation: body.fixedRotation,\n    allowSleep: body.allowSleep,\n    sleepSpeedLimit: body.sleepSpeedLimit,\n    sleepTimeLimit: body.sleepTimeLimit\n  };\n\n  return message;\n};\n\nmodule.exports.deserializeBodyUpdate = function (message, body) {\n  body.position.set(message.position[0], message.position[1], message.position[2]);\n  body.quaternion.set(message.quaternion[0], message.quaternion[1], message.quaternion[2], message.quaternion[3]);\n  body.velocity.set(message.velocity[0], message.velocity[1], message.velocity[2]);\n  body.angularVelocity.set(message.angularVelocity[0], message.angularVelocity[1], message.angularVelocity[2]);\n\n  body.linearDamping = message.linearDamping;\n  body.angularDamping = message.angularDamping;\n  body.fixedRotation = message.fixedRotation;\n  body.allowSleep = message.allowSleep;\n  body.sleepSpeedLimit = message.sleepSpeedLimit;\n  body.sleepTimeLimit = message.sleepTimeLimit;\n\n  if (body.mass !== message.mass) {\n    body.mass = message.mass;\n    body.updateMassProperties();\n  }\n\n  return body;\n};\n\nmodule.exports.deserializeInterpBodyUpdate = function (message1, message2, body, mix) {\n  var weight1 = 1 - mix;\n  var weight2 = mix;\n\n  body.position.set(\n    message1.position[0] * weight1 + message2.position[0] * weight2,\n    message1.position[1] * weight1 + message2.position[1] * weight2,\n    message1.position[2] * weight1 + message2.position[2] * weight2\n  );\n  var quaternion = mathUtils.slerp(message1.quaternion, message2.quaternion, mix);\n  body.quaternion.set(quaternion[0], quaternion[1], quaternion[2], quaternion[3]);\n  body.velocity.set(\n    message1.velocity[0] * weight1 + message2.velocity[0] * weight2,\n    message1.velocity[1] * weight1 + message2.velocity[1] * weight2,\n    message1.velocity[2] * weight1 + message2.velocity[2] * weight2\n  );\n  body.angularVelocity.set(\n    message1.angularVelocity[0] * weight1 + message2.angularVelocity[0] * weight2,\n    message1.angularVelocity[1] * weight1 + message2.angularVelocity[1] * weight2,\n    message1.angularVelocity[2] * weight1 + message2.angularVelocity[2] * weight2\n  );\n\n  body.linearDamping = message2.linearDamping;\n  body.angularDamping = message2.angularDamping;\n  body.fixedRotation = message2.fixedRotation;\n  body.allowSleep = message2.allowSleep;\n  body.sleepSpeedLimit = message2.sleepSpeedLimit;\n  body.sleepTimeLimit = message2.sleepTimeLimit;\n\n  if (body.mass !== message2.mass) {\n    body.mass = message2.mass;\n    body.updateMassProperties();\n  }\n\n  return body;\n};\n\nmodule.exports.deserializeBody = function (message) {\n  var body = new CANNON.Body({\n    mass: message.mass,\n\n    position: deserializeVec3(message.position),\n    quaternion: deserializeQuaternion(message.quaternion),\n    velocity: deserializeVec3(message.velocity),\n    angularVelocity: deserializeVec3(message.angularVelocity),\n\n    linearDamping: message.linearDamping,\n    angularDamping: message.angularDamping,\n    fixedRotation: message.fixedRotation,\n    allowSleep: message.allowSleep,\n    sleepSpeedLimit: message.sleepSpeedLimit,\n    sleepTimeLimit: message.sleepTimeLimit\n  });\n\n  for (var shapeMsg, i = 0; (shapeMsg = message.shapes[i]); i++) {\n    body.addShape(\n      deserializeShape(shapeMsg),\n      deserializeVec3(message.shapeOffsets[i]),\n      deserializeQuaternion(message.shapeOrientations[i])\n    );\n  }\n\n  body[ID] = message.id;\n\n  return body;\n};\n\n/******************************************************************************\n * Shapes\n */\n\nmodule.exports.serializeShape = serializeShape;\nfunction serializeShape (shape) {\n  var shapeMsg = {type: shape.type};\n  if (shape.type === CANNON.Shape.types.BOX) {\n    shapeMsg.halfExtents = serializeVec3(shape.halfExtents);\n\n  } else if (shape.type === CANNON.Shape.types.SPHERE) {\n    shapeMsg.radius = shape.radius;\n\n  // Patch schteppe/cannon.js#329.\n  } else if (shape._type === CANNON.Shape.types.CYLINDER) {\n    shapeMsg.type = CANNON.Shape.types.CYLINDER;\n    shapeMsg.radiusTop = shape.radiusTop;\n    shapeMsg.radiusBottom = shape.radiusBottom;\n    shapeMsg.height = shape.height;\n    shapeMsg.numSegments = shape.numSegments;\n\n  } else {\n    // TODO(donmccurdy): Support for other shape types.\n    throw new Error('Unimplemented shape type: %s', shape.type);\n  }\n  return shapeMsg;\n}\n\nmodule.exports.deserializeShape = deserializeShape;\nfunction deserializeShape (message) {\n  var shape;\n\n  if (message.type === CANNON.Shape.types.BOX) {\n    shape = new CANNON.Box(deserializeVec3(message.halfExtents));\n\n  } else if (message.type === CANNON.Shape.types.SPHERE) {\n    shape = new CANNON.Sphere(message.radius);\n\n  // Patch schteppe/cannon.js#329.\n  } else if (message.type === CANNON.Shape.types.CYLINDER) {\n    shape = new CANNON.Cylinder(message.radiusTop, message.radiusBottom, message.height, message.numSegments);\n    shape._type = CANNON.Shape.types.CYLINDER;\n\n  } else {\n    // TODO(donmccurdy): Support for other shape types.\n    throw new Error('Unimplemented shape type: %s', message.type);\n  }\n\n  return shape;\n}\n\n/******************************************************************************\n * Constraints\n */\n\nmodule.exports.serializeConstraint = function (constraint) {\n\n  var message = {\n    id: constraint[ID],\n    type: constraint.type,\n    maxForce: constraint.maxForce,\n    bodyA: constraint.bodyA[ID],\n    bodyB: constraint.bodyB[ID]\n  };\n\n  switch (constraint.type) {\n    case 'LockConstraint':\n      break;\n    case 'DistanceConstraint':\n      message.distance = constraint.distance;\n      break;\n    case 'HingeConstraint':\n    case 'ConeTwistConstraint':\n      message.axisA = serializeVec3(constraint.axisA);\n      message.axisB = serializeVec3(constraint.axisB);\n      message.pivotA = serializeVec3(constraint.pivotA);\n      message.pivotB = serializeVec3(constraint.pivotB);\n      break;\n    case 'PointToPointConstraint':\n      message.pivotA = serializeVec3(constraint.pivotA);\n      message.pivotB = serializeVec3(constraint.pivotB);\n      break;\n    default:\n      throw new Error(''\n        + 'Unexpected constraint type: ' + constraint.type + '. '\n        + 'You may need to manually set `constraint.type = \"FooConstraint\";`.'\n      );\n  }\n\n  return message;\n};\n\nmodule.exports.deserializeConstraint = function (message, bodies) {\n  var TypedConstraint = CANNON[message.type];\n  var bodyA = bodies[message.bodyA];\n  var bodyB = bodies[message.bodyB];\n\n  var constraint;\n\n  switch (message.type) {\n    case 'LockConstraint':\n      constraint = new CANNON.LockConstraint(bodyA, bodyB, message);\n      break;\n\n    case 'DistanceConstraint':\n      constraint = new CANNON.DistanceConstraint(\n        bodyA,\n        bodyB,\n        message.distance,\n        message.maxForce\n      );\n      break;\n\n    case 'HingeConstraint':\n    case 'ConeTwistConstraint':\n      constraint = new TypedConstraint(bodyA, bodyB, {\n        pivotA: deserializeVec3(message.pivotA),\n        pivotB: deserializeVec3(message.pivotB),\n        axisA: deserializeVec3(message.axisA),\n        axisB: deserializeVec3(message.axisB),\n        maxForce: message.maxForce\n      });\n      break;\n\n    case 'PointToPointConstraint':\n      constraint = new CANNON.PointToPointConstraint(\n        bodyA,\n        deserializeVec3(message.pivotA),\n        bodyB,\n        deserializeVec3(message.pivotB),\n        message.maxForce\n      );\n      break;\n\n    default:\n      throw new Error('Unexpected constraint type: ' + message.type);\n  }\n\n  constraint[ID] = message.id;\n  return constraint;\n};\n\n/******************************************************************************\n * Contacts\n */\n\nmodule.exports.serializeContact = function (contact) {\n  return {\n    bi: contact.bi[ID],\n    bj: contact.bj[ID],\n    ni: serializeVec3(contact.ni),\n    ri: serializeVec3(contact.ri),\n    rj: serializeVec3(contact.rj)\n  };\n};\n\nmodule.exports.deserializeContact = function (message, bodies) {\n  return {\n    bi: bodies[message.bi],\n    bj: bodies[message.bj],\n    ni: deserializeVec3(message.ni),\n    ri: deserializeVec3(message.ri),\n    rj: deserializeVec3(message.rj)\n  };\n};\n\n/******************************************************************************\n * Math\n */\n\nmodule.exports.serializeVec3 = serializeVec3;\nfunction serializeVec3 (vec3) {\n  return vec3.toArray();\n}\n\nmodule.exports.deserializeVec3 = deserializeVec3;\nfunction deserializeVec3 (message) {\n  return new CANNON.Vec3(message[0], message[1], message[2]);\n}\n\nmodule.exports.serializeQuaternion = serializeQuaternion;\nfunction serializeQuaternion (quat) {\n  return quat.toArray();\n}\n\nmodule.exports.deserializeQuaternion = deserializeQuaternion;\nfunction deserializeQuaternion (message) {\n  return new CANNON.Quaternion(message[0], message[1], message[2], message[3]);\n}\n","module.exports = Cylinder;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar ConvexPolyhedron = require('./ConvexPolyhedron');\n\n/**\n * @class Cylinder\n * @constructor\n * @extends ConvexPolyhedron\n * @author schteppe / https://github.com/schteppe\n * @param {Number} radiusTop\n * @param {Number} radiusBottom\n * @param {Number} height\n * @param {Number} numSegments The number of segments to build the cylinder out of\n */\nfunction Cylinder( radiusTop, radiusBottom, height , numSegments ) {\n    var N = numSegments,\n        verts = [],\n        axes = [],\n        faces = [],\n        bottomface = [],\n        topface = [],\n        cos = Math.cos,\n        sin = Math.sin;\n\n    // First bottom point\n    verts.push(new Vec3(radiusBottom*cos(0),\n                               radiusBottom*sin(0),\n                               -height*0.5));\n    bottomface.push(0);\n\n    // First top point\n    verts.push(new Vec3(radiusTop*cos(0),\n                               radiusTop*sin(0),\n                               height*0.5));\n    topface.push(1);\n\n    for(var i=0; i<N; i++){\n        var theta = 2*Math.PI/N * (i+1);\n        var thetaN = 2*Math.PI/N * (i+0.5);\n        if(i<N-1){\n            // Bottom\n            verts.push(new Vec3(radiusBottom*cos(theta),\n                                       radiusBottom*sin(theta),\n                                       -height*0.5));\n            bottomface.push(2*i+2);\n            // Top\n            verts.push(new Vec3(radiusTop*cos(theta),\n                                       radiusTop*sin(theta),\n                                       height*0.5));\n            topface.push(2*i+3);\n\n            // Face\n            faces.push([2*i+2, 2*i+3, 2*i+1,2*i]);\n        } else {\n            faces.push([0,1, 2*i+1, 2*i]); // Connect\n        }\n\n        // Axis: we can cut off half of them if we have even number of segments\n        if(N % 2 === 1 || i < N / 2){\n            axes.push(new Vec3(cos(thetaN), sin(thetaN), 0));\n        }\n    }\n    faces.push(topface);\n    axes.push(new Vec3(0,0,1));\n\n    // Reorder bottom face\n    var temp = [];\n    for(var i=0; i<bottomface.length; i++){\n        temp.push(bottomface[bottomface.length - i - 1]);\n    }\n    faces.push(temp);\n\n    this.type = Shape.types.CONVEXPOLYHEDRON;\n    ConvexPolyhedron.call( this, verts, faces, axes );\n}\n\nCylinder.prototype = new ConvexPolyhedron();\n","module.exports = Solver;\n\n/**\n * Constraint equation solver base class.\n * @class Solver\n * @constructor\n * @author schteppe / https://github.com/schteppe\n */\nfunction Solver(){\n    /**\n     * All equations to be solved\n     * @property {Array} equations\n     */\n    this.equations = [];\n}\n\n/**\n * Should be implemented in subclasses!\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSolver.prototype.solve = function(dt,world){\n    // Should return the number of iterations done!\n    return 0;\n};\n\n/**\n * Add an equation\n * @method addEquation\n * @param {Equation} eq\n */\nSolver.prototype.addEquation = function(eq){\n    if (eq.enabled) {\n        this.equations.push(eq);\n    }\n};\n\n/**\n * Remove an equation\n * @method removeEquation\n * @param {Equation} eq\n */\nSolver.prototype.removeEquation = function(eq){\n    var eqs = this.equations;\n    var i = eqs.indexOf(eq);\n    if(i !== -1){\n        eqs.splice(i,1);\n    }\n};\n\n/**\n * Add all equations\n * @method removeAllEquations\n */\nSolver.prototype.removeAllEquations = function(){\n    this.equations.length = 0;\n};\n\n","var Body = require('./Body');\nvar Sphere = require('../shapes/Sphere');\nvar Box = require('../shapes/Box');\nvar Vec3 = require('../math/Vec3');\nvar HingeConstraint = require('../constraints/HingeConstraint');\n\nmodule.exports = RigidVehicle;\n\n/**\n * Simple vehicle helper class with spherical rigid body wheels.\n * @class RigidVehicle\n * @constructor\n * @param {Body} [options.chassisBody]\n */\nfunction RigidVehicle(options){\n    this.wheelBodies = [];\n\n    /**\n     * @property coordinateSystem\n     * @type {Vec3}\n     */\n    this.coordinateSystem = typeof(options.coordinateSystem)==='undefined' ? new Vec3(1, 2, 3) : options.coordinateSystem.clone();\n\n    /**\n     * @property {Body} chassisBody\n     */\n    this.chassisBody = options.chassisBody;\n\n    if(!this.chassisBody){\n        // No chassis body given. Create it!\n        var chassisShape = new Box(new Vec3(5, 2, 0.5));\n        this.chassisBody = new Body(1, chassisShape);\n    }\n\n    /**\n     * @property constraints\n     * @type {Array}\n     */\n    this.constraints = [];\n\n    this.wheelAxes = [];\n    this.wheelForces = [];\n}\n\n/**\n * Add a wheel\n * @method addWheel\n * @param {object} options\n * @param {boolean} [options.isFrontWheel]\n * @param {Vec3} [options.position] Position of the wheel, locally in the chassis body.\n * @param {Vec3} [options.direction] Slide direction of the wheel along the suspension.\n * @param {Vec3} [options.axis] Axis of rotation of the wheel, locally defined in the chassis.\n * @param {Body} [options.body] The wheel body.\n */\nRigidVehicle.prototype.addWheel = function(options){\n    options = options || {};\n    var wheelBody = options.body;\n    if(!wheelBody){\n        wheelBody =  new Body(1, new Sphere(1.2));\n    }\n    this.wheelBodies.push(wheelBody);\n    this.wheelForces.push(0);\n\n    // Position constrain wheels\n    var zero = new Vec3();\n    var position = typeof(options.position) !== 'undefined' ? options.position.clone() : new Vec3();\n\n    // Set position locally to the chassis\n    var worldPosition = new Vec3();\n    this.chassisBody.pointToWorldFrame(position, worldPosition);\n    wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z);\n\n    // Constrain wheel\n    var axis = typeof(options.axis) !== 'undefined' ? options.axis.clone() : new Vec3(0, 1, 0);\n    this.wheelAxes.push(axis);\n\n    var hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\n        pivotA: position,\n        axisA: axis,\n        pivotB: Vec3.ZERO,\n        axisB: axis,\n        collideConnected: false\n    });\n    this.constraints.push(hingeConstraint);\n\n    return this.wheelBodies.length - 1;\n};\n\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n * @todo check coordinateSystem\n */\nRigidVehicle.prototype.setSteeringValue = function(value, wheelIndex){\n    // Set angle of the hinge axis\n    var axis = this.wheelAxes[wheelIndex];\n\n    var c = Math.cos(value),\n        s = Math.sin(value),\n        x = axis.x,\n        y = axis.y;\n    this.constraints[wheelIndex].axisA.set(\n        c*x -s*y,\n        s*x +c*y,\n        0\n    );\n};\n\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method setMotorSpeed\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.setMotorSpeed = function(value, wheelIndex){\n    var hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.enableMotor();\n    hingeConstraint.motorTargetVelocity = value;\n};\n\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method disableMotor\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.disableMotor = function(wheelIndex){\n    var hingeConstraint = this.constraints[wheelIndex];\n    hingeConstraint.disableMotor();\n};\n\nvar torque = new Vec3();\n\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method setWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRigidVehicle.prototype.setWheelForce = function(value, wheelIndex){\n    this.wheelForces[wheelIndex] = value;\n};\n\n/**\n * Apply a torque on one of the wheels.\n * @method applyWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRigidVehicle.prototype.applyWheelForce = function(value, wheelIndex){\n    var axis = this.wheelAxes[wheelIndex];\n    var wheelBody = this.wheelBodies[wheelIndex];\n    var bodyTorque = wheelBody.torque;\n\n    axis.scale(value, torque);\n    wheelBody.vectorToWorldFrame(torque, torque);\n    bodyTorque.vadd(torque, bodyTorque);\n};\n\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\nRigidVehicle.prototype.addToWorld = function(world){\n    var constraints = this.constraints;\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (var i = 0; i < bodies.length; i++) {\n        world.addBody(bodies[i]);\n    }\n\n    for (var i = 0; i < constraints.length; i++) {\n        world.addConstraint(constraints[i]);\n    }\n\n    world.addEventListener('preStep', this._update.bind(this));\n};\n\nRigidVehicle.prototype._update = function(){\n    var wheelForces = this.wheelForces;\n    for (var i = 0; i < wheelForces.length; i++) {\n        this.applyWheelForce(wheelForces[i], i);\n    }\n};\n\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\nRigidVehicle.prototype.removeFromWorld = function(world){\n    var constraints = this.constraints;\n    var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n    for (var i = 0; i < bodies.length; i++) {\n        world.remove(bodies[i]);\n    }\n\n    for (var i = 0; i < constraints.length; i++) {\n        world.removeConstraint(constraints[i]);\n    }\n};\n\nvar worldAxis = new Vec3();\n\n/**\n * Get current rotational velocity of a wheel\n * @method getWheelSpeed\n * @param {integer} wheelIndex\n */\nRigidVehicle.prototype.getWheelSpeed = function(wheelIndex){\n    var axis = this.wheelAxes[wheelIndex];\n    var wheelBody = this.wheelBodies[wheelIndex];\n    var w = wheelBody.angularVelocity;\n    this.chassisBody.vectorToWorldFrame(axis, worldAxis);\n    return w.dot(worldAxis);\n};\n","const BinaryHeap = require('./BinaryHeap');\nconst utils = require('./utils.js');\n\nclass AStar {\n  static init (graph) {\n    for (let x = 0; x < graph.length; x++) {\n      //for(var x in graph) {\n      const node = graph[x];\n      node.f = 0;\n      node.g = 0;\n      node.h = 0;\n      node.cost = 1.0;\n      node.visited = false;\n      node.closed = false;\n      node.parent = null;\n    }\n  }\n\n  static cleanUp (graph) {\n    for (let x = 0; x < graph.length; x++) {\n      const node = graph[x];\n      delete node.f;\n      delete node.g;\n      delete node.h;\n      delete node.cost;\n      delete node.visited;\n      delete node.closed;\n      delete node.parent;\n    }\n  }\n\n  static heap () {\n    return new BinaryHeap(function (node) {\n      return node.f;\n    });\n  }\n\n  static search (graph, start, end) {\n    this.init(graph);\n    //heuristic = heuristic || astar.manhattan;\n\n\n    const openHeap = this.heap();\n\n    openHeap.push(start);\n\n    while (openHeap.size() > 0) {\n\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      const currentNode = openHeap.pop();\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        let curr = currentNode;\n        const ret = [];\n        while (curr.parent) {\n          ret.push(curr);\n          curr = curr.parent;\n        }\n        this.cleanUp(ret);\n        return ret.reverse();\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbours.\n      currentNode.closed = true;\n\n      // Find all neighbours for the current node. Optionally find diagonal neighbours as well (false by default).\n      const neighbours = this.neighbours(graph, currentNode);\n\n      for (let i = 0, il = neighbours.length; i < il; i++) {\n        const neighbour = neighbours[i];\n\n        if (neighbour.closed) {\n          // Not a valid node to process, skip to next neighbour.\n          continue;\n        }\n\n        // The g score is the shortest distance from start to current node.\n        // We need to check if the path we have arrived at this neighbour is the shortest one we have seen yet.\n        const gScore = currentNode.g + neighbour.cost;\n        const beenVisited = neighbour.visited;\n\n        if (!beenVisited || gScore < neighbour.g) {\n\n          // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n          neighbour.visited = true;\n          neighbour.parent = currentNode;\n          if (!neighbour.centroid || !end.centroid) throw new Error('Unexpected state');\n          neighbour.h = neighbour.h || this.heuristic(neighbour.centroid, end.centroid);\n          neighbour.g = gScore;\n          neighbour.f = neighbour.g + neighbour.h;\n\n          if (!beenVisited) {\n            // Pushing to heap will put it in proper place based on the 'f' value.\n            openHeap.push(neighbour);\n          } else {\n            // Already seen the node, but since it has been rescored we need to reorder it in the heap\n            openHeap.rescoreElement(neighbour);\n          }\n        }\n      }\n    }\n\n    // No result was found - empty array signifies failure to find path.\n    return [];\n  }\n\n  static heuristic (pos1, pos2) {\n    return utils.distanceToSquared(pos1, pos2);\n  }\n\n  static neighbours (graph, node) {\n    const ret = [];\n\n    for (let e = 0; e < node.neighbours.length; e++) {\n      ret.push(graph[node.neighbours[e]]);\n    }\n\n    return ret;\n  }\n}\n\nmodule.exports = AStar;\n","module.exports = SplitSolver;\n\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Solver = require('./Solver');\nvar Body = require('../objects/Body');\n\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n * @class SplitSolver\n * @constructor\n * @extends Solver\n * @param {Solver} subsolver\n */\nfunction SplitSolver(subsolver){\n    Solver.call(this);\n    this.iterations = 10;\n    this.tolerance = 1e-7;\n    this.subsolver = subsolver;\n    this.nodes = [];\n    this.nodePool = [];\n\n    // Create needed nodes, reuse if possible\n    while(this.nodePool.length < 128){\n        this.nodePool.push(this.createNode());\n    }\n}\nSplitSolver.prototype = new Solver();\n\n// Returns the number of subsystems\nvar SplitSolver_solve_nodes = []; // All allocated node objects\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\nvar SplitSolver_solve_eqs = [];   // Temp array\nvar SplitSolver_solve_bds = [];   // Temp array\nvar SplitSolver_solve_dummyWorld = {bodies:[]}; // Temp object\n\nvar STATIC = Body.STATIC;\nfunction getUnvisitedNode(nodes){\n    var Nnodes = nodes.length;\n    for(var i=0; i!==Nnodes; i++){\n        var node = nodes[i];\n        if(!node.visited && !(node.body.type & STATIC)){\n            return node;\n        }\n    }\n    return false;\n}\n\nvar queue = [];\nfunction bfs(root,visitFunc,bds,eqs){\n    queue.push(root);\n    root.visited = true;\n    visitFunc(root,bds,eqs);\n    while(queue.length) {\n        var node = queue.pop();\n        // Loop over unvisited child nodes\n        var child;\n        while((child = getUnvisitedNode(node.children))) {\n            child.visited = true;\n            visitFunc(child,bds,eqs);\n            queue.push(child);\n        }\n    }\n}\n\nfunction visitFunc(node,bds,eqs){\n    bds.push(node.body);\n    var Neqs = node.eqs.length;\n    for(var i=0; i!==Neqs; i++){\n        var eq = node.eqs[i];\n        if(eqs.indexOf(eq) === -1){\n            eqs.push(eq);\n        }\n    }\n}\n\nSplitSolver.prototype.createNode = function(){\n    return { body:null, children:[], eqs:[], visited:false };\n};\n\n/**\n * Solve the subsystems\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\nSplitSolver.prototype.solve = function(dt,world){\n    var nodes=SplitSolver_solve_nodes,\n        nodePool=this.nodePool,\n        bodies=world.bodies,\n        equations=this.equations,\n        Neq=equations.length,\n        Nbodies=bodies.length,\n        subsolver=this.subsolver;\n\n    // Create needed nodes, reuse if possible\n    while(nodePool.length < Nbodies){\n        nodePool.push(this.createNode());\n    }\n    nodes.length = Nbodies;\n    for (var i = 0; i < Nbodies; i++) {\n        nodes[i] = nodePool[i];\n    }\n\n    // Reset node values\n    for(var i=0; i!==Nbodies; i++){\n        var node = nodes[i];\n        node.body = bodies[i];\n        node.children.length = 0;\n        node.eqs.length = 0;\n        node.visited = false;\n    }\n    for(var k=0; k!==Neq; k++){\n        var eq=equations[k],\n            i=bodies.indexOf(eq.bi),\n            j=bodies.indexOf(eq.bj),\n            ni=nodes[i],\n            nj=nodes[j];\n        ni.children.push(nj);\n        ni.eqs.push(eq);\n        nj.children.push(ni);\n        nj.eqs.push(eq);\n    }\n\n    var child, n=0, eqs=SplitSolver_solve_eqs;\n\n    subsolver.tolerance = this.tolerance;\n    subsolver.iterations = this.iterations;\n\n    var dummyWorld = SplitSolver_solve_dummyWorld;\n    while((child = getUnvisitedNode(nodes))){\n        eqs.length = 0;\n        dummyWorld.bodies.length = 0;\n        bfs(child, visitFunc, dummyWorld.bodies, eqs);\n\n        var Neqs = eqs.length;\n\n        eqs = eqs.sort(sortById);\n\n        for(var i=0; i!==Neqs; i++){\n            subsolver.addEquation(eqs[i]);\n        }\n\n        var iter = subsolver.solve(dt,dummyWorld);\n        subsolver.removeAllEquations();\n        n++;\n    }\n\n    return n;\n};\n\nfunction sortById(a, b){\n    return b.id - a.id;\n}","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","/**\n * @param  {Array<THREE.Material>|THREE.Material} material\n * @return {Array<THREE.Material>}\n */\nfunction ensureMaterialArray (material) {\n  if (!material) {\n    return [];\n  } else if (Array.isArray(material)) {\n    return material;\n  } else if (material.materials) {\n    return material.materials;\n  } else {\n    return [material];\n  }\n}\n\n/**\n * @param  {THREE.Object3D} mesh\n * @param  {Array<string>} materialNames\n * @param  {THREE.Texture} envMap\n * @param  {number} reflectivity  [description]\n */\nfunction applyEnvMap (mesh, materialNames, envMap, reflectivity) {\n  if (!mesh) return;\n\n  materialNames = materialNames || [];\n\n  mesh.traverse((node) => {\n\n    if (!node.isMesh) return;\n\n    const meshMaterials = ensureMaterialArray(node.material);\n\n    meshMaterials.forEach((material) => {\n\n      if (material && !('envMap' in material)) return;\n      if (materialNames.length && materialNames.indexOf(material.name) === -1) return;\n\n      material.envMap = envMap;\n      material.reflectivity = reflectivity;\n      material.needsUpdate = true;\n\n    });\n\n  });\n}\n\n/**\n * Specifies an envMap on an entity, without replacing any existing material\n * properties.\n */\nmodule.exports = AFRAME.registerComponent('cube-env-map', {\n  multiple: true,\n\n  schema: {\n    path: {default: ''},\n    extension: {default: 'jpg', oneOf: ['jpg', 'png']},\n    format: {default: 'RGBFormat', oneOf: ['RGBFormat', 'RGBAFormat']},\n    enableBackground: {default: false},\n    reflectivity: {default: 1, min: 0, max: 1},\n    materials: {default: []}\n  },\n\n  init: function () {\n    const data = this.data;\n\n    this.texture = new THREE.CubeTextureLoader().load([\n      data.path + 'posx.' + data.extension, data.path + 'negx.' + data.extension,\n      data.path + 'posy.' + data.extension, data.path + 'negy.' + data.extension,\n      data.path + 'posz.' + data.extension, data.path + 'negz.' + data.extension\n    ]);\n    this.texture.format = THREE[data.format];\n\n    this.object3dsetHandler = () => {\n      const mesh = this.el.getObject3D('mesh');\n      const data = this.data;\n      applyEnvMap(mesh, data.materials, this.texture, data.reflectivity);\n    };\n    this.el.addEventListener('object3dset', this.object3dsetHandler);\n  },\n\n  update: function (oldData) {\n    const data = this.data;\n    const mesh = this.el.getObject3D('mesh');\n\n    let addedMaterialNames = [];\n    let removedMaterialNames = [];\n\n    if (data.materials.length) {\n      if (oldData.materials) {\n        addedMaterialNames = data.materials.filter((name) => !oldData.materials.includes(name));\n        removedMaterialNames = oldData.materials.filter((name) => !data.materials.includes(name));\n      } else {\n        addedMaterialNames = data.materials;\n      }\n    }\n    if (addedMaterialNames.length) {\n      applyEnvMap(mesh, addedMaterialNames, this.texture, data.reflectivity);\n    }\n    if (removedMaterialNames.length) {\n      applyEnvMap(mesh, removedMaterialNames, null, 1);\n    }\n\n    if (oldData.materials && data.reflectivity !== oldData.reflectivity) {\n      const maintainedMaterialNames = data.materials\n        .filter((name) => oldData.materials.includes(name));\n      if (maintainedMaterialNames.length) {\n        applyEnvMap(mesh, maintainedMaterialNames, this.texture, data.reflectivity);\n      }\n    }\n\n    if (this.data.enableBackground && !oldData.enableBackground) {\n      this.setBackground(this.texture);\n    } else if (!this.data.enableBackground && oldData.enableBackground) {\n      this.setBackground(null);\n    }\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.object3dsetHandler);\n    const mesh = this.el.getObject3D('mesh');\n    const data = this.data;\n\n    applyEnvMap(mesh, data.materials, null, 1);\n    if (data.enableBackground) this.setBackground(null);\n  },\n\n  setBackground: function (texture) {\n    this.el.sceneEl.object3D.background = texture;\n  }\n});\n","var CANNON = require('cannon'),\n    quickhull = require('./lib/THREE.quickhull');\n\nvar PI_2 = Math.PI / 2;\n\nvar Type = {\n  BOX: 'Box',\n  CYLINDER: 'Cylinder',\n  SPHERE: 'Sphere',\n  HULL: 'ConvexPolyhedron',\n  MESH: 'Trimesh'\n};\n\n/**\n * Given a THREE.Object3D instance, creates a corresponding CANNON shape.\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\nvar mesh2shape = function (object, options) {\n  options = options || {};\n\n  var geometry;\n\n  if (options.type === Type.BOX) {\n    return createBoundingBoxShape(object);\n  } else if (options.type === Type.CYLINDER) {\n    return createBoundingCylinderShape(object, options);\n  } else if (options.type === Type.SPHERE) {\n    return createBoundingSphereShape(object, options);\n  } else if (options.type === Type.HULL) {\n    return createConvexPolyhedron(object);\n  } else if (options.type === Type.MESH) {\n    geometry = getGeometry(object);\n    return geometry ? createTrimeshShape(geometry) : null;\n  } else if (options.type) {\n    throw new Error('[CANNON.mesh2shape] Invalid type \"%s\".', options.type);\n  }\n\n  geometry = getGeometry(object);\n  if (!geometry) return null;\n\n  var type = geometry.metadata\n    ? geometry.metadata.type\n    : geometry.type;\n\n  switch (type) {\n    case 'BoxGeometry':\n    case 'BoxBufferGeometry':\n      return createBoxShape(geometry);\n    case 'CylinderGeometry':\n    case 'CylinderBufferGeometry':\n      return createCylinderShape(geometry);\n    case 'PlaneGeometry':\n    case 'PlaneBufferGeometry':\n      return createPlaneShape(geometry);\n    case 'SphereGeometry':\n    case 'SphereBufferGeometry':\n      return createSphereShape(geometry);\n    case 'TubeGeometry':\n    case 'Geometry':\n    case 'BufferGeometry':\n      return createBoundingBoxShape(object);\n    default:\n      console.warn('Unrecognized geometry: \"%s\". Using bounding box as shape.', geometry.type);\n      return createBoxShape(geometry);\n  }\n};\n\nmesh2shape.Type = Type;\n\nmodule.exports = CANNON.mesh2shape = mesh2shape;\n\n/******************************************************************************\n * Shape construction\n */\n\n /**\n  * @param  {THREE.Geometry} geometry\n  * @return {CANNON.Shape}\n  */\n function createBoxShape (geometry) {\n   var vertices = getVertices(geometry);\n\n   if (!vertices.length) return null;\n\n   geometry.computeBoundingBox();\n   var box = geometry.boundingBox;\n   return new CANNON.Box(new CANNON.Vec3(\n     (box.max.x - box.min.x) / 2,\n     (box.max.y - box.min.y) / 2,\n     (box.max.z - box.min.z) / 2\n   ));\n }\n\n/**\n * Bounding box needs to be computed with the entire mesh, not just geometry.\n * @param  {THREE.Object3D} mesh\n * @return {CANNON.Shape}\n */\nfunction createBoundingBoxShape (object) {\n  var shape, localPosition,\n      box = new THREE.Box3();\n\n  var clone = object.clone();\n  clone.quaternion.set(0, 0, 0, 1);\n  clone.updateMatrixWorld();\n\n  box.setFromObject(clone);\n\n  if (!isFinite(box.min.lengthSq())) return null;\n\n  shape = new CANNON.Box(new CANNON.Vec3(\n    (box.max.x - box.min.x) / 2,\n    (box.max.y - box.min.y) / 2,\n    (box.max.z - box.min.z) / 2\n  ));\n\n  localPosition = box.translate(clone.position.negate()).getCenter(new THREE.Vector3());\n  if (localPosition.lengthSq()) {\n    shape.offset = localPosition;\n  }\n\n  return shape;\n}\n\n/**\n * Computes 3D convex hull as a CANNON.ConvexPolyhedron.\n * @param  {THREE.Object3D} mesh\n * @return {CANNON.Shape}\n */\nfunction createConvexPolyhedron (object) {\n  var i, vertices, faces, hull,\n      eps = 1e-4,\n      geometry = getGeometry(object);\n\n  if (!geometry || !geometry.vertices.length) return null;\n\n  // Perturb.\n  for (i = 0; i < geometry.vertices.length; i++) {\n    geometry.vertices[i].x += (Math.random() - 0.5) * eps;\n    geometry.vertices[i].y += (Math.random() - 0.5) * eps;\n    geometry.vertices[i].z += (Math.random() - 0.5) * eps;\n  }\n\n  // Compute the 3D convex hull.\n  hull = quickhull(geometry);\n\n  // Convert from THREE.Vector3 to CANNON.Vec3.\n  vertices = new Array(hull.vertices.length);\n  for (i = 0; i < hull.vertices.length; i++) {\n    vertices[i] = new CANNON.Vec3(hull.vertices[i].x, hull.vertices[i].y, hull.vertices[i].z);\n  }\n\n  // Convert from THREE.Face to Array<number>.\n  faces = new Array(hull.faces.length);\n  for (i = 0; i < hull.faces.length; i++) {\n    faces[i] = [hull.faces[i].a, hull.faces[i].b, hull.faces[i].c];\n  }\n\n  return new CANNON.ConvexPolyhedron(vertices, faces);\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createCylinderShape (geometry) {\n  var shape,\n      params = geometry.metadata\n        ? geometry.metadata.parameters\n        : geometry.parameters;\n  shape = new CANNON.Cylinder(\n    params.radiusTop,\n    params.radiusBottom,\n    params.height,\n    params.radialSegments\n  );\n\n  // Include metadata for serialization.\n  shape._type = CANNON.Shape.types.CYLINDER; // Patch schteppe/cannon.js#329.\n  shape.radiusTop = params.radiusTop;\n  shape.radiusBottom = params.radiusBottom;\n  shape.height = params.height;\n  shape.numSegments = params.radialSegments;\n\n  shape.orientation = new CANNON.Quaternion();\n  shape.orientation.setFromEuler(THREE.Math.degToRad(90), 0, 0, 'XYZ').normalize();\n  return shape;\n}\n\n/**\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\nfunction createBoundingCylinderShape (object, options) {\n  var shape, height, radius,\n      box = new THREE.Box3(),\n      axes = ['x', 'y', 'z'],\n      majorAxis = options.cylinderAxis || 'y',\n      minorAxes = axes.splice(axes.indexOf(majorAxis), 1) && axes;\n\n  box.setFromObject(object);\n\n  if (!isFinite(box.min.lengthSq())) return null;\n\n  // Compute cylinder dimensions.\n  height = box.max[majorAxis] - box.min[majorAxis];\n  radius = 0.5 * Math.max(\n    box.max[minorAxes[0]] - box.min[minorAxes[0]],\n    box.max[minorAxes[1]] - box.min[minorAxes[1]]\n  );\n\n  // Create shape.\n  shape = new CANNON.Cylinder(radius, radius, height, 12);\n\n  // Include metadata for serialization.\n  shape._type = CANNON.Shape.types.CYLINDER; // Patch schteppe/cannon.js#329.\n  shape.radiusTop = radius;\n  shape.radiusBottom = radius;\n  shape.height = height;\n  shape.numSegments = 12;\n\n  shape.orientation = new CANNON.Quaternion();\n  shape.orientation.setFromEuler(\n    majorAxis === 'y' ? PI_2 : 0,\n    majorAxis === 'z' ? PI_2 : 0,\n    0,\n    'XYZ'\n  ).normalize();\n  return shape;\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createPlaneShape (geometry) {\n  geometry.computeBoundingBox();\n  var box = geometry.boundingBox;\n  return new CANNON.Box(new CANNON.Vec3(\n    (box.max.x - box.min.x) / 2 || 0.1,\n    (box.max.y - box.min.y) / 2 || 0.1,\n    (box.max.z - box.min.z) / 2 || 0.1\n  ));\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createSphereShape (geometry) {\n  var params = geometry.metadata\n    ? geometry.metadata.parameters\n    : geometry.parameters;\n  return new CANNON.Sphere(params.radius);\n}\n\n/**\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\nfunction createBoundingSphereShape (object, options) {\n  if (options.sphereRadius) {\n    return new CANNON.Sphere(options.sphereRadius);\n  }\n  var geometry = getGeometry(object);\n  if (!geometry) return null;\n  geometry.computeBoundingSphere();\n  return new CANNON.Sphere(geometry.boundingSphere.radius);\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\nfunction createTrimeshShape (geometry) {\n  var indices,\n      vertices = getVertices(geometry);\n\n  if (!vertices.length) return null;\n\n  indices = Object.keys(vertices).map(Number);\n  return new CANNON.Trimesh(vertices, indices);\n}\n\n/******************************************************************************\n * Utils\n */\n\n/**\n * Returns a single geometry for the given object. If the object is compound,\n * its geometries are automatically merged.\n * @param {THREE.Object3D} object\n * @return {THREE.Geometry}\n */\nfunction getGeometry (object) {\n  var matrix, mesh,\n      meshes = getMeshes(object),\n      tmp = new THREE.Geometry(),\n      combined = new THREE.Geometry();\n\n  if (meshes.length === 0) return null;\n\n  // Apply scale  – it can't easily be applied to a CANNON.Shape later.\n  if (meshes.length === 1) {\n    var position = new THREE.Vector3(),\n        quaternion = new THREE.Quaternion(),\n        scale = new THREE.Vector3();\n    if (meshes[0].geometry.isBufferGeometry) {\n      if (meshes[0].geometry.attributes.position\n          && meshes[0].geometry.attributes.position.itemSize > 2) {\n        tmp.fromBufferGeometry(meshes[0].geometry);\n      }\n    } else {\n      tmp = meshes[0].geometry.clone();\n    }\n    tmp.metadata = meshes[0].geometry.metadata;\n    meshes[0].updateMatrixWorld();\n    meshes[0].matrixWorld.decompose(position, quaternion, scale);\n    return tmp.scale(scale.x, scale.y, scale.z);\n  }\n\n  // Recursively merge geometry, preserving local transforms.\n  while ((mesh = meshes.pop())) {\n    mesh.updateMatrixWorld();\n    if (mesh.geometry.isBufferGeometry) {\n      if (mesh.geometry.attributes.position\n          && mesh.geometry.attributes.position.itemSize > 2) {\n        var tmpGeom = new THREE.Geometry();\n        tmpGeom.fromBufferGeometry(mesh.geometry);\n        combined.merge(tmpGeom, mesh.matrixWorld);\n        tmpGeom.dispose();\n      }\n    } else {\n      combined.merge(mesh.geometry, mesh.matrixWorld);\n    }\n  }\n\n  matrix = new THREE.Matrix4();\n  matrix.scale(object.scale);\n  combined.applyMatrix(matrix);\n  return combined;\n}\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {Array<number>}\n */\nfunction getVertices (geometry) {\n  if (!geometry.attributes) {\n    geometry = new THREE.BufferGeometry().fromGeometry(geometry);\n  }\n  return (geometry.attributes.position || {}).array || [];\n}\n\n/**\n * Returns a flat array of THREE.Mesh instances from the given object. If\n * nested transformations are found, they are applied to child meshes\n * as mesh.userData.matrix, so that each mesh has its position/rotation/scale\n * independently of all of its parents except the top-level object.\n * @param  {THREE.Object3D} object\n * @return {Array<THREE.Mesh>}\n */\nfunction getMeshes (object) {\n  var meshes = [];\n  object.traverse(function (o) {\n    if (o.type === 'Mesh') {\n      meshes.push(o);\n    }\n  });\n  return meshes;\n}\n","module.exports = ContactEquation;\n\nvar Equation = require('./Equation');\nvar Vec3 = require('../math/Vec3');\nvar Mat3 = require('../math/Mat3');\n\n/**\n * Contact/non-penetration constraint equation\n * @class ContactEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @extends Equation\n */\nfunction ContactEquation(bodyA, bodyB, maxForce){\n    maxForce = typeof(maxForce) !== 'undefined' ? maxForce : 1e6;\n    Equation.call(this, bodyA, bodyB, 0, maxForce);\n\n    /**\n     * @property restitution\n     * @type {Number}\n     */\n    this.restitution = 0.0; // \"bounciness\": u1 = -e*u0\n\n    /**\n     * World-oriented vector that goes from the center of bi to the contact point.\n     * @property {Vec3} ri\n     */\n    this.ri = new Vec3();\n\n    /**\n     * World-oriented vector that starts in body j position and goes to the contact point.\n     * @property {Vec3} rj\n     */\n    this.rj = new Vec3();\n\n    /**\n     * Contact normal, pointing out of body i.\n     * @property {Vec3} ni\n     */\n    this.ni = new Vec3();\n}\n\nContactEquation.prototype = new Equation();\nContactEquation.prototype.constructor = ContactEquation;\n\nvar ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\nvar ContactEquation_computeB_temp2 = new Vec3();\nvar ContactEquation_computeB_temp3 = new Vec3();\nContactEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n        bi = this.bi,\n        bj = this.bj,\n        ri = this.ri,\n        rj = this.rj,\n        rixn = ContactEquation_computeB_temp1,\n        rjxn = ContactEquation_computeB_temp2,\n\n        vi = bi.velocity,\n        wi = bi.angularVelocity,\n        fi = bi.force,\n        taui = bi.torque,\n\n        vj = bj.velocity,\n        wj = bj.angularVelocity,\n        fj = bj.force,\n        tauj = bj.torque,\n\n        penetrationVec = ContactEquation_computeB_temp3,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB,\n\n        n = this.ni;\n\n    // Caluclate cross products\n    ri.cross(n,rixn);\n    rj.cross(n,rjxn);\n\n    // g = xj+rj -(xi+ri)\n    // G = [ -ni  -rixn  ni  rjxn ]\n    n.negate(GA.spatial);\n    rixn.negate(GA.rotational);\n    GB.spatial.copy(n);\n    GB.rotational.copy(rjxn);\n\n    // Calculate the penetration vector\n    penetrationVec.copy(bj.position);\n    penetrationVec.vadd(rj,penetrationVec);\n    penetrationVec.vsub(bi.position,penetrationVec);\n    penetrationVec.vsub(ri,penetrationVec);\n\n    var g = n.dot(penetrationVec);\n\n    // Compute iteration\n    var ePlusOne = this.restitution + 1;\n    var GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\n    var GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h*GiMf;\n\n    return B;\n};\n\nvar ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\n\n/**\n * Get the current relative velocity in the contact point.\n * @method getImpactVelocityAlongNormal\n * @return {number}\n */\nContactEquation.prototype.getImpactVelocityAlongNormal = function(){\n    var vi = ContactEquation_getImpactVelocityAlongNormal_vi;\n    var vj = ContactEquation_getImpactVelocityAlongNormal_vj;\n    var xi = ContactEquation_getImpactVelocityAlongNormal_xi;\n    var xj = ContactEquation_getImpactVelocityAlongNormal_xj;\n    var relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\n\n    this.bi.position.vadd(this.ri, xi);\n    this.bj.position.vadd(this.rj, xj);\n\n    this.bi.getVelocityAtWorldPoint(xi, vi);\n    this.bj.getVelocityAtWorldPoint(xj, vj);\n\n    vi.vsub(vj, relVel);\n\n    return this.ni.dot(relVel);\n};\n\n","var CANNON = require('cannon'),\n    Driver = require('./driver');\n\nfunction LocalDriver () {\n  this.world = null;\n  this.materials = {};\n  this.contactMaterial = null;\n}\n\nLocalDriver.prototype = new Driver();\nLocalDriver.prototype.constructor = LocalDriver;\n\nmodule.exports = LocalDriver;\n\n/******************************************************************************\n * Lifecycle\n */\n\n/* @param {object} worldConfig */\nLocalDriver.prototype.init = function (worldConfig) {\n  var world = new CANNON.World();\n  world.quatNormalizeSkip = worldConfig.quatNormalizeSkip;\n  world.quatNormalizeFast = worldConfig.quatNormalizeFast;\n  world.solver.iterations = worldConfig.solverIterations;\n  world.gravity.set(0, worldConfig.gravity, 0);\n  world.broadphase = new CANNON.NaiveBroadphase();\n\n  this.world = world;\n};\n\n/* @param {number} deltaMS */\nLocalDriver.prototype.step = function (deltaMS) {\n  this.world.step(deltaMS);\n};\n\nLocalDriver.prototype.destroy = function () {\n  delete this.world;\n  delete this.contactMaterial;\n  this.materials = {};\n};\n\n/******************************************************************************\n * Bodies\n */\n\n/* @param {CANNON.Body} body */\nLocalDriver.prototype.addBody = function (body) {\n  this.world.addBody(body);\n};\n\n/* @param {CANNON.Body} body */\nLocalDriver.prototype.removeBody = function (body) {\n  this.world.removeBody(body);\n};\n\n/**\n * @param {CANNON.Body} body\n * @param {string} methodName\n * @param {Array} args\n */\nLocalDriver.prototype.applyBodyMethod = function (body, methodName, args) {\n  body['__' + methodName].apply(body, args);\n};\n\n/** @param {CANNON.Body} body */\nLocalDriver.prototype.updateBodyProperties = function () {};\n\n/******************************************************************************\n * Materials\n */\n\n/**\n * @param {string} name\n * @return {CANNON.Material}\n */\nLocalDriver.prototype.getMaterial = function (name) {\n  return this.materials[name];\n};\n\n/** @param {object} materialConfig */\nLocalDriver.prototype.addMaterial = function (materialConfig) {\n  this.materials[materialConfig.name] = new CANNON.Material(materialConfig);\n  this.materials[materialConfig.name].name = materialConfig.name;\n};\n\n/**\n * @param {string} matName1\n * @param {string} matName2\n * @param {object} contactMaterialConfig\n */\nLocalDriver.prototype.addContactMaterial = function (matName1, matName2, contactMaterialConfig) {\n  var mat1 = this.materials[matName1],\n      mat2 = this.materials[matName2];\n  this.contactMaterial = new CANNON.ContactMaterial(mat1, mat2, contactMaterialConfig);\n  this.world.addContactMaterial(this.contactMaterial);\n};\n\n/******************************************************************************\n * Constraints\n */\n\n/* @param {CANNON.Constraint} constraint */\nLocalDriver.prototype.addConstraint = function (constraint) {\n  this.world.addConstraint(constraint);\n};\n\n/* @param {CANNON.Constraint} constraint */\nLocalDriver.prototype.removeConstraint = function (constraint) {\n  this.world.removeConstraint(constraint);\n};\n\n/******************************************************************************\n * Contacts\n */\n\n/** @return {Array<object>} */\nLocalDriver.prototype.getContacts = function () {\n  return this.world.contacts;\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports = Narrowphase;\n\nvar AABB = require('../collision/AABB');\nvar Body = require('../objects/Body');\nvar Shape = require('../shapes/Shape');\nvar Ray = require('../collision/Ray');\nvar Vec3 = require('../math/Vec3');\nvar Transform = require('../math/Transform');\nvar ConvexPolyhedron = require('../shapes/ConvexPolyhedron');\nvar Quaternion = require('../math/Quaternion');\nvar Solver = require('../solver/Solver');\nvar Vec3Pool = require('../utils/Vec3Pool');\nvar ContactEquation = require('../equations/ContactEquation');\nvar FrictionEquation = require('../equations/FrictionEquation');\n\n/**\n * Helper class for the World. Generates ContactEquations.\n * @class Narrowphase\n * @constructor\n * @todo Sphere-ConvexPolyhedron contacts\n * @todo Contact reduction\n * @todo  should move methods to prototype\n */\nfunction Narrowphase(world){\n\n    /**\n     * Internal storage of pooled contact points.\n     * @property {Array} contactPointPool\n     */\n    this.contactPointPool = [];\n\n    this.frictionEquationPool = [];\n\n    this.result = [];\n    this.frictionResult = [];\n\n    /**\n     * Pooled vectors.\n     * @property {Vec3Pool} v3pool\n     */\n    this.v3pool = new Vec3Pool();\n\n    this.world = world;\n    this.currentContactMaterial = null;\n\n    /**\n     * @property {Boolean} enableFrictionReduction\n     */\n    this.enableFrictionReduction = false;\n}\n\n/**\n * Make a contact object, by using the internal pool or creating a new one.\n * @method createContactEquation\n * @param {Body} bi\n * @param {Body} bj\n * @param {Shape} si\n * @param {Shape} sj\n * @param {Shape} overrideShapeA\n * @param {Shape} overrideShapeB\n * @return {ContactEquation}\n */\nNarrowphase.prototype.createContactEquation = function(bi, bj, si, sj, overrideShapeA, overrideShapeB){\n    var c;\n    if(this.contactPointPool.length){\n        c = this.contactPointPool.pop();\n        c.bi = bi;\n        c.bj = bj;\n    } else {\n        c = new ContactEquation(bi, bj);\n    }\n\n    c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n    var cm = this.currentContactMaterial;\n\n    c.restitution = cm.restitution;\n\n    c.setSpookParams(\n        cm.contactEquationStiffness,\n        cm.contactEquationRelaxation,\n        this.world.dt\n    );\n\n    var matA = si.material || bi.material;\n    var matB = sj.material || bj.material;\n    if(matA && matB && matA.restitution >= 0 && matB.restitution >= 0){\n        c.restitution = matA.restitution * matB.restitution;\n    }\n\n    c.si = overrideShapeA || si;\n    c.sj = overrideShapeB || sj;\n\n    return c;\n};\n\nNarrowphase.prototype.createFrictionEquationsFromContact = function(contactEquation, outArray){\n    var bodyA = contactEquation.bi;\n    var bodyB = contactEquation.bj;\n    var shapeA = contactEquation.si;\n    var shapeB = contactEquation.sj;\n\n    var world = this.world;\n    var cm = this.currentContactMaterial;\n\n    // If friction or restitution were specified in the material, use them\n    var friction = cm.friction;\n    var matA = shapeA.material || bodyA.material;\n    var matB = shapeB.material || bodyB.material;\n    if(matA && matB && matA.friction >= 0 && matB.friction >= 0){\n        friction = matA.friction * matB.friction;\n    }\n\n    if(friction > 0){\n\n        // Create 2 tangent equations\n        var mug = friction * world.gravity.length();\n        var reducedMass = (bodyA.invMass + bodyB.invMass);\n        if(reducedMass > 0){\n            reducedMass = 1/reducedMass;\n        }\n        var pool = this.frictionEquationPool;\n        var c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\n        var c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA,bodyB,mug*reducedMass);\n\n        c1.bi = c2.bi = bodyA;\n        c1.bj = c2.bj = bodyB;\n        c1.minForce = c2.minForce = -mug*reducedMass;\n        c1.maxForce = c2.maxForce = mug*reducedMass;\n\n        // Copy over the relative vectors\n        c1.ri.copy(contactEquation.ri);\n        c1.rj.copy(contactEquation.rj);\n        c2.ri.copy(contactEquation.ri);\n        c2.rj.copy(contactEquation.rj);\n\n        // Construct tangents\n        contactEquation.ni.tangents(c1.t, c2.t);\n\n        // Set spook params\n        c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n        c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n\n        c1.enabled = c2.enabled = contactEquation.enabled;\n\n        outArray.push(c1, c2);\n\n        return true;\n    }\n\n    return false;\n};\n\nvar averageNormal = new Vec3();\nvar averageContactPointA = new Vec3();\nvar averageContactPointB = new Vec3();\n\n// Take the average N latest contact point on the plane.\nNarrowphase.prototype.createFrictionFromAverage = function(numContacts){\n    // The last contactEquation\n    var c = this.result[this.result.length - 1];\n\n    // Create the result: two \"average\" friction equations\n    if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\n        return;\n    }\n\n    var f1 = this.frictionResult[this.frictionResult.length - 2];\n    var f2 = this.frictionResult[this.frictionResult.length - 1];\n\n    averageNormal.setZero();\n    averageContactPointA.setZero();\n    averageContactPointB.setZero();\n\n    var bodyA = c.bi;\n    var bodyB = c.bj;\n    for(var i=0; i!==numContacts; i++){\n        c = this.result[this.result.length - 1 - i];\n        if(c.bodyA !== bodyA){\n            averageNormal.vadd(c.ni, averageNormal);\n            averageContactPointA.vadd(c.ri, averageContactPointA);\n            averageContactPointB.vadd(c.rj, averageContactPointB);\n        } else {\n            averageNormal.vsub(c.ni, averageNormal);\n            averageContactPointA.vadd(c.rj, averageContactPointA);\n            averageContactPointB.vadd(c.ri, averageContactPointB);\n        }\n    }\n\n    var invNumContacts = 1 / numContacts;\n    averageContactPointA.scale(invNumContacts, f1.ri);\n    averageContactPointB.scale(invNumContacts, f1.rj);\n    f2.ri.copy(f1.ri); // Should be the same\n    f2.rj.copy(f1.rj);\n    averageNormal.normalize();\n    averageNormal.tangents(f1.t, f2.t);\n    // return eq;\n};\n\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpQuat1 = new Quaternion();\nvar tmpQuat2 = new Quaternion();\n\n/**\n * Generate all contacts between a list of body pairs\n * @method getContacts\n * @param {array} p1 Array of body indices\n * @param {array} p2 Array of body indices\n * @param {World} world\n * @param {array} result Array to store generated contacts\n * @param {array} oldcontacts Optional. Array of reusable contact objects\n */\nNarrowphase.prototype.getContacts = function(p1, p2, world, result, oldcontacts, frictionResult, frictionPool){\n    // Save old contact objects\n    this.contactPointPool = oldcontacts;\n    this.frictionEquationPool = frictionPool;\n    this.result = result;\n    this.frictionResult = frictionResult;\n\n    var qi = tmpQuat1;\n    var qj = tmpQuat2;\n    var xi = tmpVec1;\n    var xj = tmpVec2;\n\n    for(var k=0, N=p1.length; k!==N; k++){\n\n        // Get current collision bodies\n        var bi = p1[k],\n            bj = p2[k];\n\n        // Get contact material\n        var bodyContactMaterial = null;\n        if(bi.material && bj.material){\n            bodyContactMaterial = world.getContactMaterial(bi.material,bj.material) || null;\n        }\n\n        var justTest = (\n            (\n                (bi.type & Body.KINEMATIC) && (bj.type & Body.STATIC)\n            ) || (\n                (bi.type & Body.STATIC) && (bj.type & Body.KINEMATIC)\n            ) || (\n                (bi.type & Body.KINEMATIC) && (bj.type & Body.KINEMATIC)\n            )\n        );\n\n        for (var i = 0; i < bi.shapes.length; i++) {\n            bi.quaternion.mult(bi.shapeOrientations[i], qi);\n            bi.quaternion.vmult(bi.shapeOffsets[i], xi);\n            xi.vadd(bi.position, xi);\n            var si = bi.shapes[i];\n\n            for (var j = 0; j < bj.shapes.length; j++) {\n\n                // Compute world transform of shapes\n                bj.quaternion.mult(bj.shapeOrientations[j], qj);\n                bj.quaternion.vmult(bj.shapeOffsets[j], xj);\n                xj.vadd(bj.position, xj);\n                var sj = bj.shapes[j];\n\n                if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n                    continue;\n                }\n\n                // Get collision material\n                var shapeContactMaterial = null;\n                if(si.material && sj.material){\n                    shapeContactMaterial = world.getContactMaterial(si.material,sj.material) || null;\n                }\n\n                this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial;\n\n                // Get contacts\n                var resolver = this[si.type | sj.type];\n                if(resolver){\n                    var retval = false;\n                    if (si.type < sj.type) {\n                        retval = resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n                    } else {\n                        retval = resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj, justTest);\n                    }\n\n                    if(retval && justTest){\n                        // Register overlap\n                        world.shapeOverlapKeeper.set(si.id, sj.id);\n                        world.bodyOverlapKeeper.set(bi.id, bj.id);\n                    }\n                }\n            }\n        }\n    }\n};\n\nvar numWarnings = 0;\nvar maxWarnings = 10;\n\nfunction warn(msg){\n    if(numWarnings > maxWarnings){\n        return;\n    }\n\n    numWarnings++;\n\n    console.warn(msg);\n}\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.BOX] =\nNarrowphase.prototype.boxBox = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    si.convexPolyhedronRepresentation.material = si.material;\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj,si,sj,justTest);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.boxConvex = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexConvex(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj,justTest);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.PARTICLE] =\nNarrowphase.prototype.boxParticle = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexParticle(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj,justTest);\n};\n\n/**\n * @method sphereSphere\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE] =\nNarrowphase.prototype.sphereSphere = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    if(justTest){\n        return xi.distanceSquared(xj) < Math.pow(si.radius + sj.radius, 2);\n    }\n\n    // We will have only one contact in this case\n    var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n\n    // Contact normal\n    xj.vsub(xi, r.ni);\n    r.ni.normalize();\n\n    // Contact point locations\n    r.ri.copy(r.ni);\n    r.rj.copy(r.ni);\n    r.ri.mult(si.radius, r.ri);\n    r.rj.mult(-sj.radius, r.rj);\n\n    r.ri.vadd(xi, r.ri);\n    r.ri.vsub(bi.position, r.ri);\n\n    r.rj.vadd(xj, r.rj);\n    r.rj.vsub(bj.position, r.rj);\n\n    this.result.push(r);\n\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\n};\n\n/**\n * @method planeTrimesh\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nvar planeTrimesh_normal = new Vec3();\nvar planeTrimesh_relpos = new Vec3();\nvar planeTrimesh_projected = new Vec3();\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.TRIMESH] =\nNarrowphase.prototype.planeTrimesh = function(\n    planeShape,\n    trimeshShape,\n    planePos,\n    trimeshPos,\n    planeQuat,\n    trimeshQuat,\n    planeBody,\n    trimeshBody,\n    rsi,\n    rsj,\n    justTest\n){\n    // Make contacts!\n    var v = new Vec3();\n\n    var normal = planeTrimesh_normal;\n    normal.set(0,0,1);\n    planeQuat.vmult(normal,normal); // Turn normal according to plane\n\n    for(var i=0; i<trimeshShape.vertices.length / 3; i++){\n\n        // Get world vertex from trimesh\n        trimeshShape.getVertex(i, v);\n\n        // Safe up\n        var v2 = new Vec3();\n        v2.copy(v);\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n\n        // Check plane side\n        var relpos = planeTrimesh_relpos;\n        v.vsub(planePos, relpos);\n        var dot = normal.dot(relpos);\n\n        if(dot <= 0.0){\n            if(justTest){\n                return true;\n            }\n\n            var r = this.createContactEquation(planeBody,trimeshBody,planeShape,trimeshShape,rsi,rsj);\n\n            r.ni.copy(normal); // Contact normal is the plane normal\n\n            // Get vertex position projected on plane\n            var projected = planeTrimesh_projected;\n            normal.scale(relpos.dot(normal), projected);\n            v.vsub(projected,projected);\n\n            // ri is the projected world position minus plane position\n            r.ri.copy(projected);\n            r.ri.vsub(planeBody.position, r.ri);\n\n            r.rj.copy(v);\n            r.rj.vsub(trimeshBody.position, r.rj);\n\n            // Store result\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n    }\n};\n\n/**\n * @method sphereTrimesh\n * @param  {Shape}      sphereShape\n * @param  {Shape}      trimeshShape\n * @param  {Vec3}       spherePos\n * @param  {Vec3}       trimeshPos\n * @param  {Quaternion} sphereQuat\n * @param  {Quaternion} trimeshQuat\n * @param  {Body}       sphereBody\n * @param  {Body}       trimeshBody\n */\nvar sphereTrimesh_normal = new Vec3();\nvar sphereTrimesh_relpos = new Vec3();\nvar sphereTrimesh_projected = new Vec3();\nvar sphereTrimesh_v = new Vec3();\nvar sphereTrimesh_v2 = new Vec3();\nvar sphereTrimesh_edgeVertexA = new Vec3();\nvar sphereTrimesh_edgeVertexB = new Vec3();\nvar sphereTrimesh_edgeVector = new Vec3();\nvar sphereTrimesh_edgeVectorUnit = new Vec3();\nvar sphereTrimesh_localSpherePos = new Vec3();\nvar sphereTrimesh_tmp = new Vec3();\nvar sphereTrimesh_va = new Vec3();\nvar sphereTrimesh_vb = new Vec3();\nvar sphereTrimesh_vc = new Vec3();\nvar sphereTrimesh_localSphereAABB = new AABB();\nvar sphereTrimesh_triangles = [];\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.TRIMESH] =\nNarrowphase.prototype.sphereTrimesh = function (\n    sphereShape,\n    trimeshShape,\n    spherePos,\n    trimeshPos,\n    sphereQuat,\n    trimeshQuat,\n    sphereBody,\n    trimeshBody,\n    rsi,\n    rsj,\n    justTest\n) {\n\n    var edgeVertexA = sphereTrimesh_edgeVertexA;\n    var edgeVertexB = sphereTrimesh_edgeVertexB;\n    var edgeVector = sphereTrimesh_edgeVector;\n    var edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\n    var localSpherePos = sphereTrimesh_localSpherePos;\n    var tmp = sphereTrimesh_tmp;\n    var localSphereAABB = sphereTrimesh_localSphereAABB;\n    var v2 = sphereTrimesh_v2;\n    var relpos = sphereTrimesh_relpos;\n    var triangles = sphereTrimesh_triangles;\n\n    // Convert sphere position to local in the trimesh\n    Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos);\n\n    // Get the aabb of the sphere locally in the trimesh\n    var sphereRadius = sphereShape.radius;\n    localSphereAABB.lowerBound.set(\n        localSpherePos.x - sphereRadius,\n        localSpherePos.y - sphereRadius,\n        localSpherePos.z - sphereRadius\n    );\n    localSphereAABB.upperBound.set(\n        localSpherePos.x + sphereRadius,\n        localSpherePos.y + sphereRadius,\n        localSpherePos.z + sphereRadius\n    );\n\n    trimeshShape.getTrianglesInAABB(localSphereAABB, triangles);\n    //for (var i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\n\n    // Vertices\n    var v = sphereTrimesh_v;\n    var radiusSquared = sphereShape.radius * sphereShape.radius;\n    for(var i=0; i<triangles.length; i++){\n        for (var j = 0; j < 3; j++) {\n\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v);\n\n            // Check vertex overlap in sphere\n            v.vsub(localSpherePos, relpos);\n\n            if(relpos.norm2() <= radiusSquared){\n\n                // Safe up\n                v2.copy(v);\n                Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n\n                v.vsub(spherePos, relpos);\n\n                if(justTest){\n                    return true;\n                }\n\n                var r = this.createContactEquation(sphereBody,trimeshBody,sphereShape,trimeshShape,rsi,rsj);\n                r.ni.copy(relpos);\n                r.ni.normalize();\n\n                // ri is the vector from sphere center to the sphere surface\n                r.ri.copy(r.ni);\n                r.ri.scale(sphereShape.radius, r.ri);\n                r.ri.vadd(spherePos, r.ri);\n                r.ri.vsub(sphereBody.position, r.ri);\n\n                r.rj.copy(v);\n                r.rj.vsub(trimeshBody.position, r.rj);\n\n                // Store result\n                this.result.push(r);\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n    }\n\n    // Check all edges\n    for(var i=0; i<triangles.length; i++){\n        for (var j = 0; j < 3; j++) {\n\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\n            trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + ((j+1)%3)], edgeVertexB);\n            edgeVertexB.vsub(edgeVertexA, edgeVector);\n\n            // Project sphere position to the edge\n            localSpherePos.vsub(edgeVertexB, tmp);\n            var positionAlongEdgeB = tmp.dot(edgeVector);\n\n            localSpherePos.vsub(edgeVertexA, tmp);\n            var positionAlongEdgeA = tmp.dot(edgeVector);\n\n            if(positionAlongEdgeA > 0 && positionAlongEdgeB < 0){\n\n                // Now check the orthogonal distance from edge to sphere center\n                localSpherePos.vsub(edgeVertexA, tmp);\n\n                edgeVectorUnit.copy(edgeVector);\n                edgeVectorUnit.normalize();\n                positionAlongEdgeA = tmp.dot(edgeVectorUnit);\n\n                edgeVectorUnit.scale(positionAlongEdgeA, tmp);\n                tmp.vadd(edgeVertexA, tmp);\n\n                // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\n                var dist = tmp.distanceTo(localSpherePos);\n                if(dist < sphereShape.radius){\n\n                    if(justTest){\n                        return true;\n                    }\n\n                    var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape,rsi,rsj);\n\n                    tmp.vsub(localSpherePos, r.ni);\n                    r.ni.normalize();\n                    r.ni.scale(sphereShape.radius, r.ri);\n\n                    Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n                    tmp.vsub(trimeshBody.position, r.rj);\n\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n                    Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n\n                    this.result.push(r);\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\n                }\n            }\n        }\n    }\n\n    // Triangle faces\n    var va = sphereTrimesh_va;\n    var vb = sphereTrimesh_vb;\n    var vc = sphereTrimesh_vc;\n    var normal = sphereTrimesh_normal;\n    for(var i=0, N = triangles.length; i !== N; i++){\n        trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\n        trimeshShape.getNormal(triangles[i], normal);\n        localSpherePos.vsub(va, tmp);\n        var dist = tmp.dot(normal);\n        normal.scale(dist, tmp);\n        localSpherePos.vsub(tmp, tmp);\n\n        // tmp is now the sphere position projected to the triangle plane\n        dist = tmp.distanceTo(localSpherePos);\n        if(Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius){\n            if(justTest){\n                return true;\n            }\n            var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape,rsi,rsj);\n\n            tmp.vsub(localSpherePos, r.ni);\n            r.ni.normalize();\n            r.ni.scale(sphereShape.radius, r.ri);\n\n            Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n            tmp.vsub(trimeshBody.position, r.rj);\n\n            Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n            Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n    }\n\n    triangles.length = 0;\n};\n\nvar point_on_plane_to_sphere = new Vec3();\nvar plane_to_sphere_ortho = new Vec3();\n\n/**\n * @method spherePlane\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.PLANE] =\nNarrowphase.prototype.spherePlane = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    // We will have one contact in this case\n    var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n\n    // Contact normal\n    r.ni.set(0,0,1);\n    qj.vmult(r.ni, r.ni);\n    r.ni.negate(r.ni); // body i is the sphere, flip normal\n    r.ni.normalize(); // Needed?\n\n    // Vector from sphere center to contact point\n    r.ni.mult(si.radius, r.ri);\n\n    // Project down sphere on plane\n    xi.vsub(xj, point_on_plane_to_sphere);\n    r.ni.mult(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\n    point_on_plane_to_sphere.vsub(plane_to_sphere_ortho,r.rj); // The sphere position projected to plane\n\n    if(-point_on_plane_to_sphere.dot(r.ni) <= si.radius){\n\n        if(justTest){\n            return true;\n        }\n\n        // Make it relative to the body\n        var ri = r.ri;\n        var rj = r.rj;\n        ri.vadd(xi, ri);\n        ri.vsub(bi.position, ri);\n        rj.vadd(xj, rj);\n        rj.vsub(bj.position, rj);\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\n// See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\nvar pointInPolygon_edge = new Vec3();\nvar pointInPolygon_edge_x_normal = new Vec3();\nvar pointInPolygon_vtp = new Vec3();\nfunction pointInPolygon(verts, normal, p){\n    var positiveResult = null;\n    var N = verts.length;\n    for(var i=0; i!==N; i++){\n        var v = verts[i];\n\n        // Get edge to the next vertex\n        var edge = pointInPolygon_edge;\n        verts[(i+1) % (N)].vsub(v,edge);\n\n        // Get cross product between polygon normal and the edge\n        var edge_x_normal = pointInPolygon_edge_x_normal;\n        //var edge_x_normal = new Vec3();\n        edge.cross(normal,edge_x_normal);\n\n        // Get vector between point and current vertex\n        var vertex_to_p = pointInPolygon_vtp;\n        p.vsub(v,vertex_to_p);\n\n        // This dot product determines which side of the edge the point is\n        var r = edge_x_normal.dot(vertex_to_p);\n\n        // If all such dot products have same sign, we are inside the polygon.\n        if(positiveResult===null || (r>0 && positiveResult===true) || (r<=0 && positiveResult===false)){\n            if(positiveResult===null){\n                positiveResult = r>0;\n            }\n            continue;\n        } else {\n            return false; // Encountered some other sign. Exit.\n        }\n    }\n\n    // If we got here, all dot products were of the same sign.\n    return true;\n}\n\nvar box_to_sphere = new Vec3();\nvar sphereBox_ns = new Vec3();\nvar sphereBox_ns1 = new Vec3();\nvar sphereBox_ns2 = new Vec3();\nvar sphereBox_sides = [new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3(),new Vec3()];\nvar sphereBox_sphere_to_corner = new Vec3();\nvar sphereBox_side_ns = new Vec3();\nvar sphereBox_side_ns1 = new Vec3();\nvar sphereBox_side_ns2 = new Vec3();\n\n/**\n * @method sphereBox\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.BOX] =\nNarrowphase.prototype.sphereBox = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    var v3pool = this.v3pool;\n\n    // we refer to the box as body j\n    var sides = sphereBox_sides;\n    xi.vsub(xj,box_to_sphere);\n    sj.getSideNormals(sides,qj);\n    var R =     si.radius;\n    var penetrating_sides = [];\n\n    // Check side (plane) intersections\n    var found = false;\n\n    // Store the resulting side penetration info\n    var side_ns = sphereBox_side_ns;\n    var side_ns1 = sphereBox_side_ns1;\n    var side_ns2 = sphereBox_side_ns2;\n    var side_h = null;\n    var side_penetrations = 0;\n    var side_dot1 = 0;\n    var side_dot2 = 0;\n    var side_distance = null;\n    for(var idx=0,nsides=sides.length; idx!==nsides && found===false; idx++){\n        // Get the plane side normal (ns)\n        var ns = sphereBox_ns;\n        ns.copy(sides[idx]);\n\n        var h = ns.norm();\n        ns.normalize();\n\n        // The normal/distance dot product tells which side of the plane we are\n        var dot = box_to_sphere.dot(ns);\n\n        if(dot<h+R && dot>0){\n            // Intersects plane. Now check the other two dimensions\n            var ns1 = sphereBox_ns1;\n            var ns2 = sphereBox_ns2;\n            ns1.copy(sides[(idx+1)%3]);\n            ns2.copy(sides[(idx+2)%3]);\n            var h1 = ns1.norm();\n            var h2 = ns2.norm();\n            ns1.normalize();\n            ns2.normalize();\n            var dot1 = box_to_sphere.dot(ns1);\n            var dot2 = box_to_sphere.dot(ns2);\n            if(dot1<h1 && dot1>-h1 && dot2<h2 && dot2>-h2){\n                var dist = Math.abs(dot-h-R);\n                if(side_distance===null || dist < side_distance){\n                    side_distance = dist;\n                    side_dot1 = dot1;\n                    side_dot2 = dot2;\n                    side_h = h;\n                    side_ns.copy(ns);\n                    side_ns1.copy(ns1);\n                    side_ns2.copy(ns2);\n                    side_penetrations++;\n\n                    if(justTest){\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    if(side_penetrations){\n        found = true;\n        var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n        side_ns.mult(-R,r.ri); // Sphere r\n        r.ni.copy(side_ns);\n        r.ni.negate(r.ni); // Normal should be out of sphere\n        side_ns.mult(side_h,side_ns);\n        side_ns1.mult(side_dot1,side_ns1);\n        side_ns.vadd(side_ns1,side_ns);\n        side_ns2.mult(side_dot2,side_ns2);\n        side_ns.vadd(side_ns2,r.rj);\n\n        // Make relative to bodies\n        r.ri.vadd(xi, r.ri);\n        r.ri.vsub(bi.position, r.ri);\n        r.rj.vadd(xj, r.rj);\n        r.rj.vsub(bj.position, r.rj);\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n\n    // Check corners\n    var rj = v3pool.get();\n    var sphere_to_corner = sphereBox_sphere_to_corner;\n    for(var j=0; j!==2 && !found; j++){\n        for(var k=0; k!==2 && !found; k++){\n            for(var l=0; l!==2 && !found; l++){\n                rj.set(0,0,0);\n                if(j){\n                    rj.vadd(sides[0],rj);\n                } else {\n                    rj.vsub(sides[0],rj);\n                }\n                if(k){\n                    rj.vadd(sides[1],rj);\n                } else {\n                    rj.vsub(sides[1],rj);\n                }\n                if(l){\n                    rj.vadd(sides[2],rj);\n                } else {\n                    rj.vsub(sides[2],rj);\n                }\n\n                // World position of corner\n                xj.vadd(rj,sphere_to_corner);\n                sphere_to_corner.vsub(xi,sphere_to_corner);\n\n                if(sphere_to_corner.norm2() < R*R){\n                    if(justTest){\n                        return true;\n                    }\n                    found = true;\n                    var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n                    r.ri.copy(sphere_to_corner);\n                    r.ri.normalize();\n                    r.ni.copy(r.ri);\n                    r.ri.mult(R,r.ri);\n                    r.rj.copy(rj);\n\n                    // Make relative to bodies\n                    r.ri.vadd(xi, r.ri);\n                    r.ri.vsub(bi.position, r.ri);\n                    r.rj.vadd(xj, r.rj);\n                    r.rj.vsub(bj.position, r.rj);\n\n                    this.result.push(r);\n                    this.createFrictionEquationsFromContact(r, this.frictionResult);\n                }\n            }\n        }\n    }\n    v3pool.release(rj);\n    rj = null;\n\n    // Check edges\n    var edgeTangent = v3pool.get();\n    var edgeCenter = v3pool.get();\n    var r = v3pool.get(); // r = edge center to sphere center\n    var orthogonal = v3pool.get();\n    var dist = v3pool.get();\n    var Nsides = sides.length;\n    for(var j=0; j!==Nsides && !found; j++){\n        for(var k=0; k!==Nsides && !found; k++){\n            if(j%3 !== k%3){\n                // Get edge tangent\n                sides[k].cross(sides[j],edgeTangent);\n                edgeTangent.normalize();\n                sides[j].vadd(sides[k], edgeCenter);\n                r.copy(xi);\n                r.vsub(edgeCenter,r);\n                r.vsub(xj,r);\n                var orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\n                edgeTangent.mult(orthonorm,orthogonal); // Vector from edge center to sphere center in the tangent direction\n\n                // Find the third side orthogonal to this one\n                var l = 0;\n                while(l===j%3 || l===k%3){\n                    l++;\n                }\n\n                // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\n                dist.copy(xi);\n                dist.vsub(orthogonal,dist);\n                dist.vsub(edgeCenter,dist);\n                dist.vsub(xj,dist);\n\n                // Distances in tangent direction and distance in the plane orthogonal to it\n                var tdist = Math.abs(orthonorm);\n                var ndist = dist.norm();\n\n                if(tdist < sides[l].norm() && ndist<R){\n                    if(justTest){\n                        return true;\n                    }\n                    found = true;\n                    var res = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n                    edgeCenter.vadd(orthogonal,res.rj); // box rj\n                    res.rj.copy(res.rj);\n                    dist.negate(res.ni);\n                    res.ni.normalize();\n\n                    res.ri.copy(res.rj);\n                    res.ri.vadd(xj,res.ri);\n                    res.ri.vsub(xi,res.ri);\n                    res.ri.normalize();\n                    res.ri.mult(R,res.ri);\n\n                    // Make relative to bodies\n                    res.ri.vadd(xi, res.ri);\n                    res.ri.vsub(bi.position, res.ri);\n                    res.rj.vadd(xj, res.rj);\n                    res.rj.vsub(bj.position, res.rj);\n\n                    this.result.push(res);\n                    this.createFrictionEquationsFromContact(res, this.frictionResult);\n                }\n            }\n        }\n    }\n    v3pool.release(edgeTangent,edgeCenter,r,orthogonal,dist);\n};\n\nvar convex_to_sphere = new Vec3();\nvar sphereConvex_edge = new Vec3();\nvar sphereConvex_edgeUnit = new Vec3();\nvar sphereConvex_sphereToCorner = new Vec3();\nvar sphereConvex_worldCorner = new Vec3();\nvar sphereConvex_worldNormal = new Vec3();\nvar sphereConvex_worldPoint = new Vec3();\nvar sphereConvex_worldSpherePointClosestToPlane = new Vec3();\nvar sphereConvex_penetrationVec = new Vec3();\nvar sphereConvex_sphereToWorldPoint = new Vec3();\n\n/**\n * @method sphereConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.sphereConvex = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    var v3pool = this.v3pool;\n    xi.vsub(xj,convex_to_sphere);\n    var normals = sj.faceNormals;\n    var faces = sj.faces;\n    var verts = sj.vertices;\n    var R =     si.radius;\n    var penetrating_sides = [];\n\n    // if(convex_to_sphere.norm2() > si.boundingSphereRadius + sj.boundingSphereRadius){\n    //     return;\n    // }\n\n    // Check corners\n    for(var i=0; i!==verts.length; i++){\n        var v = verts[i];\n\n        // World position of corner\n        var worldCorner = sphereConvex_worldCorner;\n        qj.vmult(v,worldCorner);\n        xj.vadd(worldCorner,worldCorner);\n        var sphere_to_corner = sphereConvex_sphereToCorner;\n        worldCorner.vsub(xi, sphere_to_corner);\n        if(sphere_to_corner.norm2() < R * R){\n            if(justTest){\n                return true;\n            }\n            found = true;\n            var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n            r.ri.copy(sphere_to_corner);\n            r.ri.normalize();\n            r.ni.copy(r.ri);\n            r.ri.mult(R,r.ri);\n            worldCorner.vsub(xj,r.rj);\n\n            // Should be relative to the body.\n            r.ri.vadd(xi, r.ri);\n            r.ri.vsub(bi.position, r.ri);\n\n            // Should be relative to the body.\n            r.rj.vadd(xj, r.rj);\n            r.rj.vsub(bj.position, r.rj);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n            return;\n        }\n    }\n\n    // Check side (plane) intersections\n    var found = false;\n    for(var i=0, nfaces=faces.length; i!==nfaces && found===false; i++){\n        var normal = normals[i];\n        var face = faces[i];\n\n        // Get world-transformed normal of the face\n        var worldNormal = sphereConvex_worldNormal;\n        qj.vmult(normal,worldNormal);\n\n        // Get a world vertex from the face\n        var worldPoint = sphereConvex_worldPoint;\n        qj.vmult(verts[face[0]],worldPoint);\n        worldPoint.vadd(xj,worldPoint);\n\n        // Get a point on the sphere, closest to the face normal\n        var worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\n        worldNormal.mult(-R, worldSpherePointClosestToPlane);\n        xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane);\n\n        // Vector from a face point to the closest point on the sphere\n        var penetrationVec = sphereConvex_penetrationVec;\n        worldSpherePointClosestToPlane.vsub(worldPoint,penetrationVec);\n\n        // The penetration. Negative value means overlap.\n        var penetration = penetrationVec.dot(worldNormal);\n\n        var worldPointToSphere = sphereConvex_sphereToWorldPoint;\n        xi.vsub(worldPoint, worldPointToSphere);\n\n        if(penetration < 0 && worldPointToSphere.dot(worldNormal)>0){\n            // Intersects plane. Now check if the sphere is inside the face polygon\n            var faceVerts = []; // Face vertices, in world coords\n            for(var j=0, Nverts=face.length; j!==Nverts; j++){\n                var worldVertex = v3pool.get();\n                qj.vmult(verts[face[j]], worldVertex);\n                xj.vadd(worldVertex,worldVertex);\n                faceVerts.push(worldVertex);\n            }\n\n            if(pointInPolygon(faceVerts,worldNormal,xi)){ // Is the sphere center in the face polygon?\n                if(justTest){\n                    return true;\n                }\n                found = true;\n                var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n\n                worldNormal.mult(-R, r.ri); // Contact offset, from sphere center to contact\n                worldNormal.negate(r.ni); // Normal pointing out of sphere\n\n                var penetrationVec2 = v3pool.get();\n                worldNormal.mult(-penetration, penetrationVec2);\n                var penetrationSpherePoint = v3pool.get();\n                worldNormal.mult(-R, penetrationSpherePoint);\n\n                //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\n                xi.vsub(xj,r.rj);\n                r.rj.vadd(penetrationSpherePoint,r.rj);\n                r.rj.vadd(penetrationVec2 , r.rj);\n\n                // Should be relative to the body.\n                r.rj.vadd(xj, r.rj);\n                r.rj.vsub(bj.position, r.rj);\n\n                // Should be relative to the body.\n                r.ri.vadd(xi, r.ri);\n                r.ri.vsub(bi.position, r.ri);\n\n                v3pool.release(penetrationVec2);\n                v3pool.release(penetrationSpherePoint);\n\n                this.result.push(r);\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n\n                // Release world vertices\n                for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                    v3pool.release(faceVerts[j]);\n                }\n\n                return; // We only expect *one* face contact\n            } else {\n                // Edge?\n                for(var j=0; j!==face.length; j++){\n\n                    // Get two world transformed vertices\n                    var v1 = v3pool.get();\n                    var v2 = v3pool.get();\n                    qj.vmult(verts[face[(j+1)%face.length]], v1);\n                    qj.vmult(verts[face[(j+2)%face.length]], v2);\n                    xj.vadd(v1, v1);\n                    xj.vadd(v2, v2);\n\n                    // Construct edge vector\n                    var edge = sphereConvex_edge;\n                    v2.vsub(v1,edge);\n\n                    // Construct the same vector, but normalized\n                    var edgeUnit = sphereConvex_edgeUnit;\n                    edge.unit(edgeUnit);\n\n                    // p is xi projected onto the edge\n                    var p = v3pool.get();\n                    var v1_to_xi = v3pool.get();\n                    xi.vsub(v1, v1_to_xi);\n                    var dot = v1_to_xi.dot(edgeUnit);\n                    edgeUnit.mult(dot, p);\n                    p.vadd(v1, p);\n\n                    // Compute a vector from p to the center of the sphere\n                    var xi_to_p = v3pool.get();\n                    p.vsub(xi, xi_to_p);\n\n                    // Collision if the edge-sphere distance is less than the radius\n                    // AND if p is in between v1 and v2\n                    if(dot > 0 && dot*dot<edge.norm2() && xi_to_p.norm2() < R*R){ // Collision if the edge-sphere distance is less than the radius\n                        // Edge contact!\n                        if(justTest){\n                            return true;\n                        }\n                        var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n                        p.vsub(xj,r.rj);\n\n                        p.vsub(xi,r.ni);\n                        r.ni.normalize();\n\n                        r.ni.mult(R,r.ri);\n\n                        // Should be relative to the body.\n                        r.rj.vadd(xj, r.rj);\n                        r.rj.vsub(bj.position, r.rj);\n\n                        // Should be relative to the body.\n                        r.ri.vadd(xi, r.ri);\n                        r.ri.vsub(bi.position, r.ri);\n\n                        this.result.push(r);\n                        this.createFrictionEquationsFromContact(r, this.frictionResult);\n\n                        // Release world vertices\n                        for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                            v3pool.release(faceVerts[j]);\n                        }\n\n                        v3pool.release(v1);\n                        v3pool.release(v2);\n                        v3pool.release(p);\n                        v3pool.release(xi_to_p);\n                        v3pool.release(v1_to_xi);\n\n                        return;\n                    }\n\n                    v3pool.release(v1);\n                    v3pool.release(v2);\n                    v3pool.release(p);\n                    v3pool.release(xi_to_p);\n                    v3pool.release(v1_to_xi);\n                }\n            }\n\n            // Release world vertices\n            for(var j=0, Nfaceverts=faceVerts.length; j!==Nfaceverts; j++){\n                v3pool.release(faceVerts[j]);\n            }\n        }\n    }\n};\n\nvar planeBox_normal = new Vec3();\nvar plane_to_corner = new Vec3();\n\n/**\n * @method planeBox\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.BOX] =\nNarrowphase.prototype.planeBox = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    sj.convexPolyhedronRepresentation.material = sj.material;\n    sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n    sj.convexPolyhedronRepresentation.id = sj.id;\n    return this.planeConvex(si,sj.convexPolyhedronRepresentation,xi,xj,qi,qj,bi,bj,si,sj,justTest);\n};\n\nvar planeConvex_v = new Vec3();\nvar planeConvex_normal = new Vec3();\nvar planeConvex_relpos = new Vec3();\nvar planeConvex_projected = new Vec3();\n\n/**\n * @method planeConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.planeConvex = function(\n    planeShape,\n    convexShape,\n    planePosition,\n    convexPosition,\n    planeQuat,\n    convexQuat,\n    planeBody,\n    convexBody,\n    si,\n    sj,\n    justTest\n){\n    // Simply return the points behind the plane.\n    var worldVertex = planeConvex_v,\n        worldNormal = planeConvex_normal;\n    worldNormal.set(0,0,1);\n    planeQuat.vmult(worldNormal,worldNormal); // Turn normal according to plane orientation\n\n    var numContacts = 0;\n    var relpos = planeConvex_relpos;\n    for(var i = 0; i !== convexShape.vertices.length; i++){\n\n        // Get world convex vertex\n        worldVertex.copy(convexShape.vertices[i]);\n        convexQuat.vmult(worldVertex, worldVertex);\n        convexPosition.vadd(worldVertex, worldVertex);\n        worldVertex.vsub(planePosition, relpos);\n\n        var dot = worldNormal.dot(relpos);\n        if(dot <= 0.0){\n            if(justTest){\n                return true;\n            }\n\n            var r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape, si, sj);\n\n            // Get vertex position projected on plane\n            var projected = planeConvex_projected;\n            worldNormal.mult(worldNormal.dot(relpos),projected);\n            worldVertex.vsub(projected, projected);\n            projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\n\n            r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\n\n            // rj is now just the vector from the convex center to the vertex\n            worldVertex.vsub(convexPosition, r.rj);\n\n            // Make it relative to the body\n            r.ri.vadd(planePosition, r.ri);\n            r.ri.vsub(planeBody.position, r.ri);\n            r.rj.vadd(convexPosition, r.rj);\n            r.rj.vsub(convexBody.position, r.rj);\n\n            this.result.push(r);\n            numContacts++;\n            if(!this.enableFrictionReduction){\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n    }\n\n    if(this.enableFrictionReduction && numContacts){\n        this.createFrictionFromAverage(numContacts);\n    }\n};\n\nvar convexConvex_sepAxis = new Vec3();\nvar convexConvex_q = new Vec3();\n\n/**\n * @method convexConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.convexConvex = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest,faceListA,faceListB){\n    var sepAxis = convexConvex_sepAxis;\n\n    if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n        return;\n    }\n\n    if(si.findSeparatingAxis(sj,xi,qi,xj,qj,sepAxis,faceListA,faceListB)){\n        var res = [];\n        var q = convexConvex_q;\n        si.clipAgainstHull(xi,qi,sj,xj,qj,sepAxis,-100,100,res);\n        var numContacts = 0;\n        for(var j = 0; j !== res.length; j++){\n            if(justTest){\n                return true;\n            }\n            var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n                ri = r.ri,\n                rj = r.rj;\n            sepAxis.negate(r.ni);\n            res[j].normal.negate(q);\n            q.mult(res[j].depth, q);\n            res[j].point.vadd(q, ri);\n            rj.copy(res[j].point);\n\n            // Contact points are in world coordinates. Transform back to relative\n            ri.vsub(xi,ri);\n            rj.vsub(xj,rj);\n\n            // Make relative to bodies\n            ri.vadd(xi, ri);\n            ri.vsub(bi.position, ri);\n            rj.vadd(xj, rj);\n            rj.vsub(bj.position, rj);\n\n            this.result.push(r);\n            numContacts++;\n            if(!this.enableFrictionReduction){\n                this.createFrictionEquationsFromContact(r, this.frictionResult);\n            }\n        }\n        if(this.enableFrictionReduction && numContacts){\n            this.createFrictionFromAverage(numContacts);\n        }\n    }\n};\n\n\n/**\n * @method convexTrimesh\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n// Narrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.TRIMESH] =\n// Narrowphase.prototype.convexTrimesh = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\n//     var sepAxis = convexConvex_sepAxis;\n\n//     if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n//         return;\n//     }\n\n//     // Construct a temp hull for each triangle\n//     var hullB = new ConvexPolyhedron();\n\n//     hullB.faces = [[0,1,2]];\n//     var va = new Vec3();\n//     var vb = new Vec3();\n//     var vc = new Vec3();\n//     hullB.vertices = [\n//         va,\n//         vb,\n//         vc\n//     ];\n\n//     for (var i = 0; i < sj.indices.length / 3; i++) {\n\n//         var triangleNormal = new Vec3();\n//         sj.getNormal(i, triangleNormal);\n//         hullB.faceNormals = [triangleNormal];\n\n//         sj.getTriangleVertices(i, va, vb, vc);\n\n//         var d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n//         if(!d){\n//             triangleNormal.scale(-1, triangleNormal);\n//             d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n\n//             if(!d){\n//                 continue;\n//             }\n//         }\n\n//         var res = [];\n//         var q = convexConvex_q;\n//         si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\n//         for(var j = 0; j !== res.length; j++){\n//             var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n//                 ri = r.ri,\n//                 rj = r.rj;\n//             r.ni.copy(triangleNormal);\n//             r.ni.negate(r.ni);\n//             res[j].normal.negate(q);\n//             q.mult(res[j].depth, q);\n//             res[j].point.vadd(q, ri);\n//             rj.copy(res[j].point);\n\n//             // Contact points are in world coordinates. Transform back to relative\n//             ri.vsub(xi,ri);\n//             rj.vsub(xj,rj);\n\n//             // Make relative to bodies\n//             ri.vadd(xi, ri);\n//             ri.vsub(bi.position, ri);\n//             rj.vadd(xj, rj);\n//             rj.vsub(bj.position, rj);\n\n//             result.push(r);\n//         }\n//     }\n// };\n\nvar particlePlane_normal = new Vec3();\nvar particlePlane_relpos = new Vec3();\nvar particlePlane_projected = new Vec3();\n\n/**\n * @method particlePlane\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.PARTICLE] =\nNarrowphase.prototype.planeParticle = function(sj,si,xj,xi,qj,qi,bj,bi,rsi,rsj,justTest){\n    var normal = particlePlane_normal;\n    normal.set(0,0,1);\n    bj.quaternion.vmult(normal,normal); // Turn normal according to plane orientation\n    var relpos = particlePlane_relpos;\n    xi.vsub(bj.position,relpos);\n    var dot = normal.dot(relpos);\n    if(dot <= 0.0){\n\n        if(justTest){\n            return true;\n        }\n\n        var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n        r.ni.copy(normal); // Contact normal is the plane normal\n        r.ni.negate(r.ni);\n        r.ri.set(0,0,0); // Center of particle\n\n        // Get particle position projected on plane\n        var projected = particlePlane_projected;\n        normal.mult(normal.dot(xi),projected);\n        xi.vsub(projected,projected);\n        //projected.vadd(bj.position,projected);\n\n        // rj is now the projected world position minus plane position\n        r.rj.copy(projected);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\nvar particleSphere_normal = new Vec3();\n\n/**\n * @method particleSphere\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.SPHERE] =\nNarrowphase.prototype.sphereParticle = function(sj,si,xj,xi,qj,qi,bj,bi,rsi,rsj,justTest){\n    // The normal is the unit vector from sphere center to particle center\n    var normal = particleSphere_normal;\n    normal.set(0,0,1);\n    xi.vsub(xj,normal);\n    var lengthSquared = normal.norm2();\n\n    if(lengthSquared <= sj.radius * sj.radius){\n        if(justTest){\n            return true;\n        }\n        var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n        normal.normalize();\n        r.rj.copy(normal);\n        r.rj.mult(sj.radius,r.rj);\n        r.ni.copy(normal); // Contact normal\n        r.ni.negate(r.ni);\n        r.ri.set(0,0,0); // Center of particle\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n};\n\n// WIP\nvar cqj = new Quaternion();\nvar convexParticle_local = new Vec3();\nvar convexParticle_normal = new Vec3();\nvar convexParticle_penetratedFaceNormal = new Vec3();\nvar convexParticle_vertexToParticle = new Vec3();\nvar convexParticle_worldPenetrationVec = new Vec3();\n\n/**\n * @method convexParticle\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON] =\nNarrowphase.prototype.convexParticle = function(sj,si,xj,xi,qj,qi,bj,bi,rsi,rsj,justTest){\n    var penetratedFaceIndex = -1;\n    var penetratedFaceNormal = convexParticle_penetratedFaceNormal;\n    var worldPenetrationVec = convexParticle_worldPenetrationVec;\n    var minPenetration = null;\n    var numDetectedFaces = 0;\n\n    // Convert particle position xi to local coords in the convex\n    var local = convexParticle_local;\n    local.copy(xi);\n    local.vsub(xj,local); // Convert position to relative the convex origin\n    qj.conjugate(cqj);\n    cqj.vmult(local,local);\n\n    if(sj.pointIsInside(local)){\n\n        if(sj.worldVerticesNeedsUpdate){\n            sj.computeWorldVertices(xj,qj);\n        }\n        if(sj.worldFaceNormalsNeedsUpdate){\n            sj.computeWorldFaceNormals(qj);\n        }\n\n        // For each world polygon in the polyhedra\n        for(var i=0,nfaces=sj.faces.length; i!==nfaces; i++){\n\n            // Construct world face vertices\n            var verts = [ sj.worldVertices[ sj.faces[i][0] ] ];\n            var normal = sj.worldFaceNormals[i];\n\n            // Check how much the particle penetrates the polygon plane.\n            xi.vsub(verts[0],convexParticle_vertexToParticle);\n            var penetration = -normal.dot(convexParticle_vertexToParticle);\n            if(minPenetration===null || Math.abs(penetration)<Math.abs(minPenetration)){\n\n                if(justTest){\n                    return true;\n                }\n\n                minPenetration = penetration;\n                penetratedFaceIndex = i;\n                penetratedFaceNormal.copy(normal);\n                numDetectedFaces++;\n            }\n        }\n\n        if(penetratedFaceIndex!==-1){\n            // Setup contact\n            var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj);\n            penetratedFaceNormal.mult(minPenetration, worldPenetrationVec);\n\n            // rj is the particle position projected to the face\n            worldPenetrationVec.vadd(xi,worldPenetrationVec);\n            worldPenetrationVec.vsub(xj,worldPenetrationVec);\n            r.rj.copy(worldPenetrationVec);\n            //var projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\n            //projectedToFace.copy(r.rj);\n\n            //qj.vmult(r.rj,r.rj);\n            penetratedFaceNormal.negate( r.ni ); // Contact normal\n            r.ri.set(0,0,0); // Center of particle\n\n            var ri = r.ri,\n                rj = r.rj;\n\n            // Make relative to bodies\n            ri.vadd(xi, ri);\n            ri.vsub(bi.position, ri);\n            rj.vadd(xj, rj);\n            rj.vsub(bj.position, rj);\n\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult);\n        } else {\n            console.warn(\"Point found inside convex, but did not find penetrating face!\");\n        }\n    }\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.boxHeightfield = function (si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,justTest){\n    si.convexPolyhedronRepresentation.material = si.material;\n    si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n    return this.convexHeightfield(si.convexPolyhedronRepresentation,sj,xi,xj,qi,qj,bi,bj,si,sj,justTest);\n};\n\nvar convexHeightfield_tmp1 = new Vec3();\nvar convexHeightfield_tmp2 = new Vec3();\nvar convexHeightfield_faceList = [0];\n\n/**\n * @method convexHeightfield\n */\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.convexHeightfield = function (\n    convexShape,\n    hfShape,\n    convexPos,\n    hfPos,\n    convexQuat,\n    hfQuat,\n    convexBody,\n    hfBody,\n    rsi,\n    rsj,\n    justTest\n){\n    var data = hfShape.data,\n        w = hfShape.elementSize,\n        radius = convexShape.boundingSphereRadius,\n        worldPillarOffset = convexHeightfield_tmp2,\n        faceList = convexHeightfield_faceList;\n\n    // Get sphere position to heightfield local!\n    var localConvexPos = convexHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos);\n\n    // Get the index of the data points to test against\n    var iMinX = Math.floor((localConvexPos.x - radius) / w) - 1,\n        iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1,\n        iMinY = Math.floor((localConvexPos.y - radius) / w) - 1,\n        iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1;\n\n    // Bail out if we are out of the terrain\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length){\n        return;\n    }\n\n    // Clamp index to edges\n    if(iMinX < 0){ iMinX = 0; }\n    if(iMaxX < 0){ iMaxX = 0; }\n    if(iMinY < 0){ iMinY = 0; }\n    if(iMaxY < 0){ iMaxY = 0; }\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\n\n    var minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // Bail out if we're cant touch the bounding height box\n    if(localConvexPos.z - radius > max || localConvexPos.z + radius < min){\n        return;\n    }\n\n    for(var i = iMinX; i < iMaxX; i++){\n        for(var j = iMinY; j < iMaxY; j++){\n\n            var intersecting = false;\n\n            // Lower triangle\n            hfShape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n                intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n            }\n\n            if(justTest && intersecting){\n                return true;\n            }\n\n            // Upper triangle\n            hfShape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n                intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n            }\n\n            if(justTest && intersecting){\n                return true;\n            }\n        }\n    }\n};\n\nvar sphereHeightfield_tmp1 = new Vec3();\nvar sphereHeightfield_tmp2 = new Vec3();\n\n/**\n * @method sphereHeightfield\n */\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.HEIGHTFIELD] =\nNarrowphase.prototype.sphereHeightfield = function (\n    sphereShape,\n    hfShape,\n    spherePos,\n    hfPos,\n    sphereQuat,\n    hfQuat,\n    sphereBody,\n    hfBody,\n    rsi,\n    rsj,\n    justTest\n){\n    var data = hfShape.data,\n        radius = sphereShape.radius,\n        w = hfShape.elementSize,\n        worldPillarOffset = sphereHeightfield_tmp2;\n\n    // Get sphere position to heightfield local!\n    var localSpherePos = sphereHeightfield_tmp1;\n    Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos);\n\n    // Get the index of the data points to test against\n    var iMinX = Math.floor((localSpherePos.x - radius) / w) - 1,\n        iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1,\n        iMinY = Math.floor((localSpherePos.y - radius) / w) - 1,\n        iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1;\n\n    // Bail out if we are out of the terrain\n    if(iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMaxY > data[0].length){\n        return;\n    }\n\n    // Clamp index to edges\n    if(iMinX < 0){ iMinX = 0; }\n    if(iMaxX < 0){ iMaxX = 0; }\n    if(iMinY < 0){ iMinY = 0; }\n    if(iMaxY < 0){ iMaxY = 0; }\n    if(iMinX >= data.length){ iMinX = data.length - 1; }\n    if(iMaxX >= data.length){ iMaxX = data.length - 1; }\n    if(iMaxY >= data[0].length){ iMaxY = data[0].length - 1; }\n    if(iMinY >= data[0].length){ iMinY = data[0].length - 1; }\n\n    var minMax = [];\n    hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n    var min = minMax[0];\n    var max = minMax[1];\n\n    // Bail out if we're cant touch the bounding height box\n    if(localSpherePos.z - radius > max || localSpherePos.z + radius < min){\n        return;\n    }\n\n    var result = this.result;\n    for(var i = iMinX; i < iMaxX; i++){\n        for(var j = iMinY; j < iMaxY; j++){\n\n            var numContactsBefore = result.length;\n\n            var intersecting = false;\n\n            // Lower triangle\n            hfShape.getConvexTrianglePillar(i, j, false);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n                intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n            }\n\n            if(justTest && intersecting){\n                return true;\n            }\n\n            // Upper triangle\n            hfShape.getConvexTrianglePillar(i, j, true);\n            Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n            if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n                intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n            }\n\n            if(justTest && intersecting){\n                return true;\n            }\n\n            var numContacts = result.length - numContactsBefore;\n\n            if(numContacts > 2){\n                return;\n            }\n            /*\n            // Skip all but 1\n            for (var k = 0; k < numContacts - 1; k++) {\n                result.pop();\n            }\n            */\n        }\n    }\n};\n","module.exports = ConvexPolyhedron;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Transform = require('../math/Transform');\n\n/**\n * A set of polygons describing a convex shape.\n * @class ConvexPolyhedron\n * @constructor\n * @extends Shape\n * @description The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\n * in the same 3D plane), instead these should be merged into one polygon.\n *\n * @param {array} points An array of Vec3's\n * @param {array} faces Array of integer arrays, describing which vertices that is included in each face.\n *\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\n * @author schteppe / https://github.com/schteppe\n * @see http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n *\n * @todo Move the clipping functions to ContactGenerator?\n * @todo Automatically merge coplanar polygons in constructor.\n */\nfunction ConvexPolyhedron(points, faces, uniqueAxes) {\n    var that = this;\n    Shape.call(this);\n    this.type = Shape.types.CONVEXPOLYHEDRON;\n\n    /**\n     * Array of Vec3\n     * @property vertices\n     * @type {Array}\n     */\n    this.vertices = points||[];\n\n    this.worldVertices = []; // World transformed version of .vertices\n    this.worldVerticesNeedsUpdate = true;\n\n    /**\n     * Array of integer arrays, indicating which vertices each face consists of\n     * @property faces\n     * @type {Array}\n     */\n    this.faces = faces||[];\n\n    /**\n     * Array of Vec3\n     * @property faceNormals\n     * @type {Array}\n     */\n    this.faceNormals = [];\n    this.computeNormals();\n\n    this.worldFaceNormalsNeedsUpdate = true;\n    this.worldFaceNormals = []; // World transformed version of .faceNormals\n\n    /**\n     * Array of Vec3\n     * @property uniqueEdges\n     * @type {Array}\n     */\n    this.uniqueEdges = [];\n\n    /**\n     * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\n     * @property {Array} uniqueAxes\n     */\n    this.uniqueAxes = uniqueAxes ? uniqueAxes.slice() : null;\n\n    this.computeEdges();\n    this.updateBoundingSphereRadius();\n}\nConvexPolyhedron.prototype = new Shape();\nConvexPolyhedron.prototype.constructor = ConvexPolyhedron;\n\nvar computeEdges_tmpEdge = new Vec3();\n/**\n * Computes uniqueEdges\n * @method computeEdges\n */\nConvexPolyhedron.prototype.computeEdges = function(){\n    var faces = this.faces;\n    var vertices = this.vertices;\n    var nv = vertices.length;\n    var edges = this.uniqueEdges;\n\n    edges.length = 0;\n\n    var edge = computeEdges_tmpEdge;\n\n    for(var i=0; i !== faces.length; i++){\n        var face = faces[i];\n        var numVertices = face.length;\n        for(var j = 0; j !== numVertices; j++){\n            var k = ( j+1 ) % numVertices;\n            vertices[face[j]].vsub(vertices[face[k]], edge);\n            edge.normalize();\n            var found = false;\n            for(var p=0; p !== edges.length; p++){\n                if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)){\n                    found = true;\n                    break;\n                }\n            }\n\n            if (!found){\n                edges.push(edge.clone());\n            }\n        }\n    }\n};\n\n/**\n * Compute the normals of the faces. Will reuse existing Vec3 objects in the .faceNormals array if they exist.\n * @method computeNormals\n */\nConvexPolyhedron.prototype.computeNormals = function(){\n    this.faceNormals.length = this.faces.length;\n\n    // Generate normals\n    for(var i=0; i<this.faces.length; i++){\n\n        // Check so all vertices exists for this face\n        for(var j=0; j<this.faces[i].length; j++){\n            if(!this.vertices[this.faces[i][j]]){\n                throw new Error(\"Vertex \"+this.faces[i][j]+\" not found!\");\n            }\n        }\n\n        var n = this.faceNormals[i] || new Vec3();\n        this.getFaceNormal(i,n);\n        n.negate(n);\n        this.faceNormals[i] = n;\n        var vertex = this.vertices[this.faces[i][0]];\n        if(n.dot(vertex) < 0){\n            console.error(\".faceNormals[\" + i + \"] = Vec3(\"+n.toString()+\") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");\n            for(var j=0; j<this.faces[i].length; j++){\n                console.warn(\".vertices[\"+this.faces[i][j]+\"] = Vec3(\"+this.vertices[this.faces[i][j]].toString()+\")\");\n            }\n        }\n    }\n};\n\n/**\n * Get face normal given 3 vertices\n * @static\n * @method getFaceNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\nvar cb = new Vec3();\nvar ab = new Vec3();\nConvexPolyhedron.computeNormal = function ( va, vb, vc, target ) {\n    vb.vsub(va,ab);\n    vc.vsub(vb,cb);\n    cb.cross(ab,target);\n    if ( !target.isZero() ) {\n        target.normalize();\n    }\n};\n\n/**\n * Compute the normal of a face from its vertices\n * @method getFaceNormal\n * @param  {Number} i\n * @param  {Vec3} target\n */\nConvexPolyhedron.prototype.getFaceNormal = function(i,target){\n    var f = this.faces[i];\n    var va = this.vertices[f[0]];\n    var vb = this.vertices[f[1]];\n    var vc = this.vertices[f[2]];\n    return ConvexPolyhedron.computeNormal(va,vb,vc,target);\n};\n\n/**\n * @method clipAgainstHull\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} separatingNormal\n * @param {Number} minDist Clamp distance\n * @param {Number} maxDist\n * @param {array} result The an array of contact point objects, see clipFaceAgainstHull\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n */\nvar cah_WorldNormal = new Vec3();\nConvexPolyhedron.prototype.clipAgainstHull = function(posA,quatA,hullB,posB,quatB,separatingNormal,minDist,maxDist,result){\n    var WorldNormal = cah_WorldNormal;\n    var hullA = this;\n    var curMaxDist = maxDist;\n    var closestFaceB = -1;\n    var dmax = -Number.MAX_VALUE;\n    for(var face=0; face < hullB.faces.length; face++){\n        WorldNormal.copy(hullB.faceNormals[face]);\n        quatB.vmult(WorldNormal,WorldNormal);\n        //posB.vadd(WorldNormal,WorldNormal);\n        var d = WorldNormal.dot(separatingNormal);\n        if (d > dmax){\n            dmax = d;\n            closestFaceB = face;\n        }\n    }\n    var worldVertsB1 = [];\n    var polyB = hullB.faces[closestFaceB];\n    var numVertices = polyB.length;\n    for(var e0=0; e0<numVertices; e0++){\n        var b = hullB.vertices[polyB[e0]];\n        var worldb = new Vec3();\n        worldb.copy(b);\n        quatB.vmult(worldb,worldb);\n        posB.vadd(worldb,worldb);\n        worldVertsB1.push(worldb);\n    }\n\n    if (closestFaceB>=0){\n        this.clipFaceAgainstHull(separatingNormal,\n                                 posA,\n                                 quatA,\n                                 worldVertsB1,\n                                 minDist,\n                                 maxDist,\n                                 result);\n    }\n};\n\n/**\n * Find the separating axis between this hull and another\n * @method findSeparatingAxis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} target The target vector to save the axis in\n * @return {bool} Returns false if a separation is found, else true\n */\nvar fsa_faceANormalWS3 = new Vec3(),\n    fsa_Worldnormal1 = new Vec3(),\n    fsa_deltaC = new Vec3(),\n    fsa_worldEdge0 = new Vec3(),\n    fsa_worldEdge1 = new Vec3(),\n    fsa_Cross = new Vec3();\nConvexPolyhedron.prototype.findSeparatingAxis = function(hullB,posA,quatA,posB,quatB,target, faceListA, faceListB){\n    var faceANormalWS3 = fsa_faceANormalWS3,\n        Worldnormal1 = fsa_Worldnormal1,\n        deltaC = fsa_deltaC,\n        worldEdge0 = fsa_worldEdge0,\n        worldEdge1 = fsa_worldEdge1,\n        Cross = fsa_Cross;\n\n    var dmin = Number.MAX_VALUE;\n    var hullA = this;\n    var curPlaneTests=0;\n\n    if(!hullA.uniqueAxes){\n\n        var numFacesA = faceListA ? faceListA.length : hullA.faces.length;\n\n        // Test face normals from hullA\n        for(var i=0; i<numFacesA; i++){\n            var fi = faceListA ? faceListA[i] : i;\n\n            // Get world face normal\n            faceANormalWS3.copy(hullA.faceNormals[fi]);\n            quatA.vmult(faceANormalWS3,faceANormalWS3);\n\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(faceANormalWS3);\n            }\n        }\n\n    } else {\n\n        // Test unique axes\n        for(var i = 0; i !== hullA.uniqueAxes.length; i++){\n\n            // Get world axis\n            quatA.vmult(hullA.uniqueAxes[i],faceANormalWS3);\n\n            var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(faceANormalWS3);\n            }\n        }\n    }\n\n    if(!hullB.uniqueAxes){\n\n        // Test face normals from hullB\n        var numFacesB = faceListB ? faceListB.length : hullB.faces.length;\n        for(var i=0;i<numFacesB;i++){\n\n            var fi = faceListB ? faceListB[i] : i;\n\n            Worldnormal1.copy(hullB.faceNormals[fi]);\n            quatB.vmult(Worldnormal1,Worldnormal1);\n            curPlaneTests++;\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(Worldnormal1);\n            }\n        }\n    } else {\n\n        // Test unique axes in B\n        for(var i = 0; i !== hullB.uniqueAxes.length; i++){\n            quatB.vmult(hullB.uniqueAxes[i],Worldnormal1);\n\n            curPlaneTests++;\n            var d = hullA.testSepAxis(Worldnormal1, hullB,posA,quatA,posB,quatB);\n            if(d===false){\n                return false;\n            }\n\n            if(d<dmin){\n                dmin = d;\n                target.copy(Worldnormal1);\n            }\n        }\n    }\n\n    // Test edges\n    for(var e0=0; e0 !== hullA.uniqueEdges.length; e0++){\n\n        // Get world edge\n        quatA.vmult(hullA.uniqueEdges[e0],worldEdge0);\n\n        for(var e1=0; e1 !== hullB.uniqueEdges.length; e1++){\n\n            // Get world edge 2\n            quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\n            worldEdge0.cross(worldEdge1,Cross);\n\n            if(!Cross.almostZero()){\n                Cross.normalize();\n                var dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\n                if(dist === false){\n                    return false;\n                }\n                if(dist < dmin){\n                    dmin = dist;\n                    target.copy(Cross);\n                }\n            }\n        }\n    }\n\n    posB.vsub(posA,deltaC);\n    if((deltaC.dot(target))>0.0){\n        target.negate(target);\n    }\n\n    return true;\n};\n\nvar maxminA=[], maxminB=[];\n\n/**\n * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\n * @method testSepAxis\n * @param {Vec3} axis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @return {number} The overlap depth, or FALSE if no penetration.\n */\nConvexPolyhedron.prototype.testSepAxis = function(axis, hullB, posA, quatA, posB, quatB){\n    var hullA=this;\n    ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\n    ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\n    var maxA = maxminA[0];\n    var minA = maxminA[1];\n    var maxB = maxminB[0];\n    var minB = maxminB[1];\n    if(maxA<minB || maxB<minA){\n        return false; // Separated\n    }\n    var d0 = maxA - minB;\n    var d1 = maxB - minA;\n    var depth = d0<d1 ? d0:d1;\n    return depth;\n};\n\nvar cli_aabbmin = new Vec3(),\n    cli_aabbmax = new Vec3();\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n */\nConvexPolyhedron.prototype.calculateLocalInertia = function(mass,target){\n    // Approximate with box inertia\n    // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n    this.computeLocalAABB(cli_aabbmin,cli_aabbmax);\n    var x = cli_aabbmax.x - cli_aabbmin.x,\n        y = cli_aabbmax.y - cli_aabbmin.y,\n        z = cli_aabbmax.z - cli_aabbmin.z;\n    target.x = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*z*2*z );\n    target.y = 1.0 / 12.0 * mass * ( 2*x*2*x + 2*z*2*z );\n    target.z = 1.0 / 12.0 * mass * ( 2*y*2*y + 2*x*2*x );\n};\n\n/**\n * @method getPlaneConstantOfFace\n * @param  {Number} face_i Index of the face\n * @return {Number}\n */\nConvexPolyhedron.prototype.getPlaneConstantOfFace = function(face_i){\n    var f = this.faces[face_i];\n    var n = this.faceNormals[face_i];\n    var v = this.vertices[f[0]];\n    var c = -n.dot(v);\n    return c;\n};\n\n/**\n * Clip a face against a hull.\n * @method clipFaceAgainstHull\n * @param {Vec3} separatingNormal\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Array} worldVertsB1 An array of Vec3 with vertices in the world frame.\n * @param {Number} minDist Distance clamping\n * @param {Number} maxDist\n * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\n */\nvar cfah_faceANormalWS = new Vec3(),\n    cfah_edge0 = new Vec3(),\n    cfah_WorldEdge0 = new Vec3(),\n    cfah_worldPlaneAnormal1 = new Vec3(),\n    cfah_planeNormalWS1 = new Vec3(),\n    cfah_worldA1 = new Vec3(),\n    cfah_localPlaneNormal = new Vec3(),\n    cfah_planeNormalWS = new Vec3();\nConvexPolyhedron.prototype.clipFaceAgainstHull = function(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist,result){\n    var faceANormalWS = cfah_faceANormalWS,\n        edge0 = cfah_edge0,\n        WorldEdge0 = cfah_WorldEdge0,\n        worldPlaneAnormal1 = cfah_worldPlaneAnormal1,\n        planeNormalWS1 = cfah_planeNormalWS1,\n        worldA1 = cfah_worldA1,\n        localPlaneNormal = cfah_localPlaneNormal,\n        planeNormalWS = cfah_planeNormalWS;\n\n    var hullA = this;\n    var worldVertsB2 = [];\n    var pVtxIn = worldVertsB1;\n    var pVtxOut = worldVertsB2;\n    // Find the face with normal closest to the separating axis\n    var closestFaceA = -1;\n    var dmin = Number.MAX_VALUE;\n    for(var face=0; face<hullA.faces.length; face++){\n        faceANormalWS.copy(hullA.faceNormals[face]);\n        quatA.vmult(faceANormalWS,faceANormalWS);\n        //posA.vadd(faceANormalWS,faceANormalWS);\n        var d = faceANormalWS.dot(separatingNormal);\n        if (d < dmin){\n            dmin = d;\n            closestFaceA = face;\n        }\n    }\n    if (closestFaceA < 0){\n        // console.log(\"--- did not find any closest face... ---\");\n        return;\n    }\n    //console.log(\"closest A: \",closestFaceA);\n    // Get the face and construct connected faces\n    var polyA = hullA.faces[closestFaceA];\n    polyA.connectedFaces = [];\n    for(var i=0; i<hullA.faces.length; i++){\n        for(var j=0; j<hullA.faces[i].length; j++){\n            if(polyA.indexOf(hullA.faces[i][j])!==-1 /* Sharing a vertex*/ && i!==closestFaceA /* Not the one we are looking for connections from */ && polyA.connectedFaces.indexOf(i)===-1 /* Not already added */ ){\n                polyA.connectedFaces.push(i);\n            }\n        }\n    }\n    // Clip the polygon to the back of the planes of all faces of hull A, that are adjacent to the witness face\n    var numContacts = pVtxIn.length;\n    var numVerticesA = polyA.length;\n    var res = [];\n    for(var e0=0; e0<numVerticesA; e0++){\n        var a = hullA.vertices[polyA[e0]];\n        var b = hullA.vertices[polyA[(e0+1)%numVerticesA]];\n        a.vsub(b,edge0);\n        WorldEdge0.copy(edge0);\n        quatA.vmult(WorldEdge0,WorldEdge0);\n        posA.vadd(WorldEdge0,WorldEdge0);\n        worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]);//transA.getBasis()* btVector3(polyA.m_plane[0],polyA.m_plane[1],polyA.m_plane[2]);\n        quatA.vmult(worldPlaneAnormal1,worldPlaneAnormal1);\n        posA.vadd(worldPlaneAnormal1,worldPlaneAnormal1);\n        WorldEdge0.cross(worldPlaneAnormal1,planeNormalWS1);\n        planeNormalWS1.negate(planeNormalWS1);\n        worldA1.copy(a);\n        quatA.vmult(worldA1,worldA1);\n        posA.vadd(worldA1,worldA1);\n        var planeEqWS1 = -worldA1.dot(planeNormalWS1);\n        var planeEqWS;\n        if(true){\n            var otherFace = polyA.connectedFaces[e0];\n            localPlaneNormal.copy(this.faceNormals[otherFace]);\n            var localPlaneEq = this.getPlaneConstantOfFace(otherFace);\n\n            planeNormalWS.copy(localPlaneNormal);\n            quatA.vmult(planeNormalWS,planeNormalWS);\n            //posA.vadd(planeNormalWS,planeNormalWS);\n            var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n        } else  {\n            planeNormalWS.copy(planeNormalWS1);\n            planeEqWS = planeEqWS1;\n        }\n\n        // Clip face against our constructed plane\n        this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS);\n\n        // Throw away all clipped points, but save the reamining until next clip\n        while(pVtxIn.length){\n            pVtxIn.shift();\n        }\n        while(pVtxOut.length){\n            pVtxIn.push(pVtxOut.shift());\n        }\n    }\n\n    //console.log(\"Resulting points after clip:\",pVtxIn);\n\n    // only keep contact points that are behind the witness face\n    localPlaneNormal.copy(this.faceNormals[closestFaceA]);\n\n    var localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\n    planeNormalWS.copy(localPlaneNormal);\n    quatA.vmult(planeNormalWS,planeNormalWS);\n\n    var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n    for (var i=0; i<pVtxIn.length; i++){\n        var depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; //???\n        /*console.log(\"depth calc from normal=\",planeNormalWS.toString(),\" and constant \"+planeEqWS+\" and vertex \",pVtxIn[i].toString(),\" gives \"+depth);*/\n        if (depth <=minDist){\n            console.log(\"clamped: depth=\"+depth+\" to minDist=\"+(minDist+\"\"));\n            depth = minDist;\n        }\n\n        if (depth <=maxDist){\n            var point = pVtxIn[i];\n            if(depth<=0){\n                /*console.log(\"Got contact point \",point.toString(),\n                  \", depth=\",depth,\n                  \"contact normal=\",separatingNormal.toString(),\n                  \"plane\",planeNormalWS.toString(),\n                  \"planeConstant\",planeEqWS);*/\n                var p = {\n                    point:point,\n                    normal:planeNormalWS,\n                    depth: depth,\n                };\n                result.push(p);\n            }\n        }\n    }\n};\n\n/**\n * Clip a face in a hull against the back of a plane.\n * @method clipFaceAgainstPlane\n * @param {Array} inVertices\n * @param {Array} outVertices\n * @param {Vec3} planeNormal\n * @param {Number} planeConstant The constant in the mathematical plane equation\n */\nConvexPolyhedron.prototype.clipFaceAgainstPlane = function(inVertices,outVertices, planeNormal, planeConstant){\n    var n_dot_first, n_dot_last;\n    var numVerts = inVertices.length;\n\n    if(numVerts < 2){\n        return outVertices;\n    }\n\n    var firstVertex = inVertices[inVertices.length-1],\n        lastVertex =   inVertices[0];\n\n    n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\n\n    for(var vi = 0; vi < numVerts; vi++){\n        lastVertex = inVertices[vi];\n        n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\n        if(n_dot_first < 0){\n            if(n_dot_last < 0){\n                // Start < 0, end < 0, so output lastVertex\n                var newv = new Vec3();\n                newv.copy(lastVertex);\n                outVertices.push(newv);\n            } else {\n                // Start < 0, end >= 0, so output intersection\n                var newv = new Vec3();\n                firstVertex.lerp(lastVertex,\n                                 n_dot_first / (n_dot_first - n_dot_last),\n                                 newv);\n                outVertices.push(newv);\n            }\n        } else {\n            if(n_dot_last<0){\n                // Start >= 0, end < 0 so output intersection and end\n                var newv = new Vec3();\n                firstVertex.lerp(lastVertex,\n                                 n_dot_first / (n_dot_first - n_dot_last),\n                                 newv);\n                outVertices.push(newv);\n                outVertices.push(lastVertex);\n            }\n        }\n        firstVertex = lastVertex;\n        n_dot_first = n_dot_last;\n    }\n    return outVertices;\n};\n\n// Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\nConvexPolyhedron.prototype.computeWorldVertices = function(position,quat){\n    var N = this.vertices.length;\n    while(this.worldVertices.length < N){\n        this.worldVertices.push( new Vec3() );\n    }\n\n    var verts = this.vertices,\n        worldVerts = this.worldVertices;\n    for(var i=0; i!==N; i++){\n        quat.vmult( verts[i] , worldVerts[i] );\n        position.vadd( worldVerts[i] , worldVerts[i] );\n    }\n\n    this.worldVerticesNeedsUpdate = false;\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\nConvexPolyhedron.prototype.computeLocalAABB = function(aabbmin,aabbmax){\n    var n = this.vertices.length,\n        vertices = this.vertices,\n        worldVert = computeLocalAABB_worldVert;\n\n    aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n    aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n    for(var i=0; i<n; i++){\n        var v = vertices[i];\n        if     (v.x < aabbmin.x){\n            aabbmin.x = v.x;\n        } else if(v.x > aabbmax.x){\n            aabbmax.x = v.x;\n        }\n        if     (v.y < aabbmin.y){\n            aabbmin.y = v.y;\n        } else if(v.y > aabbmax.y){\n            aabbmax.y = v.y;\n        }\n        if     (v.z < aabbmin.z){\n            aabbmin.z = v.z;\n        } else if(v.z > aabbmax.z){\n            aabbmax.z = v.z;\n        }\n    }\n};\n\n/**\n * Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\n * @method computeWorldFaceNormals\n * @param  {Quaternion} quat\n */\nConvexPolyhedron.prototype.computeWorldFaceNormals = function(quat){\n    var N = this.faceNormals.length;\n    while(this.worldFaceNormals.length < N){\n        this.worldFaceNormals.push( new Vec3() );\n    }\n\n    var normals = this.faceNormals,\n        worldNormals = this.worldFaceNormals;\n    for(var i=0; i!==N; i++){\n        quat.vmult( normals[i] , worldNormals[i] );\n    }\n\n    this.worldFaceNormalsNeedsUpdate = false;\n};\n\n/**\n * @method updateBoundingSphereRadius\n */\nConvexPolyhedron.prototype.updateBoundingSphereRadius = function(){\n    // Assume points are distributed with local (0,0,0) as center\n    var max2 = 0;\n    var verts = this.vertices;\n    for(var i=0, N=verts.length; i!==N; i++) {\n        var norm2 = verts[i].norm2();\n        if(norm2 > max2){\n            max2 = norm2;\n        }\n    }\n    this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\n\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\nConvexPolyhedron.prototype.calculateWorldAABB = function(pos,quat,min,max){\n    var n = this.vertices.length, verts = this.vertices;\n    var minx,miny,minz,maxx,maxy,maxz;\n    for(var i=0; i<n; i++){\n        tempWorldVertex.copy(verts[i]);\n        quat.vmult(tempWorldVertex,tempWorldVertex);\n        pos.vadd(tempWorldVertex,tempWorldVertex);\n        var v = tempWorldVertex;\n        if     (v.x < minx || minx===undefined){\n            minx = v.x;\n        } else if(v.x > maxx || maxx===undefined){\n            maxx = v.x;\n        }\n\n        if     (v.y < miny || miny===undefined){\n            miny = v.y;\n        } else if(v.y > maxy || maxy===undefined){\n            maxy = v.y;\n        }\n\n        if     (v.z < minz || minz===undefined){\n            minz = v.z;\n        } else if(v.z > maxz || maxz===undefined){\n            maxz = v.z;\n        }\n    }\n    min.set(minx,miny,minz);\n    max.set(maxx,maxy,maxz);\n};\n\n/**\n * Get approximate convex volume\n * @method volume\n * @return {Number}\n */\nConvexPolyhedron.prototype.volume = function(){\n    return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n\n/**\n * Get an average of all the vertices positions\n * @method getAveragePointLocal\n * @param  {Vec3} target\n * @return {Vec3}\n */\nConvexPolyhedron.prototype.getAveragePointLocal = function(target){\n    target = target || new Vec3();\n    var n = this.vertices.length,\n        verts = this.vertices;\n    for(var i=0; i<n; i++){\n        target.vadd(verts[i],target);\n    }\n    target.mult(1/n,target);\n    return target;\n};\n\n/**\n * Transform all local points. Will change the .vertices\n * @method transformAllPoints\n * @param  {Vec3} offset\n * @param  {Quaternion} quat\n */\nConvexPolyhedron.prototype.transformAllPoints = function(offset,quat){\n    var n = this.vertices.length,\n        verts = this.vertices;\n\n    // Apply rotation\n    if(quat){\n        // Rotate vertices\n        for(var i=0; i<n; i++){\n            var v = verts[i];\n            quat.vmult(v,v);\n        }\n        // Rotate face normals\n        for(var i=0; i<this.faceNormals.length; i++){\n            var v = this.faceNormals[i];\n            quat.vmult(v,v);\n        }\n        /*\n        // Rotate edges\n        for(var i=0; i<this.uniqueEdges.length; i++){\n            var v = this.uniqueEdges[i];\n            quat.vmult(v,v);\n        }*/\n    }\n\n    // Apply offset\n    if(offset){\n        for(var i=0; i<n; i++){\n            var v = verts[i];\n            v.vadd(offset,v);\n        }\n    }\n};\n\n/**\n * Checks whether p is inside the polyhedra. Must be in local coords. The point lies outside of the convex hull of the other points if and only if the direction of all the vectors from it to those other points are on less than one half of a sphere around it.\n * @method pointIsInside\n * @param  {Vec3} p      A point given in local coordinates\n * @return {Boolean}\n */\nvar ConvexPolyhedron_pointIsInside = new Vec3();\nvar ConvexPolyhedron_vToP = new Vec3();\nvar ConvexPolyhedron_vToPointInside = new Vec3();\nConvexPolyhedron.prototype.pointIsInside = function(p){\n    var n = this.vertices.length,\n        verts = this.vertices,\n        faces = this.faces,\n        normals = this.faceNormals;\n    var positiveResult = null;\n    var N = this.faces.length;\n    var pointInside = ConvexPolyhedron_pointIsInside;\n    this.getAveragePointLocal(pointInside);\n    for(var i=0; i<N; i++){\n        var numVertices = this.faces[i].length;\n        var n = normals[i];\n        var v = verts[faces[i][0]]; // We only need one point in the face\n\n        // This dot product determines which side of the edge the point is\n        var vToP = ConvexPolyhedron_vToP;\n        p.vsub(v,vToP);\n        var r1 = n.dot(vToP);\n\n        var vToPointInside = ConvexPolyhedron_vToPointInside;\n        pointInside.vsub(v,vToPointInside);\n        var r2 = n.dot(vToPointInside);\n\n        if((r1<0 && r2>0) || (r1>0 && r2<0)){\n            return false; // Encountered some other sign. Exit.\n        } else {\n        }\n    }\n\n    // If we got here, all dot products were of the same sign.\n    return positiveResult ? 1 : -1;\n};\n\n/**\n * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis. Results are saved in the array maxmin.\n * @static\n * @method project\n * @param {ConvexPolyhedron} hull\n * @param {Vec3} axis\n * @param {Vec3} pos\n * @param {Quaternion} quat\n * @param {array} result result[0] and result[1] will be set to maximum and minimum, respectively.\n */\nvar project_worldVertex = new Vec3();\nvar project_localAxis = new Vec3();\nvar project_localOrigin = new Vec3();\nConvexPolyhedron.project = function(hull, axis, pos, quat, result){\n    var n = hull.vertices.length,\n        worldVertex = project_worldVertex,\n        localAxis = project_localAxis,\n        max = 0,\n        min = 0,\n        localOrigin = project_localOrigin,\n        vs = hull.vertices;\n\n    localOrigin.setZero();\n\n    // Transform the axis to local\n    Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\n    Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\n    var add = localOrigin.dot(localAxis);\n\n    min = max = vs[0].dot(localAxis);\n\n    for(var i = 1; i < n; i++){\n        var val = vs[i].dot(localAxis);\n\n        if(val > max){\n            max = val;\n        }\n\n        if(val < min){\n            min = val;\n        }\n    }\n\n    min -= add;\n    max -= add;\n\n    if(min > max){\n        // Inconsistent - swap\n        var temp = min;\n        min = max;\n        max = temp;\n    }\n    // Output\n    result[0] = max;\n    result[1] = min;\n};\n","module.exports = OverlapKeeper;\n\n/**\n * @class OverlapKeeper\n * @constructor\n */\nfunction OverlapKeeper() {\n    this.current = [];\n    this.previous = [];\n}\n\nOverlapKeeper.prototype.getKey = function(i, j) {\n    if (j < i) {\n        var temp = j;\n        j = i;\n        i = temp;\n    }\n    return (i << 16) | j;\n};\n\n\n/**\n * @method set\n * @param {Number} i\n * @param {Number} j\n */\nOverlapKeeper.prototype.set = function(i, j) {\n    // Insertion sort. This way the diff will have linear complexity.\n    var key = this.getKey(i, j);\n    var current = this.current;\n    var index = 0;\n    while(key > current[index]){\n        index++;\n    }\n    if(key === current[index]){\n        return; // Pair was already added\n    }\n    for(var j=current.length-1; j>=index; j--){\n        current[j + 1] = current[j];\n    }\n    current[index] = key;\n};\n\n/**\n * @method tick\n */\nOverlapKeeper.prototype.tick = function() {\n    var tmp = this.current;\n    this.current = this.previous;\n    this.previous = tmp;\n    this.current.length = 0;\n};\n\nfunction unpackAndPush(array, key){\n    array.push((key & 0xFFFF0000) >> 16, key & 0x0000FFFF);\n}\n\n/**\n * @method getDiff\n * @param  {array} additions\n * @param  {array} removals\n */\nOverlapKeeper.prototype.getDiff = function(additions, removals) {\n    var a = this.current;\n    var b = this.previous;\n    var al = a.length;\n    var bl = b.length;\n\n    var j=0;\n    for (var i = 0; i < al; i++) {\n        var found = false;\n        var keyA = a[i];\n        while(keyA > b[j]){\n            j++;\n        }\n        found = keyA === b[j];\n\n        if(!found){\n            unpackAndPush(additions, keyA);\n        }\n    }\n    j = 0;\n    for (var i = 0; i < bl; i++) {\n        var found = false;\n        var keyB = b[i];\n        while(keyB > a[j]){\n            j++;\n        }\n        found = a[j] === keyB;\n\n        if(!found){\n            unpackAndPush(removals, keyB);\n        }\n    }\n};","module.exports = Shape;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Material = require('../material/Material');\n\n/**\n * Base class for shapes\n * @class Shape\n * @constructor\n * @author schteppe\n * @todo Should have a mechanism for caching bounding sphere radius instead of calculating it each time\n */\nfunction Shape(){\n\n    /**\n     * Identifyer of the Shape.\n     * @property {number} id\n     */\n    this.id = Shape.idCounter++;\n\n    /**\n     * The type of this shape. Must be set to an int > 0 by subclasses.\n     * @property type\n     * @type {Number}\n     * @see Shape.types\n     */\n    this.type = 0;\n\n    /**\n     * The local bounding sphere radius of this shape.\n     * @property {Number} boundingSphereRadius\n     */\n    this.boundingSphereRadius = 0;\n\n    /**\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n     * @property {boolean} collisionResponse\n     */\n    this.collisionResponse = true;\n\n    /**\n     * @property {Material} material\n     */\n    this.material = null;\n\n    /**\n     * @property {Body} body\n     */\n    this.body = null;\n}\nShape.prototype.constructor = Shape;\n\n/**\n * Computes the bounding sphere radius. The result is stored in the property .boundingSphereRadius\n * @method updateBoundingSphereRadius\n */\nShape.prototype.updateBoundingSphereRadius = function(){\n    throw \"computeBoundingSphereRadius() not implemented for shape type \"+this.type;\n};\n\n/**\n * Get the volume of this shape\n * @method volume\n * @return {Number}\n */\nShape.prototype.volume = function(){\n    throw \"volume() not implemented for shape type \"+this.type;\n};\n\n/**\n * Calculates the inertia in the local frame for this shape.\n * @method calculateLocalInertia\n * @param {Number} mass\n * @param {Vec3} target\n * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\n */\nShape.prototype.calculateLocalInertia = function(mass,target){\n    throw \"calculateLocalInertia() not implemented for shape type \"+this.type;\n};\n\nShape.idCounter = 0;\n\n/**\n * The available shape types.\n * @static\n * @property types\n * @type {Object}\n */\nShape.types = {\n    SPHERE:1,\n    PLANE:2,\n    BOX:4,\n    COMPOUND:8,\n    CONVEXPOLYHEDRON:16,\n    HEIGHTFIELD:32,\n    PARTICLE:64,\n    CYLINDER:128,\n    TRIMESH:256\n};\n\n","require('./checkpoint');\nrequire('./cube-env-map');\nrequire('./grab');\nrequire('./jump-ability');\nrequire('./kinematic-body');\nrequire('./mesh-smooth');\nrequire('./normal-material');\nrequire('./sphere-collider');\n","module.exports = ConeTwistConstraint;\n\nvar Constraint = require('./Constraint');\nvar PointToPointConstraint = require('./PointToPointConstraint');\nvar ConeEquation = require('../equations/ConeEquation');\nvar RotationalEquation = require('../equations/RotationalEquation');\nvar ContactEquation = require('../equations/ContactEquation');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * @class ConeTwistConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA]\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction ConeTwistConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    // Set pivot point in between\n    var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n    var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\n\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    this.collideConnected = !!options.collideConnected;\n\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\n\n    /**\n     * @property {ConeEquation} coneEquation\n     */\n    var c = this.coneEquation = new ConeEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} twistEquation\n     */\n    var t = this.twistEquation = new RotationalEquation(bodyA,bodyB,options);\n    this.twistAngle = typeof(options.twistAngle) !== 'undefined' ? options.twistAngle : 0;\n\n    // Make the cone equation push the bodies toward the cone axis, not outward\n    c.maxForce = 0;\n    c.minForce = -maxForce;\n\n    // Make the twist equation add torque toward the initial position\n    t.maxForce = 0;\n    t.minForce = -maxForce;\n\n    this.equations.push(c, t);\n}\nConeTwistConstraint.prototype = new PointToPointConstraint();\nConeTwistConstraint.constructor = ConeTwistConstraint;\n\nvar ConeTwistConstraint_update_tmpVec1 = new Vec3();\nvar ConeTwistConstraint_update_tmpVec2 = new Vec3();\n\nConeTwistConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        cone = this.coneEquation,\n        twist = this.twistEquation;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    // Update the axes to the cone constraint\n    bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\n    bodyB.vectorToWorldFrame(this.axisB, cone.axisB);\n\n    // Update the world axes in the twist constraint\n    this.axisA.tangents(twist.axisA, twist.axisA);\n    bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\n\n    this.axisB.tangents(twist.axisB, twist.axisB);\n    bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\n\n    cone.angle = this.angle;\n    twist.maxAngle = this.twistAngle;\n};\n\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var CANNON = require('cannon'),\n    mesh2shape = require('three-to-cannon');\n\nrequire('../../../lib/CANNON-shape2mesh');\n\nvar Body = {\n  dependencies: ['velocity'],\n\n  schema: {\n    mass: {default: 5, if: {type: 'dynamic'}},\n    linearDamping:  { default: 0.01, if: {type: 'dynamic'}},\n    angularDamping: { default: 0.01,  if: {type: 'dynamic'}},\n    shape: {default: 'auto', oneOf: ['auto', 'box', 'cylinder', 'sphere', 'hull', 'mesh', 'none']},\n    cylinderAxis: {default: 'y', oneOf: ['x', 'y', 'z']},\n    sphereRadius: {default: NaN},\n    type: {default: 'dynamic', oneOf: ['static', 'dynamic']}\n  },\n\n  /**\n   * Initializes a body component, assigning it to the physics system and binding listeners for\n   * parsing the elements geometry.\n   */\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    if (this.el.sceneEl.hasLoaded) {\n      this.initBody();\n    } else {\n      this.el.sceneEl.addEventListener('loaded', this.initBody.bind(this));\n    }\n  },\n\n  /**\n   * Parses an element's geometry and component metadata to create a CANNON.Body instance for the\n   * component.\n   */\n  initBody: function () {\n    var el = this.el,\n        data = this.data;\n\n    var obj = this.el.object3D;\n    var pos = obj.position;\n    var quat = obj.quaternion;\n\n    this.body = new CANNON.Body({\n      mass: data.type === 'static' ? 0 : data.mass || 0,\n      material: this.system.getMaterial('defaultMaterial'),\n      position: new CANNON.Vec3(pos.x, pos.y, pos.z),\n      quaternion: new CANNON.Quaternion(quat.x, quat.y, quat.z, quat.w),\n      linearDamping: data.linearDamping,\n      angularDamping: data.angularDamping,\n      type: data.type === 'dynamic' ? CANNON.Body.DYNAMIC : CANNON.Body.STATIC,\n    });\n\n    // Matrix World must be updated at root level, if scale is to be applied – updateMatrixWorld()\n    // only checks an object's parent, not the rest of the ancestors. Hence, a wrapping entity with\n    // scale=\"0.5 0.5 0.5\" will be ignored.\n    // Reference: https://github.com/mrdoob/three.js/blob/master/src/core/Object3D.js#L511-L541\n    // Potential fix: https://github.com/mrdoob/three.js/pull/7019\n    this.el.object3D.updateMatrixWorld(true);\n\n    if(data.shape !== 'none') {\n      var options = data.shape === 'auto' ? undefined : AFRAME.utils.extend({}, this.data, {\n        type: mesh2shape.Type[data.shape.toUpperCase()]\n      });\n\n      var shape = mesh2shape(this.el.object3D, options);\n\n      if (!shape) {\n        el.addEventListener('object3dset', this.initBody.bind(this));\n        return;\n      }\n      this.body.addShape(shape, shape.offset, shape.orientation);\n\n      // Show wireframe\n      if (this.system.debug) {\n        this.shouldUpdateWireframe = true;\n      }\n\n      this.isLoaded = true;\n    }\n\n    this.el.body = this.body;\n    this.body.el = el;\n\n    // If component wasn't initialized when play() was called, finish up.\n    if (this.isPlaying) {\n      this._play();\n    }\n\n    if (this.isLoaded) {\n      this.el.emit('body-loaded', {body: this.el.body});\n    }\n  },\n\n  addShape: function(shape, offset, orientation) {\n    if (this.data.shape !== 'none') {\n      console.warn('shape can only be added if shape property is none');\n      return;\n    }\n\n    if (!shape) {\n      console.warn('shape cannot be null');\n      return;\n    }\n\n    this.body.addShape(shape, offset, orientation);\n\n    if (this.system.debug) {\n      this.shouldUpdateWireframe = true;\n    }\n\n    this.shouldUpdateBody = true;\n  },\n\n  tick: function () {\n    if (this.shouldUpdateBody) {\n      this.isLoaded = true;\n\n      this._play();\n\n      this.el.emit('body-loaded', {body: this.el.body});\n      this.shouldUpdateBody = false;\n    }\n\n    if (this.shouldUpdateWireframe) {\n      this.createWireframe(this.body);\n      this.shouldUpdateWireframe = false;\n    }\n  },\n\n  /**\n   * Registers the component with the physics system, if ready.\n   */\n  play: function () {\n    if (this.isLoaded) this._play();\n  },\n\n  /**\n   * Internal helper to register component with physics system.\n   */\n  _play: function () {\n    this.syncToPhysics();\n    this.system.addComponent(this);\n    this.system.addBody(this.body);\n    if (this.wireframe) this.el.sceneEl.object3D.add(this.wireframe);\n  },\n\n  /**\n   * Unregisters the component with the physics system.\n   */\n  pause: function () {\n    if (this.isLoaded) this._pause();\n  },\n\n  _pause: function () {\n    this.system.removeComponent(this);\n    if (this.body) this.system.removeBody(this.body);\n    if (this.wireframe) this.el.sceneEl.object3D.remove(this.wireframe);\n  },\n\n  /**\n   * Updates the CANNON.Body instance, where possible.\n   */\n  update: function (prevData) {\n    if (!this.body) return;\n\n    var data = this.data;\n\n    if (prevData.type != undefined && data.type !== prevData.type) {\n      console.warn('CANNON.Body type cannot be changed after instantiation');\n    }\n\n    this.body.mass = data.mass || 0;\n    if (data.type === 'dynamic') {\n      this.body.linearDamping = data.linearDamping;\n      this.body.angularDamping = data.angularDamping;\n    }\n    if (data.mass !== prevData.mass) {\n      this.body.updateMassProperties();\n    }\n    if (this.body.updateProperties) this.body.updateProperties();\n  },\n\n  /**\n   * Removes the component and all physics and scene side effects.\n   */\n  remove: function () {\n    delete this.body.el;\n    delete this.body;\n    delete this.el.body;\n    delete this.wireframe;\n  },\n\n  beforeStep: function () {\n    if (this.body.mass === 0) {\n      this.syncToPhysics();\n    }\n  },\n\n  step: function () {\n    if (this.body.mass !== 0) {\n      this.syncFromPhysics();\n    }\n  },\n\n  /**\n   * Creates a wireframe for the body, for debugging.\n   * TODO(donmccurdy) – Refactor this into a standalone utility or component.\n   * @param  {CANNON.Body} body\n   * @param  {CANNON.Shape} shape\n   */\n  createWireframe: function (body) {\n    if (this.wireframe) {\n      this.el.sceneEl.object3D.remove(this.wireframe);\n      delete this.wireframe;\n    }\n    this.wireframe = new THREE.Object3D();\n    this.el.sceneEl.object3D.add(this.wireframe);\n\n    var offset, mesh;\n    var orientation = new THREE.Quaternion();\n    for (var i = 0; i < this.body.shapes.length; i++)\n    {\n      offset = this.body.shapeOffsets[i],\n      orientation.copy(this.body.shapeOrientations[i]),\n      mesh = CANNON.shape2mesh(this.body).children[i];\n\n      var wireframe = new THREE.LineSegments(\n        new THREE.EdgesGeometry(mesh.geometry),\n        new THREE.LineBasicMaterial({color: 0xff0000})\n      );\n\n      if (offset) {\n        wireframe.position.copy(offset);\n      }\n\n      if (orientation) {\n        orientation.inverse(orientation);\n        wireframe.quaternion.copy(orientation);\n      }\n\n      this.wireframe.add(wireframe);\n    }\n    \n    this.syncWireframe();\n  },\n\n  /**\n   * Updates the debugging wireframe's position and rotation.\n   */\n  syncWireframe: function () {\n    var offset,\n        wireframe = this.wireframe;\n\n    if (!this.wireframe) return;\n\n    // Apply rotation. If the shape required custom orientation, also apply\n    // that on the wireframe.\n    wireframe.quaternion.copy(this.body.quaternion);\n    if (wireframe.orientation) {\n      wireframe.quaternion.multiply(wireframe.orientation);\n    }\n\n    // Apply position. If the shape required custom offset, also apply that on\n    // the wireframe.\n    wireframe.position.copy(this.body.position);\n    if (wireframe.offset) {\n      offset = wireframe.offset.clone().applyQuaternion(wireframe.quaternion);\n      wireframe.position.add(offset);\n    }\n\n    wireframe.updateMatrix();\n  },\n\n  /**\n   * Updates the CANNON.Body instance's position, velocity, and rotation, based on the scene.\n   */\n  syncToPhysics: (function () {\n    var q =  new THREE.Quaternion(),\n        v = new THREE.Vector3();\n    return function () {\n      var el = this.el,\n          parentEl = el.parentEl,\n          body = this.body;\n\n      if (!body) return;\n\n      if (el.components.velocity) body.velocity.copy(el.getAttribute('velocity'));\n\n      if (parentEl.isScene) {\n        body.quaternion.copy(el.object3D.quaternion);\n        body.position.copy(el.object3D.position);\n      } else {\n        el.object3D.getWorldQuaternion(q);\n        body.quaternion.copy(q);\n        el.object3D.getWorldPosition(v);\n        body.position.copy(v);\n      }\n\n      if (this.body.updateProperties) this.body.updateProperties();\n      if (this.wireframe) this.syncWireframe();\n    };\n  }()),\n\n  /**\n   * Updates the scene object's position and rotation, based on the physics simulation.\n   */\n  syncFromPhysics: (function () {\n    var v = new THREE.Vector3(),\n        q1 = new THREE.Quaternion(),\n        q2 = new THREE.Quaternion();\n    return function () {\n      var el = this.el,\n          parentEl = el.parentEl,\n          body = this.body;\n\n      if (!body) return;\n\n      if (parentEl.isScene) {\n        el.object3D.quaternion.copy(body.quaternion);\n        el.object3D.position.copy(body.position);\n      } else {\n        // TODO - Nested rotation doesn't seem to be working as expected.\n        q1.copy(body.quaternion);\n        parentEl.object3D.getWorldQuaternion(q2);\n        q1.multiply(q2.inverse());\n        el.object3D.quaternion.copy(q1);\n\n        v.copy(body.position);\n        parentEl.object3D.worldToLocal(v);\n        el.object3D.position.copy(v);\n      }\n\n      if (this.wireframe) this.syncWireframe();\n    };\n  }())\n};\n\nmodule.exports.definition = Body;\nmodule.exports.Component = AFRAME.registerComponent('body', Body);\n","var Vec3 = require('../math/Vec3');\n\nmodule.exports = Spring;\n\n/**\n * A spring, connecting two bodies.\n *\n * @class Spring\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Object} [options]\n * @param {number} [options.restLength]   A number > 0. Default: 1\n * @param {number} [options.stiffness]    A number >= 0. Default: 100\n * @param {number} [options.damping]      A number >= 0. Default: 1\n * @param {Vec3}  [options.worldAnchorA] Where to hook the spring to body A, in world coordinates.\n * @param {Vec3}  [options.worldAnchorB]\n * @param {Vec3}  [options.localAnchorA] Where to hook the spring to body A, in local body coordinates.\n * @param {Vec3}  [options.localAnchorB]\n */\nfunction Spring(bodyA,bodyB,options){\n    options = options || {};\n\n    /**\n     * Rest length of the spring.\n     * @property restLength\n     * @type {number}\n     */\n    this.restLength = typeof(options.restLength) === \"number\" ? options.restLength : 1;\n\n    /**\n     * Stiffness of the spring.\n     * @property stiffness\n     * @type {number}\n     */\n    this.stiffness = options.stiffness || 100;\n\n    /**\n     * Damping of the spring.\n     * @property damping\n     * @type {number}\n     */\n    this.damping = options.damping || 1;\n\n    /**\n     * First connected body.\n     * @property bodyA\n     * @type {Body}\n     */\n    this.bodyA = bodyA;\n\n    /**\n     * Second connected body.\n     * @property bodyB\n     * @type {Body}\n     */\n    this.bodyB = bodyB;\n\n    /**\n     * Anchor for bodyA in local bodyA coordinates.\n     * @property localAnchorA\n     * @type {Vec3}\n     */\n    this.localAnchorA = new Vec3();\n\n    /**\n     * Anchor for bodyB in local bodyB coordinates.\n     * @property localAnchorB\n     * @type {Vec3}\n     */\n    this.localAnchorB = new Vec3();\n\n    if(options.localAnchorA){\n        this.localAnchorA.copy(options.localAnchorA);\n    }\n    if(options.localAnchorB){\n        this.localAnchorB.copy(options.localAnchorB);\n    }\n    if(options.worldAnchorA){\n        this.setWorldAnchorA(options.worldAnchorA);\n    }\n    if(options.worldAnchorB){\n        this.setWorldAnchorB(options.worldAnchorB);\n    }\n}\n\n/**\n * Set the anchor point on body A, using world coordinates.\n * @method setWorldAnchorA\n * @param {Vec3} worldAnchorA\n */\nSpring.prototype.setWorldAnchorA = function(worldAnchorA){\n    this.bodyA.pointToLocalFrame(worldAnchorA,this.localAnchorA);\n};\n\n/**\n * Set the anchor point on body B, using world coordinates.\n * @method setWorldAnchorB\n * @param {Vec3} worldAnchorB\n */\nSpring.prototype.setWorldAnchorB = function(worldAnchorB){\n    this.bodyB.pointToLocalFrame(worldAnchorB,this.localAnchorB);\n};\n\n/**\n * Get the anchor point on body A, in world coordinates.\n * @method getWorldAnchorA\n * @param {Vec3} result The vector to store the result in.\n */\nSpring.prototype.getWorldAnchorA = function(result){\n    this.bodyA.pointToWorldFrame(this.localAnchorA,result);\n};\n\n/**\n * Get the anchor point on body B, in world coordinates.\n * @method getWorldAnchorB\n * @param {Vec3} result The vector to store the result in.\n */\nSpring.prototype.getWorldAnchorB = function(result){\n    this.bodyB.pointToWorldFrame(this.localAnchorB,result);\n};\n\nvar applyForce_r =              new Vec3(),\n    applyForce_r_unit =         new Vec3(),\n    applyForce_u =              new Vec3(),\n    applyForce_f =              new Vec3(),\n    applyForce_worldAnchorA =   new Vec3(),\n    applyForce_worldAnchorB =   new Vec3(),\n    applyForce_ri =             new Vec3(),\n    applyForce_rj =             new Vec3(),\n    applyForce_ri_x_f =         new Vec3(),\n    applyForce_rj_x_f =         new Vec3(),\n    applyForce_tmp =            new Vec3();\n\n/**\n * Apply the spring force to the connected bodies.\n * @method applyForce\n */\nSpring.prototype.applyForce = function(){\n    var k = this.stiffness,\n        d = this.damping,\n        l = this.restLength,\n        bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        r = applyForce_r,\n        r_unit = applyForce_r_unit,\n        u = applyForce_u,\n        f = applyForce_f,\n        tmp = applyForce_tmp;\n\n    var worldAnchorA = applyForce_worldAnchorA,\n        worldAnchorB = applyForce_worldAnchorB,\n        ri = applyForce_ri,\n        rj = applyForce_rj,\n        ri_x_f = applyForce_ri_x_f,\n        rj_x_f = applyForce_rj_x_f;\n\n    // Get world anchors\n    this.getWorldAnchorA(worldAnchorA);\n    this.getWorldAnchorB(worldAnchorB);\n\n    // Get offset points\n    worldAnchorA.vsub(bodyA.position,ri);\n    worldAnchorB.vsub(bodyB.position,rj);\n\n    // Compute distance vector between world anchor points\n    worldAnchorB.vsub(worldAnchorA,r);\n    var rlen = r.norm();\n    r_unit.copy(r);\n    r_unit.normalize();\n\n    // Compute relative velocity of the anchor points, u\n    bodyB.velocity.vsub(bodyA.velocity,u);\n    // Add rotational velocity\n\n    bodyB.angularVelocity.cross(rj,tmp);\n    u.vadd(tmp,u);\n    bodyA.angularVelocity.cross(ri,tmp);\n    u.vsub(tmp,u);\n\n    // F = - k * ( x - L ) - D * ( u )\n    r_unit.mult(-k*(rlen-l) - d*u.dot(r_unit), f);\n\n    // Add forces to bodies\n    bodyA.force.vsub(f,bodyA.force);\n    bodyB.force.vadd(f,bodyB.force);\n\n    // Angular force\n    ri.cross(f,ri_x_f);\n    rj.cross(f,rj_x_f);\n    bodyA.torque.vsub(ri_x_f,bodyA.torque);\n    bodyB.torque.vadd(rj_x_f,bodyB.torque);\n};\n","require('./a-grid');\nrequire('./a-hexgrid');\nrequire('./a-ocean');\nrequire('./a-tube');\n","var Vec3 = require('./Vec3');\nvar Quaternion = require('./Quaternion');\n\nmodule.exports = Transform;\n\n/**\n * @class Transform\n * @constructor\n */\nfunction Transform(options) {\n    options = options || {};\n\n\t/**\n\t * @property {Vec3} position\n\t */\n\tthis.position = new Vec3();\n    if(options.position){\n        this.position.copy(options.position);\n    }\n\n\t/**\n\t * @property {Quaternion} quaternion\n\t */\n\tthis.quaternion = new Quaternion();\n    if(options.quaternion){\n        this.quaternion.copy(options.quaternion);\n    }\n}\n\nvar tmpQuat = new Quaternion();\n\n/**\n * @static\n * @method pointToLocaFrame\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {Vec3} worldPoint\n * @param {Vec3} result\n */\nTransform.pointToLocalFrame = function(position, quaternion, worldPoint, result){\n    var result = result || new Vec3();\n    worldPoint.vsub(position, result);\n    quaternion.conjugate(tmpQuat);\n    tmpQuat.vmult(result, result);\n    return result;\n};\n\n/**\n * Get a global point in local transform coordinates.\n * @method pointToLocal\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToLocal = function(worldPoint, result){\n    return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n};\n\n/**\n * @static\n * @method pointToWorldFrame\n * @param {Vec3} position\n * @param {Vec3} quaternion\n * @param {Vec3} localPoint\n * @param {Vec3} result\n */\nTransform.pointToWorldFrame = function(position, quaternion, localPoint, result){\n    var result = result || new Vec3();\n    quaternion.vmult(localPoint, result);\n    result.vadd(position, result);\n    return result;\n};\n\n/**\n * Get a local point in global transform coordinates.\n * @method pointToWorld\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\nTransform.prototype.pointToWorld = function(localPoint, result){\n    return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n};\n\n\nTransform.prototype.vectorToWorldFrame = function(localVector, result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToWorldFrame = function(quaternion, localVector, result){\n    quaternion.vmult(localVector, result);\n    return result;\n};\n\nTransform.vectorToLocalFrame = function(position, quaternion, worldVector, result){\n    var result = result || new Vec3();\n    quaternion.w *= -1;\n    quaternion.vmult(worldVector, result);\n    quaternion.w *= -1;\n    return result;\n};\n","module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {default: {x: 0, y: 0, z: 0}, type: 'vec3'}\n  },\n\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n\n  play: function () { this.el.addEventListener('click', this.fire); },\n  pause: function () { this.el.removeEventListener('click', this.fire); },\n  remove: function () { this.pause(); },\n\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = DistanceConstraint;\n\nvar Constraint = require('./Constraint');\nvar ContactEquation = require('../equations/ContactEquation');\n\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n * @class DistanceConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n * @param {Number} [maxForce=1e6]\n * @extends Constraint\n */\nfunction DistanceConstraint(bodyA,bodyB,distance,maxForce){\n    Constraint.call(this,bodyA,bodyB);\n\n    if(typeof(distance)===\"undefined\") {\n        distance = bodyA.position.distanceTo(bodyB.position);\n    }\n\n    if(typeof(maxForce)===\"undefined\") {\n        maxForce = 1e6;\n    }\n\n    /**\n     * @property {number} distance\n     */\n    this.distance = distance;\n\n    /**\n     * @property {ContactEquation} distanceEquation\n     */\n    var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n    this.equations.push(eq);\n\n    // Make it bidirectional\n    eq.minForce = -maxForce;\n    eq.maxForce =  maxForce;\n}\nDistanceConstraint.prototype = new Constraint();\n\nDistanceConstraint.prototype.update = function(){\n    var bodyA = this.bodyA;\n    var bodyB = this.bodyB;\n    var eq = this.distanceEquation;\n    var halfDist = this.distance * 0.5;\n    var normal = eq.ni;\n\n    bodyB.position.vsub(bodyA.position, normal);\n    normal.normalize();\n    normal.mult(halfDist, eq.ri);\n    normal.mult(-halfDist, eq.rj);\n};","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","module.exports = Constraint;\n\nvar Utils = require('../utils/Utils');\n\n/**\n * Constraint base class\n * @class Constraint\n * @author schteppe\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {boolean} [options.collideConnected=true]\n * @param {boolean} [options.wakeUpBodies=true]\n */\nfunction Constraint(bodyA, bodyB, options){\n    options = Utils.defaults(options,{\n        collideConnected : true,\n        wakeUpBodies : true,\n    });\n\n    /**\n     * Equations to be solved in this constraint\n     * @property equations\n     * @type {Array}\n     */\n    this.equations = [];\n\n    /**\n     * @property {Body} bodyA\n     */\n    this.bodyA = bodyA;\n\n    /**\n     * @property {Body} bodyB\n     */\n    this.bodyB = bodyB;\n\n    /**\n     * @property {Number} id\n     */\n    this.id = Constraint.idCounter++;\n\n    /**\n     * Set to true if you want the bodies to collide when they are connected.\n     * @property collideConnected\n     * @type {boolean}\n     */\n    this.collideConnected = options.collideConnected;\n\n    if(options.wakeUpBodies){\n        if(bodyA){\n            bodyA.wakeUp();\n        }\n        if(bodyB){\n            bodyB.wakeUp();\n        }\n    }\n}\n\n/**\n * Update all the equations with data.\n * @method update\n */\nConstraint.prototype.update = function(){\n    throw new Error(\"method update() not implmemented in this Constraint subclass!\");\n};\n\n/**\n * Enables all equations in the constraint.\n * @method enable\n */\nConstraint.prototype.enable = function(){\n    var eqs = this.equations;\n    for(var i=0; i<eqs.length; i++){\n        eqs[i].enabled = true;\n    }\n};\n\n/**\n * Disables all equations in the constraint.\n * @method disable\n */\nConstraint.prototype.disable = function(){\n    var eqs = this.equations;\n    for(var i=0; i<eqs.length; i++){\n        eqs[i].enabled = false;\n    }\n};\n\nConstraint.idCounter = 0;\n","var CANNON = require('cannon');\n\nvar Shape = {\n  schema: {\n    shape: {default: 'box', oneOf: ['box', 'sphere', 'cylinder']},\n    offset: {type: 'vec3', default: {x: 0, y: 0, z: 0}},\n    orientation: {type: 'vec4', default: {x: 0, y: 0, z: 0, w: 1}},\n\n    // sphere\n    radius: {type: 'number', default: 1, if: {shape: ['sphere']}},\n\n    // box\n    halfExtents: {type: 'vec3', default: {x: 1, y: 1, z: 1}, if: {shape: ['box']}},\n    \n    // cylinder\n    radiusTop: {type: 'number', default: 1, if: {shape: ['cylinder']}},\n    radiusBottom: {type: 'number', default: 1, if: {shape: ['cylinder']}},\n    height: {type: 'number', default: 1, if: {shape: ['cylinder']}},\n    numSegments: {type: 'int', default: 8, if: {shape: ['cylinder']}}\n  },\n\n  multiple: true,\n\n  init: function() {\n    if (this.el.sceneEl.hasLoaded) {\n      this.initShape();\n    } else {\n      this.el.sceneEl.addEventListener('loaded', this.initShape.bind(this));\n    }\n  },\n\n  initShape: function() {\n    this.bodyEl = this.el;\n    var bodyType = this._findType(this.bodyEl);\n    var data = this.data;\n\n    while (!bodyType && this.bodyEl.parentNode) {\n      this.bodyEl = this.bodyEl.parentNode;\n      bodyType = this._findType(this.bodyEl);\n    }\n\n    var scale = new THREE.Vector3();\n    this.bodyEl.object3D.getWorldScale(scale);\n    var shape, offset, orientation;\n\n    if (data.hasOwnProperty('offset')) {\n      offset = new CANNON.Vec3(\n        data.offset.x * scale.x, \n        data.offset.y * scale.y, \n        data.offset.z * scale.z\n      );\n    }\n\n    if (data.hasOwnProperty('orientation')) {\n      orientation = new CANNON.Quaternion();\n      orientation.copy(data.orientation);\n    }\n\n    switch(data.shape) {\n      case 'sphere':\n        shape = new CANNON.Sphere(data.radius * scale.x);\n        break;\n      case 'box':\n        var halfExtents = new CANNON.Vec3(\n          data.halfExtents.x * scale.x, \n          data.halfExtents.y * scale.y, \n          data.halfExtents.z * scale.z\n        );\n        shape = new CANNON.Box(halfExtents);\n        break;\n      case 'cylinder':\n        shape = new CANNON.Cylinder(\n          data.radiusTop * scale.x, \n          data.radiusBottom * scale.x, \n          data.height * scale.y, \n          data.numSegments\n        );\n\n        //rotate by 90 degrees similar to mesh2shape:createCylinderShape\n        var quat = new CANNON.Quaternion();\n        quat.setFromEuler(90 * THREE.Math.DEG2RAD, 0, 0, 'XYZ').normalize();\n        orientation.mult(quat, orientation);\n        break;\n      default:\n          console.warn(data.shape + ' shape not supported');\n        return;\n    }\n\n    this.bodyEl.components[bodyType].addShape(shape, offset, orientation);\n  },\n\n  _findType: function(el) {\n    if (el.hasAttribute('body')) {\n      return 'body';\n    } else if (el.hasAttribute('dynamic-body')) {\n      return 'dynamic-body';\n    } else if (el.hasAttribute('static-body')) {\n      return'static-body';\n    }\n    return null;\n  },\n\n  remove: function() {\n    if (this.bodyEl.parentNode) {\n      console.warn('removing shape component not currently supported');\n    }\n  }\n};\n\nmodule.exports.definition = Shape;\nmodule.exports.Component = AFRAME.registerComponent('shape', Shape);\n","var Utils = require('../utils/Utils');\n\nmodule.exports = ContactMaterial;\n\n/**\n * Defines what happens when two materials meet.\n * @class ContactMaterial\n * @constructor\n * @param {Material} m1\n * @param {Material} m2\n * @param {object} [options]\n * @param {Number} [options.friction=0.3]\n * @param {Number} [options.restitution=0.3]\n * @param {number} [options.contactEquationStiffness=1e7]\n * @param {number} [options.contactEquationRelaxation=3]\n * @param {number} [options.frictionEquationStiffness=1e7]\n * @param {Number} [options.frictionEquationRelaxation=3]\n */\nfunction ContactMaterial(m1, m2, options){\n    options = Utils.defaults(options, {\n        friction: 0.3,\n        restitution: 0.3,\n        contactEquationStiffness: 1e7,\n        contactEquationRelaxation: 3,\n        frictionEquationStiffness: 1e7,\n        frictionEquationRelaxation: 3\n    });\n\n    /**\n     * Identifier of this material\n     * @property {Number} id\n     */\n    this.id = ContactMaterial.idCounter++;\n\n    /**\n     * Participating materials\n     * @property {Array} materials\n     * @todo  Should be .materialA and .materialB instead\n     */\n    this.materials = [m1, m2];\n\n    /**\n     * Friction coefficient\n     * @property {Number} friction\n     */\n    this.friction = options.friction;\n\n    /**\n     * Restitution coefficient\n     * @property {Number} restitution\n     */\n    this.restitution = options.restitution;\n\n    /**\n     * Stiffness of the produced contact equations\n     * @property {Number} contactEquationStiffness\n     */\n    this.contactEquationStiffness = options.contactEquationStiffness;\n\n    /**\n     * Relaxation time of the produced contact equations\n     * @property {Number} contactEquationRelaxation\n     */\n    this.contactEquationRelaxation = options.contactEquationRelaxation;\n\n    /**\n     * Stiffness of the produced friction equations\n     * @property {Number} frictionEquationStiffness\n     */\n    this.frictionEquationStiffness = options.frictionEquationStiffness;\n\n    /**\n     * Relaxation time of the produced friction equations\n     * @property {Number} frictionEquationRelaxation\n     */\n    this.frictionEquationRelaxation = options.frictionEquationRelaxation;\n}\n\nContactMaterial.idCounter = 0;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","var Body = require('./Body');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar RaycastResult = require('../collision/RaycastResult');\nvar Ray = require('../collision/Ray');\nvar WheelInfo = require('../objects/WheelInfo');\n\nmodule.exports = RaycastVehicle;\n\n/**\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\n * @class RaycastVehicle\n * @constructor\n * @param {object} [options]\n * @param {Body} [options.chassisBody] The car chassis body.\n * @param {integer} [options.indexRightAxis] Axis to use for right. x=0, y=1, z=2\n * @param {integer} [options.indexLeftAxis]\n * @param {integer} [options.indexUpAxis]\n */\nfunction RaycastVehicle(options){\n\n    /**\n     * @property {Body} chassisBody\n     */\n    this.chassisBody = options.chassisBody;\n\n    /**\n     * An array of WheelInfo objects.\n     * @property {array} wheelInfos\n     */\n    this.wheelInfos = [];\n\n    /**\n     * Will be set to true if the car is sliding.\n     * @property {boolean} sliding\n     */\n    this.sliding = false;\n\n    /**\n     * @property {World} world\n     */\n    this.world = null;\n\n    /**\n     * Index of the right axis, 0=x, 1=y, 2=z\n     * @property {integer} indexRightAxis\n     * @default 1\n     */\n    this.indexRightAxis = typeof(options.indexRightAxis) !== 'undefined' ? options.indexRightAxis : 1;\n\n    /**\n     * Index of the forward axis, 0=x, 1=y, 2=z\n     * @property {integer} indexForwardAxis\n     * @default 0\n     */\n    this.indexForwardAxis = typeof(options.indexForwardAxis) !== 'undefined' ? options.indexForwardAxis : 0;\n\n    /**\n     * Index of the up axis, 0=x, 1=y, 2=z\n     * @property {integer} indexUpAxis\n     * @default 2\n     */\n    this.indexUpAxis = typeof(options.indexUpAxis) !== 'undefined' ? options.indexUpAxis : 2;\n}\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpVec3 = new Vec3();\nvar tmpVec4 = new Vec3();\nvar tmpVec5 = new Vec3();\nvar tmpVec6 = new Vec3();\nvar tmpRay = new Ray();\n\n/**\n * Add a wheel. For information about the options, see WheelInfo.\n * @method addWheel\n * @param {object} [options]\n */\nRaycastVehicle.prototype.addWheel = function(options){\n    options = options || {};\n\n    var info = new WheelInfo(options);\n    var index = this.wheelInfos.length;\n    this.wheelInfos.push(info);\n\n    return index;\n};\n\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n */\nRaycastVehicle.prototype.setSteeringValue = function(value, wheelIndex){\n    var wheel = this.wheelInfos[wheelIndex];\n    wheel.steering = value;\n};\n\nvar torque = new Vec3();\n\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method applyEngineForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\nRaycastVehicle.prototype.applyEngineForce = function(value, wheelIndex){\n    this.wheelInfos[wheelIndex].engineForce = value;\n};\n\n/**\n * Set the braking force of a wheel\n * @method setBrake\n * @param {number} brake\n * @param {integer} wheelIndex\n */\nRaycastVehicle.prototype.setBrake = function(brake, wheelIndex){\n    this.wheelInfos[wheelIndex].brake = brake;\n};\n\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\nRaycastVehicle.prototype.addToWorld = function(world){\n    var constraints = this.constraints;\n    world.addBody(this.chassisBody);\n    var that = this;\n    this.preStepCallback = function(){\n        that.updateVehicle(world.dt);\n    };\n    world.addEventListener('preStep', this.preStepCallback);\n    this.world = world;\n};\n\n/**\n * Get one of the wheel axles, world-oriented.\n * @private\n * @method getVehicleAxisWorld\n * @param  {integer} axisIndex\n * @param  {Vec3} result\n */\nRaycastVehicle.prototype.getVehicleAxisWorld = function(axisIndex, result){\n    result.set(\n        axisIndex === 0 ? 1 : 0,\n        axisIndex === 1 ? 1 : 0,\n        axisIndex === 2 ? 1 : 0\n    );\n    this.chassisBody.vectorToWorldFrame(result, result);\n};\n\nRaycastVehicle.prototype.updateVehicle = function(timeStep){\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n    var chassisBody = this.chassisBody;\n\n    for (var i = 0; i < numWheels; i++) {\n        this.updateWheelTransform(i);\n    }\n\n    this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.norm();\n\n    var forwardWorld = new Vec3();\n    this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\n\n    if (forwardWorld.dot(chassisBody.velocity) < 0){\n        this.currentVehicleSpeedKmHour *= -1;\n    }\n\n    // simulate suspension\n    for (var i = 0; i < numWheels; i++) {\n        this.castRay(wheelInfos[i]);\n    }\n\n    this.updateSuspension(timeStep);\n\n    var impulse = new Vec3();\n    var relpos = new Vec3();\n    for (var i = 0; i < numWheels; i++) {\n        //apply suspension force\n        var wheel = wheelInfos[i];\n        var suspensionForce = wheel.suspensionForce;\n        if (suspensionForce > wheel.maxSuspensionForce) {\n            suspensionForce = wheel.maxSuspensionForce;\n        }\n        wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\n\n        wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\n        chassisBody.applyImpulse(impulse, relpos);\n    }\n\n    this.updateFriction(timeStep);\n\n    var hitNormalWorldScaledWithProj = new Vec3();\n    var fwd  = new Vec3();\n    var vel = new Vec3();\n    for (i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n        //var relpos = new Vec3();\n        //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\n        chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel);\n\n        // Hack to get the rotation in the correct direction\n        var m = 1;\n        switch(this.indexUpAxis){\n        case 1:\n            m = -1;\n            break;\n        }\n\n        if (wheel.isInContact) {\n\n            this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\n            var proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\n            wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\n\n            fwd.vsub(hitNormalWorldScaledWithProj, fwd);\n\n            var proj2 = fwd.dot(vel);\n            wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\n        }\n\n        if((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed){\n            // Apply custom rotation when accelerating and sliding\n            wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\n        }\n\n        // Lock wheels\n        if(Math.abs(wheel.brake) > Math.abs(wheel.engineForce)){\n            wheel.deltaRotation = 0;\n        }\n\n        wheel.rotation += wheel.deltaRotation; // Use the old value\n        wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\n    }\n};\n\nRaycastVehicle.prototype.updateSuspension = function(deltaTime) {\n    var chassisBody = this.chassisBody;\n    var chassisMass = chassisBody.mass;\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n\n    for (var w_it = 0; w_it < numWheels; w_it++){\n        var wheel = wheelInfos[w_it];\n\n        if (wheel.isInContact){\n            var force;\n\n            // Spring\n            var susp_length = wheel.suspensionRestLength;\n            var current_length = wheel.suspensionLength;\n            var length_diff = (susp_length - current_length);\n\n            force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension;\n\n            // Damper\n            var projected_rel_vel = wheel.suspensionRelativeVelocity;\n            var susp_damping;\n            if (projected_rel_vel < 0) {\n                susp_damping = wheel.dampingCompression;\n            } else {\n                susp_damping = wheel.dampingRelaxation;\n            }\n            force -= susp_damping * projected_rel_vel;\n\n            wheel.suspensionForce = force * chassisMass;\n            if (wheel.suspensionForce < 0) {\n                wheel.suspensionForce = 0;\n            }\n        } else {\n            wheel.suspensionForce = 0;\n        }\n    }\n};\n\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\nRaycastVehicle.prototype.removeFromWorld = function(world){\n    var constraints = this.constraints;\n    world.remove(this.chassisBody);\n    world.removeEventListener('preStep', this.preStepCallback);\n    this.world = null;\n};\n\nvar castRay_rayvector = new Vec3();\nvar castRay_target = new Vec3();\nRaycastVehicle.prototype.castRay = function(wheel) {\n    var rayvector = castRay_rayvector;\n    var target = castRay_target;\n\n    this.updateWheelTransformWorld(wheel);\n    var chassisBody = this.chassisBody;\n\n    var depth = -1;\n\n    var raylen = wheel.suspensionRestLength + wheel.radius;\n\n    wheel.directionWorld.scale(raylen, rayvector);\n    var source = wheel.chassisConnectionPointWorld;\n    source.vadd(rayvector, target);\n    var raycastResult = wheel.raycastResult;\n\n    var param = 0;\n\n    raycastResult.reset();\n    // Turn off ray collision with the chassis temporarily\n    var oldState = chassisBody.collisionResponse;\n    chassisBody.collisionResponse = false;\n\n    // Cast ray against world\n    this.world.rayTest(source, target, raycastResult);\n    chassisBody.collisionResponse = oldState;\n\n    var object = raycastResult.body;\n\n    wheel.raycastResult.groundObject = 0;\n\n    if (object) {\n        depth = raycastResult.distance;\n        wheel.raycastResult.hitNormalWorld  = raycastResult.hitNormalWorld;\n        wheel.isInContact = true;\n\n        var hitDistance = raycastResult.distance;\n        wheel.suspensionLength = hitDistance - wheel.radius;\n\n        // clamp on max suspension travel\n        var minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\n        var maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\n        if (wheel.suspensionLength < minSuspensionLength) {\n            wheel.suspensionLength = minSuspensionLength;\n        }\n        if (wheel.suspensionLength > maxSuspensionLength) {\n            wheel.suspensionLength = maxSuspensionLength;\n            wheel.raycastResult.reset();\n        }\n\n        var denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\n\n        var chassis_velocity_at_contactPoint = new Vec3();\n        chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\n\n        var projVel = wheel.raycastResult.hitNormalWorld.dot( chassis_velocity_at_contactPoint );\n\n        if (denominator >= -0.1) {\n            wheel.suspensionRelativeVelocity = 0;\n            wheel.clippedInvContactDotSuspension = 1 / 0.1;\n        } else {\n            var inv = -1 / denominator;\n            wheel.suspensionRelativeVelocity = projVel * inv;\n            wheel.clippedInvContactDotSuspension = inv;\n        }\n\n    } else {\n\n        //put wheel info as in rest position\n        wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\n        wheel.suspensionRelativeVelocity = 0.0;\n        wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\n        wheel.clippedInvContactDotSuspension = 1.0;\n    }\n\n    return depth;\n};\n\nRaycastVehicle.prototype.updateWheelTransformWorld = function(wheel){\n    wheel.isInContact = false;\n    var chassisBody = this.chassisBody;\n    chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\n    chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\n    chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\n};\n\n\n/**\n * Update one of the wheel transform.\n * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\n * @method updateWheelTransform\n * @param {integer} wheelIndex The wheel index to update.\n */\nRaycastVehicle.prototype.updateWheelTransform = function(wheelIndex){\n    var up = tmpVec4;\n    var right = tmpVec5;\n    var fwd = tmpVec6;\n\n    var wheel = this.wheelInfos[wheelIndex];\n    this.updateWheelTransformWorld(wheel);\n\n    wheel.directionLocal.scale(-1, up);\n    right.copy(wheel.axleLocal);\n    up.cross(right, fwd);\n    fwd.normalize();\n    right.normalize();\n\n    // Rotate around steering over the wheelAxle\n    var steering = wheel.steering;\n    var steeringOrn = new Quaternion();\n    steeringOrn.setFromAxisAngle(up, steering);\n\n    var rotatingOrn = new Quaternion();\n    rotatingOrn.setFromAxisAngle(right, wheel.rotation);\n\n    // World rotation of the wheel\n    var q = wheel.worldTransform.quaternion;\n    this.chassisBody.quaternion.mult(steeringOrn, q);\n    q.mult(rotatingOrn, q);\n\n    q.normalize();\n\n    // world position of the wheel\n    var p = wheel.worldTransform.position;\n    p.copy(wheel.directionWorld);\n    p.scale(wheel.suspensionLength, p);\n    p.vadd(wheel.chassisConnectionPointWorld, p);\n};\n\nvar directions = [\n    new Vec3(1, 0, 0),\n    new Vec3(0, 1, 0),\n    new Vec3(0, 0, 1)\n];\n\n/**\n * Get the world transform of one of the wheels\n * @method getWheelTransformWorld\n * @param  {integer} wheelIndex\n * @return {Transform}\n */\nRaycastVehicle.prototype.getWheelTransformWorld = function(wheelIndex) {\n    return this.wheelInfos[wheelIndex].worldTransform;\n};\n\n\nvar updateFriction_surfNormalWS_scaled_proj = new Vec3();\nvar updateFriction_axle = [];\nvar updateFriction_forwardWS = [];\nvar sideFrictionStiffness2 = 1;\nRaycastVehicle.prototype.updateFriction = function(timeStep) {\n    var surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj;\n\n    //calculate the impulse, so that the wheels don't move sidewards\n    var wheelInfos = this.wheelInfos;\n    var numWheels = wheelInfos.length;\n    var chassisBody = this.chassisBody;\n    var forwardWS = updateFriction_forwardWS;\n    var axle = updateFriction_axle;\n\n    var numWheelsOnGround = 0;\n\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n\n        var groundObject = wheel.raycastResult.body;\n        if (groundObject){\n            numWheelsOnGround++;\n        }\n\n        wheel.sideImpulse = 0;\n        wheel.forwardImpulse = 0;\n        if(!forwardWS[i]){\n            forwardWS[i] = new Vec3();\n        }\n        if(!axle[i]){\n            axle[i] = new Vec3();\n        }\n    }\n\n    for (var i = 0; i < numWheels; i++){\n        var wheel = wheelInfos[i];\n\n        var groundObject = wheel.raycastResult.body;\n\n        if (groundObject) {\n            var axlei = axle[i];\n            var wheelTrans = this.getWheelTransformWorld(i);\n\n            // Get world axle\n            wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\n\n            var surfNormalWS = wheel.raycastResult.hitNormalWorld;\n            var proj = axlei.dot(surfNormalWS);\n            surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\n            axlei.vsub(surfNormalWS_scaled_proj, axlei);\n            axlei.normalize();\n\n            surfNormalWS.cross(axlei, forwardWS[i]);\n            forwardWS[i].normalize();\n\n            wheel.sideImpulse = resolveSingleBilateral(\n                chassisBody,\n                wheel.raycastResult.hitPointWorld,\n                groundObject,\n                wheel.raycastResult.hitPointWorld,\n                axlei\n            );\n\n            wheel.sideImpulse *= sideFrictionStiffness2;\n        }\n    }\n\n    var sideFactor = 1;\n    var fwdFactor = 0.5;\n\n    this.sliding = false;\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n        var groundObject = wheel.raycastResult.body;\n\n        var rollingFriction = 0;\n\n        wheel.slipInfo = 1;\n        if (groundObject) {\n            var defaultRollingFrictionImpulse = 0;\n            var maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse;\n\n            // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\n            // rollingFriction = calcRollingFriction(contactPt);\n            rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\n\n            rollingFriction += wheel.engineForce * timeStep;\n\n            // rollingFriction = 0;\n            var factor = maxImpulse / rollingFriction;\n            wheel.slipInfo *= factor;\n        }\n\n        //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\n\n        wheel.forwardImpulse = 0;\n        wheel.skidInfo = 1;\n\n        if (groundObject) {\n            wheel.skidInfo = 1;\n\n            var maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\n            var maximpSide = maximp;\n\n            var maximpSquared = maximp * maximpSide;\n\n            wheel.forwardImpulse = rollingFriction;//wheelInfo.engineForce* timeStep;\n\n            var x = wheel.forwardImpulse * fwdFactor;\n            var y = wheel.sideImpulse * sideFactor;\n\n            var impulseSquared = x * x + y * y;\n\n            wheel.sliding = false;\n            if (impulseSquared > maximpSquared) {\n                this.sliding = true;\n                wheel.sliding = true;\n\n                var factor = maximp / Math.sqrt(impulseSquared);\n\n                wheel.skidInfo *= factor;\n            }\n        }\n    }\n\n    if (this.sliding) {\n        for (var i = 0; i < numWheels; i++) {\n            var wheel = wheelInfos[i];\n            if (wheel.sideImpulse !== 0) {\n                if (wheel.skidInfo < 1){\n                    wheel.forwardImpulse *= wheel.skidInfo;\n                    wheel.sideImpulse *= wheel.skidInfo;\n                }\n            }\n        }\n    }\n\n    // apply the impulses\n    for (var i = 0; i < numWheels; i++) {\n        var wheel = wheelInfos[i];\n\n        var rel_pos = new Vec3();\n        wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos);\n        // cannons applyimpulse is using world coord for the position\n        //rel_pos.copy(wheel.raycastResult.hitPointWorld);\n\n        if (wheel.forwardImpulse !== 0) {\n            var impulse = new Vec3();\n            forwardWS[i].scale(wheel.forwardImpulse, impulse);\n            chassisBody.applyImpulse(impulse, rel_pos);\n        }\n\n        if (wheel.sideImpulse !== 0){\n            var groundObject = wheel.raycastResult.body;\n\n            var rel_pos2 = new Vec3();\n            wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2);\n            //rel_pos2.copy(wheel.raycastResult.hitPointWorld);\n            var sideImp = new Vec3();\n            axle[i].scale(wheel.sideImpulse, sideImp);\n\n            // Scale the relative position in the up direction with rollInfluence.\n            // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\n            chassisBody.vectorToLocalFrame(rel_pos, rel_pos);\n            rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\n            chassisBody.vectorToWorldFrame(rel_pos, rel_pos);\n            chassisBody.applyImpulse(sideImp, rel_pos);\n\n            //apply friction impulse on the ground\n            sideImp.scale(-1, sideImp);\n            groundObject.applyImpulse(sideImp, rel_pos2);\n        }\n    }\n};\n\nvar calcRollingFriction_vel1 = new Vec3();\nvar calcRollingFriction_vel2 = new Vec3();\nvar calcRollingFriction_vel = new Vec3();\n\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\n    var j1 = 0;\n    var contactPosWorld = frictionPosWorld;\n\n    // var rel_pos1 = new Vec3();\n    // var rel_pos2 = new Vec3();\n    var vel1 = calcRollingFriction_vel1;\n    var vel2 = calcRollingFriction_vel2;\n    var vel = calcRollingFriction_vel;\n    // contactPosWorld.vsub(body0.position, rel_pos1);\n    // contactPosWorld.vsub(body1.position, rel_pos2);\n\n    body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\n    body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\n    vel1.vsub(vel2, vel);\n\n    var vrel = frictionDirectionWorld.dot(vel);\n\n    var denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\n    var denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\n    var relaxation = 1;\n    var jacDiagABInv = relaxation / (denom0 + denom1);\n\n    // calculate j that moves us to zero relative velocity\n    j1 = -vrel * jacDiagABInv;\n\n    if (maxImpulse < j1) {\n        j1 = maxImpulse;\n    }\n    if (j1 < -maxImpulse) {\n        j1 = -maxImpulse;\n    }\n\n    return j1;\n}\n\nvar computeImpulseDenominator_r0 = new Vec3();\nvar computeImpulseDenominator_c0 = new Vec3();\nvar computeImpulseDenominator_vec = new Vec3();\nvar computeImpulseDenominator_m = new Vec3();\nfunction computeImpulseDenominator(body, pos, normal) {\n    var r0 = computeImpulseDenominator_r0;\n    var c0 = computeImpulseDenominator_c0;\n    var vec = computeImpulseDenominator_vec;\n    var m = computeImpulseDenominator_m;\n\n    pos.vsub(body.position, r0);\n    r0.cross(normal, c0);\n    body.invInertiaWorld.vmult(c0, m);\n    m.cross(r0, vec);\n\n    return body.invMass + normal.dot(vec);\n}\n\n\nvar resolveSingleBilateral_vel1 = new Vec3();\nvar resolveSingleBilateral_vel2 = new Vec3();\nvar resolveSingleBilateral_vel = new Vec3();\n\n//bilateral constraint between two dynamic objects\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal, impulse){\n    var normalLenSqr = normal.norm2();\n    if (normalLenSqr > 1.1){\n        return 0; // no impulse\n    }\n    // var rel_pos1 = new Vec3();\n    // var rel_pos2 = new Vec3();\n    // pos1.vsub(body1.position, rel_pos1);\n    // pos2.vsub(body2.position, rel_pos2);\n\n    var vel1 = resolveSingleBilateral_vel1;\n    var vel2 = resolveSingleBilateral_vel2;\n    var vel = resolveSingleBilateral_vel;\n    body1.getVelocityAtWorldPoint(pos1, vel1);\n    body2.getVelocityAtWorldPoint(pos2, vel2);\n\n    vel1.vsub(vel2, vel);\n\n    var rel_vel = normal.dot(vel);\n\n    var contactDamping = 0.2;\n    var massTerm = 1 / (body1.invMass + body2.invMass);\n    var impulse = - contactDamping * rel_vel * massTerm;\n\n    return impulse;\n}","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","module.exports = Pool;\n\n/**\n * For pooling objects that can be reused.\n * @class Pool\n * @constructor\n */\nfunction Pool(){\n    /**\n     * The pooled objects\n     * @property {Array} objects\n     */\n    this.objects = [];\n\n    /**\n     * Constructor of the objects\n     * @property {mixed} type\n     */\n    this.type = Object;\n}\n\n/**\n * Release an object after use\n * @method release\n * @param {Object} obj\n */\nPool.prototype.release = function(){\n    var Nargs = arguments.length;\n    for(var i=0; i!==Nargs; i++){\n        this.objects.push(arguments[i]);\n    }\n    return this;\n};\n\n/**\n * Get an object\n * @method get\n * @return {mixed}\n */\nPool.prototype.get = function(){\n    if(this.objects.length===0){\n        return this.constructObject();\n    } else {\n        return this.objects.pop();\n    }\n};\n\n/**\n * Construct an object. Should be implmented in each subclass.\n * @method constructObject\n * @return {mixed}\n */\nPool.prototype.constructObject = function(){\n    throw new Error(\"constructObject() not implemented in this Pool subclass yet!\");\n};\n\n/**\n * @method resize\n * @param {number} size\n * @return {Pool} Self, for chaining\n */\nPool.prototype.resize = function (size) {\n    var objects = this.objects;\n\n    while (objects.length > size) {\n        objects.pop();\n    }\n\n    while (objects.length < size) {\n        objects.push(this.constructObject());\n    }\n\n    return this;\n};\n\n","module.exports = LockConstraint;\n\nvar Constraint = require('./Constraint');\nvar PointToPointConstraint = require('./PointToPointConstraint');\nvar RotationalEquation = require('../equations/RotationalEquation');\nvar RotationalMotorEquation = require('../equations/RotationalMotorEquation');\nvar ContactEquation = require('../equations/ContactEquation');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * Lock constraint. Will remove all degrees of freedom between the bodies.\n * @class LockConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\nfunction LockConstraint(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    // Set pivot point in between\n    var pivotA = new Vec3();\n    var pivotB = new Vec3();\n    var halfWay = new Vec3();\n    bodyA.position.vadd(bodyB.position, halfWay);\n    halfWay.scale(0.5, halfWay);\n    bodyB.pointToLocalFrame(halfWay, pivotB);\n    bodyA.pointToLocalFrame(halfWay, pivotA);\n\n    // The point-to-point constraint will keep a point shared between the bodies\n    PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n\n    // Store initial rotation of the bodies as unit vectors in the local body spaces\n    this.xA = bodyA.vectorToLocalFrame(Vec3.UNIT_X);\n    this.xB = bodyB.vectorToLocalFrame(Vec3.UNIT_X);\n    this.yA = bodyA.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.yB = bodyB.vectorToLocalFrame(Vec3.UNIT_Y);\n    this.zA = bodyA.vectorToLocalFrame(Vec3.UNIT_Z);\n    this.zB = bodyB.vectorToLocalFrame(Vec3.UNIT_Z);\n\n    // ...and the following rotational equations will keep all rotational DOF's in place\n\n    /**\n     * @property {RotationalEquation} rotationalEquation1\n     */\n    var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation2\n     */\n    var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA,bodyB,options);\n\n    /**\n     * @property {RotationalEquation} rotationalEquation3\n     */\n    var r3 = this.rotationalEquation3 = new RotationalEquation(bodyA,bodyB,options);\n\n    this.equations.push(r1, r2, r3);\n}\nLockConstraint.prototype = new PointToPointConstraint();\nLockConstraint.constructor = LockConstraint;\n\nvar LockConstraint_update_tmpVec1 = new Vec3();\nvar LockConstraint_update_tmpVec2 = new Vec3();\n\nLockConstraint.prototype.update = function(){\n    var bodyA = this.bodyA,\n        bodyB = this.bodyB,\n        motor = this.motorEquation,\n        r1 = this.rotationalEquation1,\n        r2 = this.rotationalEquation2,\n        r3 = this.rotationalEquation3,\n        worldAxisA = LockConstraint_update_tmpVec1,\n        worldAxisB = LockConstraint_update_tmpVec2;\n\n    PointToPointConstraint.prototype.update.call(this);\n\n    // These vector pairs must be orthogonal\n    bodyA.vectorToWorldFrame(this.xA, r1.axisA);\n    bodyB.vectorToWorldFrame(this.yB, r1.axisB);\n\n    bodyA.vectorToWorldFrame(this.yA, r2.axisA);\n    bodyB.vectorToWorldFrame(this.zB, r2.axisB);\n\n    bodyA.vectorToWorldFrame(this.zA, r3.axisA);\n    bodyB.vectorToWorldFrame(this.xB, r3.axisB);\n};\n\n","/* global CANNON */\n\n/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Handles events coming from the hand-controls.\n * Determines if the entity is grabbed or released.\n * Updates its position to move along the controller.\n */\nmodule.exports = AFRAME.registerComponent('grab', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    this.GRABBED_STATE = 'grabbed';\n\n    this.grabbing = false;\n    this.hitEl =      /** @type {AFRAME.Element}    */ null;\n    this.physics =    /** @type {AFRAME.System}     */ this.el.sceneEl.systems.physics;\n    this.constraint = /** @type {CANNON.Constraint} */ null;\n\n    // Bind event handlers\n    this.onHit = this.onHit.bind(this);\n    this.onGripOpen = this.onGripOpen.bind(this);\n    this.onGripClose = this.onGripClose.bind(this);\n  },\n\n  play: function () {\n    const el = this.el;\n    el.addEventListener('hit', this.onHit);\n    el.addEventListener('gripdown', this.onGripClose);\n    el.addEventListener('gripup', this.onGripOpen);\n    el.addEventListener('trackpaddown', this.onGripClose);\n    el.addEventListener('trackpadup', this.onGripOpen);\n    el.addEventListener('triggerdown', this.onGripClose);\n    el.addEventListener('triggerup', this.onGripOpen);\n  },\n\n  pause: function () {\n    const el = this.el;\n    el.removeEventListener('hit', this.onHit);\n    el.removeEventListener('gripdown', this.onGripClose);\n    el.removeEventListener('gripup', this.onGripOpen);\n    el.removeEventListener('trackpaddown', this.onGripClose);\n    el.removeEventListener('trackpadup', this.onGripOpen);\n    el.removeEventListener('triggerdown', this.onGripClose);\n    el.removeEventListener('triggerup', this.onGripOpen);\n  },\n\n  onGripClose: function () {\n    this.grabbing = true;\n  },\n\n  onGripOpen: function () {\n    const hitEl = this.hitEl;\n    this.grabbing = false;\n    if (!hitEl) { return; }\n    hitEl.removeState(this.GRABBED_STATE);\n    this.hitEl = undefined;\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n\n  onHit: function (evt) {\n    const hitEl = evt.detail.el;\n    // If the element is already grabbed (it could be grabbed by another controller).\n    // If the hand is not grabbing the element does not stick.\n    // If we're already grabbing something you can't grab again.\n    if (!hitEl || hitEl.is(this.GRABBED_STATE) || !this.grabbing || this.hitEl) { return; }\n    hitEl.addState(this.GRABBED_STATE);\n    this.hitEl = hitEl;\n    this.constraint = new CANNON.LockConstraint(this.el.body, hitEl.body);\n    this.system.addConstraint(this.constraint);\n  }\n});\n","/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\n\nconst COMPONENT_SUFFIX = '-controls',\n    MAX_DELTA = 0.2, // ms\n    EPS = 10e-6;\n\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n\n  /*******************************************************************\n   * Schema\n   */\n\n  dependencies: ['rotation'],\n\n  schema: {\n    enabled:            { default: true },\n    controls:           { default: ['gamepad', 'trackpad', 'keyboard', 'touch'] },\n    speed:              { default: 0.3, min: 0 },\n    fly:                { default: false },\n    constrainToNavMesh: { default: false },\n    camera:             { default: '[camera]', type: 'selector' }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    const el = this.el;\n\n    this.velocityCtrl = null;\n\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion();\n\n    // Navigation\n    this.navGroup = null;\n    this.navNode = null;\n\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n    if (data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      const nav = el.sceneEl.systems.nav;\n      data.constrainToNavMesh\n        ? nav.addAgent(this)\n        : nav.removeAgent(this);\n    }\n  },\n\n  injectControls: function () {\n    const data = this.data;\n    var name;\n\n    for (let i = 0; i < data.controls.length; i++) {\n      name = data.controls[i] + COMPONENT_SUFFIX;\n      if (!this.el.components[name]) {\n        this.el.setAttribute(name, '');\n      }\n    }\n  },\n\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n\n  /*******************************************************************\n   * Tick\n   */\n\n  tick: (function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n\n    return function (t, dt) {\n      if (!dt) return;\n\n      const el = this.el;\n      const data = this.data;\n\n      if (!data.enabled) return;\n\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n\n      if (!velocityCtrl) return;\n\n      // Update velocity. If FPS is too low, reset.\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n\n      if (data.constrainToNavMesh\n          && velocityCtrl.isNavMeshConstrained !== false) {\n\n        if (velocity.lengthSq() < EPS) return;\n\n        start.copy(el.object3D.position);\n        end\n          .copy(velocity)\n          .multiplyScalar(dt / 1000)\n          .add(start);\n\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n\n    };\n  }()),\n\n  /*******************************************************************\n   * Movement\n   */\n\n  updateVelocityCtrl: function () {\n    const data = this.data;\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n      this.velocityCtrl = null;\n    }\n  },\n\n  updateVelocity: (function () {\n    const vector2 = new THREE.Vector2();\n    // var matrix = new THREE.Matrix4();\n    // var matrix2 = new THREE.Matrix4();\n    // var position = new THREE.Vector3();\n    // var quaternion = new THREE.Quaternion();\n    // var scale = new THREE.Vector3();\n\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n\n      if (dVelocity && data.enabled) {\n        // TODO: Handle rotated rig.\n        const cameraEl = data.camera;\n        // matrix.copy(cameraEl.object3D.matrixWorld);\n        // matrix2.getInverse(el.object3D.matrixWorld);\n        // matrix.multiply(matrix2);\n        // matrix.decompose(position, quaternion, scale);\n        // dVelocity.applyQuaternion(quaternion);\n\n        // Rotate to heading\n        dVelocity.applyQuaternion(cameraEl.object3D.quaternion);\n\n        const factor = dVelocity.length();\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * dt);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * dt);\n          velocity.x = vector2.x;\n          velocity.z = vector2.y;\n        }\n      }\n    };\n\n  }())\n});\n","module.exports = {};\n","require('../../lib/keyboard.polyfill');\n\nconst MAX_DELTA = 0.2,\n    PROXY_FLAG = '__keyboard-controls-proxy';\n\nconst KeyboardEvent = window.KeyboardEvent;\n\n/**\n * Keyboard Controls component.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-keyboard-controls\n *\n * Bind keyboard events to components, or control your entities with the WASD keys.\n *\n * Why use KeyboardEvent.code? \"This is set to a string representing the key that was pressed to\n * generate the KeyboardEvent, without taking the current keyboard layout (e.g., QWERTY vs.\n * Dvorak), locale (e.g., English vs. French), or any modifier keys into account. This is useful\n * when you care about which physical key was pressed, rather thanwhich character it corresponds\n * to. For example, if you’re a writing a game, you might want a certain set of keys to move the\n * player in different directions, and that mapping should ideally be independent of keyboard\n * layout. See: https://developers.google.com/web/updates/2016/04/keyboardevent-keys-codes\n *\n * @namespace wasd-controls\n * keys the entity moves and if you release it will stop. Easing simulates friction.\n * to the entity when pressing the keys.\n * @param {bool} [enabled=true] - To completely enable or disable the controls\n */\nmodule.exports = AFRAME.registerComponent('keyboard-controls', {\n  schema: {\n    enabled:           { default: true },\n    debug:             { default: false }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.localKeys = {};\n    this.listeners = {\n      keydown: this.onKeyDown.bind(this),\n      keyup: this.onKeyUp.bind(this),\n      blur: this.onBlur.bind(this)\n    };\n    this.attachEventListeners();\n  },\n\n  /*******************************************************************\n  * Movement\n  */\n\n  isVelocityActive: function () {\n    return this.data.enabled && !!Object.keys(this.getKeys()).length;\n  },\n\n  getVelocityDelta: function () {\n    const data = this.data,\n        keys = this.getKeys();\n\n    this.dVelocity.set(0, 0, 0);\n    if (data.enabled) {\n      if (keys.KeyW || keys.ArrowUp)    { this.dVelocity.z -= 1; }\n      if (keys.KeyA || keys.ArrowLeft)  { this.dVelocity.x -= 1; }\n      if (keys.KeyS || keys.ArrowDown)  { this.dVelocity.z += 1; }\n      if (keys.KeyD || keys.ArrowRight) { this.dVelocity.x += 1; }\n    }\n\n    return this.dVelocity.clone();\n  },\n\n  /*******************************************************************\n  * Events\n  */\n\n  play: function () {\n    this.attachEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  attachEventListeners: function () {\n    window.addEventListener('keydown', this.listeners.keydown, false);\n    window.addEventListener('keyup', this.listeners.keyup, false);\n    window.addEventListener('blur', this.listeners.blur, false);\n  },\n\n  removeEventListeners: function () {\n    window.removeEventListener('keydown', this.listeners.keydown);\n    window.removeEventListener('keyup', this.listeners.keyup);\n    window.removeEventListener('blur', this.listeners.blur);\n  },\n\n  onKeyDown: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      this.localKeys[event.code] = true;\n      this.emit(event);\n    }\n  },\n\n  onKeyUp: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      delete this.localKeys[event.code];\n      this.emit(event);\n    }\n  },\n\n  onBlur: function () {\n    for (let code in this.localKeys) {\n      if (this.localKeys.hasOwnProperty(code)) {\n        delete this.localKeys[code];\n      }\n    }\n  },\n\n  emit: function (event) {\n    // TODO - keydown only initially?\n    // TODO - where the f is the spacebar\n\n    // Emit original event.\n    if (PROXY_FLAG in event) {\n      // TODO - Method never triggered.\n      this.el.emit(event.type, event);\n    }\n\n    // Emit convenience event, identifying key.\n    this.el.emit(event.type + ':' + event.code, new KeyboardEvent(event.type, event));\n    if (this.data.debug) console.log(event.type + ':' + event.code);\n  },\n\n  /*******************************************************************\n  * Accessors\n  */\n\n  isPressed: function (code) {\n    return code in this.getKeys();\n  },\n\n  getKeys: function () {\n    if (this.isProxied()) {\n      return this.el.sceneEl.components['proxy-controls'].getKeyboard();\n    }\n    return this.localKeys;\n  },\n\n  isProxied: function () {\n    const proxyControls = this.el.sceneEl.components['proxy-controls'];\n    return proxyControls && proxyControls.isConnected();\n  }\n\n});\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = NaiveBroadphase;\n\nvar Broadphase = require('./Broadphase');\nvar AABB = require('./AABB');\n\n/**\n * Naive broadphase implementation, used in lack of better ones.\n * @class NaiveBroadphase\n * @constructor\n * @description The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 (which is bad)\n * @extends Broadphase\n */\nfunction NaiveBroadphase(){\n    Broadphase.apply(this);\n}\nNaiveBroadphase.prototype = new Broadphase();\nNaiveBroadphase.prototype.constructor = NaiveBroadphase;\n\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nNaiveBroadphase.prototype.collisionPairs = function(world,pairs1,pairs2){\n    var bodies = world.bodies,\n        n = bodies.length,\n        i,j,bi,bj;\n\n    // Naive N^2 ftw!\n    for(i=0; i!==n; i++){\n        for(j=0; j!==i; j++){\n\n            bi = bodies[i];\n            bj = bodies[j];\n\n            if(!this.needBroadphaseCollision(bi,bj)){\n                continue;\n            }\n\n            this.intersectionTest(bi,bj,pairs1,pairs2);\n        }\n    }\n};\n\nvar tmpAABB = new AABB();\n\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\nNaiveBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    result = result || [];\n\n    for(var i = 0; i < world.bodies.length; i++){\n        var b = world.bodies[i];\n\n        if(b.aabbNeedsUpdate){\n            b.computeAABB();\n        }\n\n        // Ugly hack until Body gets aabb\n        if(b.aabb.overlaps(aabb)){\n            result.push(b);\n        }\n    }\n\n    return result;\n};","/**\n * Velocity, in m/s.\n */\nmodule.exports = AFRAME.registerComponent('velocity', {\n  schema: {type: 'vec3'},\n\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    if (this.system) {\n      this.system.addComponent(this);\n    }\n  },\n\n  remove: function () {\n    if (this.system) {\n      this.system.removeComponent(this);\n    }\n  },\n\n  tick: function (t, dt) {\n    if (!dt) return;\n    if (this.system) return;\n    this.afterStep(t, dt);\n  },\n\n  afterStep: function (t, dt) {\n    if (!dt) return;\n\n    var physics = this.el.sceneEl.systems.physics || {data: {maxInterval: 1 / 60}},\n\n        // TODO - There's definitely a bug with getComputedAttribute and el.data.\n        velocity = this.el.getAttribute('velocity') || {x: 0, y: 0, z: 0},\n        position = this.el.getAttribute('position') || {x: 0, y: 0, z: 0};\n\n    dt = Math.min(dt, physics.data.maxInterval * 1000);\n\n    this.el.setAttribute('position', {\n      x: position.x + velocity.x * dt / 1000,\n      y: position.y + velocity.y * dt / 1000,\n      z: position.z + velocity.z * dt / 1000\n    });\n  }\n});\n","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n","var Event = require('./event'),\n    LocalDriver = require('./local-driver'),\n    AmmoDriver = require('./ammo-driver'),\n    protocol = require('../utils/protocol');\n\nvar ID = protocol.ID;\n\nmodule.exports = function (self) {\n  var driver = null;\n  var bodies = {};\n  var constraints = {};\n  var stepSize;\n\n  self.addEventListener('message', function (event) {\n    var data = event.data;\n\n    switch (data.type) {\n      // Lifecycle.\n      case Event.INIT:\n        driver = data.engine === 'cannon'\n          ? new LocalDriver()\n          : new AmmoDriver();\n        driver.init(data.worldConfig);\n        stepSize = 1 / data.fps;\n        setInterval(step, 1000 / data.fps);\n        break;\n\n      // Bodies.\n      case Event.ADD_BODY:\n        var body = protocol.deserializeBody(data.body);\n        body.material = driver.getMaterial( 'defaultMaterial' );\n        bodies[body[ID]] = body;\n        driver.addBody(body);\n        break;\n      case Event.REMOVE_BODY:\n        driver.removeBody(bodies[data.bodyID]);\n        delete bodies[data.bodyID];\n        break;\n      case Event.APPLY_BODY_METHOD:\n        bodies[data.bodyID][data.methodName](\n          protocol.deserializeVec3(data.args[0]),\n          protocol.deserializeVec3(data.args[1])\n        );\n        break;\n      case Event.UPDATE_BODY_PROPERTIES:\n        protocol.deserializeBodyUpdate(data.body, bodies[data.body.id]);\n        break;\n\n      // Materials.\n      case Event.ADD_MATERIAL:\n        driver.addMaterial(data.materialConfig);\n        break;\n      case Event.ADD_CONTACT_MATERIAL:\n        driver.addContactMaterial(\n          data.materialName1,\n          data.materialName2,\n          data.contactMaterialConfig\n        );\n        break;\n\n      // Constraints.\n      case Event.ADD_CONSTRAINT:\n        var constraint = protocol.deserializeConstraint(data.constraint, bodies);\n        constraints[constraint[ID]] = constraint;\n        driver.addConstraint(constraint);\n        break;\n      case Event.REMOVE_CONSTRAINT:\n        driver.removeConstraint(constraints[data.constraintID]);\n        delete constraints[data.constraintID];\n        break;\n\n      default:\n        throw new Error('[Worker] Unexpected event type: %s', data.type);\n\n    }\n  });\n\n  function step () {\n    driver.step(stepSize);\n\n    var bodyMessages = {};\n    Object.keys(bodies).forEach(function (id) {\n      bodyMessages[id] = protocol.serializeBody(bodies[id]);\n    });\n\n    self.postMessage({\n      type: Event.STEP,\n      bodies: bodyMessages,\n      contacts: driver.getContacts().map(protocol.serializeContact)\n    });\n  }\n};\n","module.exports = ConeEquation;\n\nvar Vec3 = require('../math/Vec3');\nvar Mat3 = require('../math/Mat3');\nvar Equation = require('./Equation');\n\n/**\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\n * @class ConeEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA] Local axis in A\n * @param {Vec3} [options.axisB] Local axis in B\n * @param {Vec3} [options.angle] The \"cone angle\" to keep\n * @param {number} [options.maxForce=1e6]\n * @extends Equation\n */\nfunction ConeEquation(bodyA, bodyB, options){\n    options = options || {};\n    var maxForce = typeof(options.maxForce) !== 'undefined' ? options.maxForce : 1e6;\n\n    Equation.call(this,bodyA,bodyB,-maxForce, maxForce);\n\n    this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n    this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n\n    /**\n     * The cone angle to keep\n     * @property {number} angle\n     */\n    this.angle = typeof(options.angle) !== 'undefined' ? options.angle : 0;\n}\n\nConeEquation.prototype = new Equation();\nConeEquation.prototype.constructor = ConeEquation;\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nConeEquation.prototype.computeB = function(h){\n    var a = this.a,\n        b = this.b,\n\n        ni = this.axisA,\n        nj = this.axisB,\n\n        nixnj = tmpVec1,\n        njxni = tmpVec2,\n\n        GA = this.jacobianElementA,\n        GB = this.jacobianElementB;\n\n    // Caluclate cross products\n    ni.cross(nj, nixnj);\n    nj.cross(ni, njxni);\n\n    // The angle between two vector is:\n    // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\n\n    // g = a * b\n    // gdot = (b x a) * wi + (a x b) * wj\n    // G = [0 bxa 0 axb]\n    // W = [vi wi vj wj]\n    GA.rotational.copy(njxni);\n    GB.rotational.copy(nixnj);\n\n    var g = Math.cos(this.angle) - ni.dot(nj),\n        GW = this.computeGW(),\n        GiMf = this.computeGiMf();\n\n    var B = - g * a - GW * b - h * GiMf;\n\n    return B;\n};\n\n","module.exports.slerp = function ( a, b, t ) {\n  if ( t <= 0 ) return a;\n  if ( t >= 1 ) return b;\n\n  var x = a[0], y = a[1], z = a[2], w = a[3];\n\n  // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n  var cosHalfTheta = w * b[3] + x * b[0] + y * b[1] + z * b[2];\n\n  if ( cosHalfTheta < 0 ) {\n\n    a = a.slice();\n\n    a[3] = - b[3];\n    a[0] = - b[0];\n    a[1] = - b[1];\n    a[2] = - b[2];\n\n    cosHalfTheta = - cosHalfTheta;\n\n  } else {\n\n    return b;\n\n  }\n\n  if ( cosHalfTheta >= 1.0 ) {\n\n    a[3] = w;\n    a[0] = x;\n    a[1] = y;\n    a[2] = z;\n\n    return this;\n\n  }\n\n  var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n  if ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n    a[3] = 0.5 * ( w + a[3] );\n    a[0] = 0.5 * ( x + a[0] );\n    a[1] = 0.5 * ( y + a[1] );\n    a[2] = 0.5 * ( z + a[2] );\n\n    return this;\n\n  }\n\n  var halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n  var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta;\n  var ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n  a[3] = ( w * ratioA + a[3] * ratioB );\n  a[0] = ( x * ratioA + a[0] * ratioB );\n  a[1] = ( y * ratioA + a[1] * ratioB );\n  a[2] = ( z * ratioA + a[2] * ratioB );\n\n  return a;\n\n};\n","var Shape = require('../shapes/Shape');\nvar Broadphase = require('../collision/Broadphase');\n\nmodule.exports = SAPBroadphase;\n\n/**\n * Sweep and prune broadphase along one axis.\n *\n * @class SAPBroadphase\n * @constructor\n * @param {World} [world]\n * @extends Broadphase\n */\nfunction SAPBroadphase(world){\n    Broadphase.apply(this);\n\n    /**\n     * List of bodies currently in the broadphase.\n     * @property axisList\n     * @type {Array}\n     */\n    this.axisList = [];\n\n    /**\n     * The world to search in.\n     * @property world\n     * @type {World}\n     */\n    this.world = null;\n\n    /**\n     * Axis to sort the bodies along. Set to 0 for x axis, and 1 for y axis. For best performance, choose an axis that the bodies are spread out more on.\n     * @property axisIndex\n     * @type {Number}\n     */\n    this.axisIndex = 0;\n\n    var axisList = this.axisList;\n\n    this._addBodyHandler = function(e){\n        axisList.push(e.body);\n    };\n\n    this._removeBodyHandler = function(e){\n        var idx = axisList.indexOf(e.body);\n        if(idx !== -1){\n            axisList.splice(idx,1);\n        }\n    };\n\n    if(world){\n        this.setWorld(world);\n    }\n}\nSAPBroadphase.prototype = new Broadphase();\n\n/**\n * Change the world\n * @method setWorld\n * @param  {World} world\n */\nSAPBroadphase.prototype.setWorld = function(world){\n    // Clear the old axis array\n    this.axisList.length = 0;\n\n    // Add all bodies from the new world\n    for(var i=0; i<world.bodies.length; i++){\n        this.axisList.push(world.bodies[i]);\n    }\n\n    // Remove old handlers, if any\n    world.removeEventListener(\"addBody\", this._addBodyHandler);\n    world.removeEventListener(\"removeBody\", this._removeBodyHandler);\n\n    // Add handlers to update the list of bodies.\n    world.addEventListener(\"addBody\", this._addBodyHandler);\n    world.addEventListener(\"removeBody\", this._removeBodyHandler);\n\n    this.world = world;\n    this.dirty = true;\n};\n\n/**\n * @static\n * @method insertionSortX\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortX = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * @static\n * @method insertionSortY\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortY = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * @static\n * @method insertionSortZ\n * @param  {Array} a\n * @return {Array}\n */\nSAPBroadphase.insertionSortZ = function(a) {\n    for(var i=1,l=a.length;i<l;i++) {\n        var v = a[i];\n        for(var j=i - 1;j>=0;j--) {\n            if(a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z){\n                break;\n            }\n            a[j+1] = a[j];\n        }\n        a[j+1] = v;\n    }\n    return a;\n};\n\n/**\n * Collect all collision pairs\n * @method collisionPairs\n * @param  {World} world\n * @param  {Array} p1\n * @param  {Array} p2\n */\nSAPBroadphase.prototype.collisionPairs = function(world,p1,p2){\n    var bodies = this.axisList,\n        N = bodies.length,\n        axisIndex = this.axisIndex,\n        i, j;\n\n    if(this.dirty){\n        this.sortList();\n        this.dirty = false;\n    }\n\n    // Look through the list\n    for(i=0; i !== N; i++){\n        var bi = bodies[i];\n\n        for(j=i+1; j < N; j++){\n            var bj = bodies[j];\n\n            if(!this.needBroadphaseCollision(bi,bj)){\n                continue;\n            }\n\n            if(!SAPBroadphase.checkBounds(bi,bj,axisIndex)){\n                break;\n            }\n\n            this.intersectionTest(bi,bj,p1,p2);\n        }\n    }\n};\n\nSAPBroadphase.prototype.sortList = function(){\n    var axisList = this.axisList;\n    var axisIndex = this.axisIndex;\n    var N = axisList.length;\n\n    // Update AABBs\n    for(var i = 0; i!==N; i++){\n        var bi = axisList[i];\n        if(bi.aabbNeedsUpdate){\n            bi.computeAABB();\n        }\n    }\n\n    // Sort the list\n    if(axisIndex === 0){\n        SAPBroadphase.insertionSortX(axisList);\n    } else if(axisIndex === 1){\n        SAPBroadphase.insertionSortY(axisList);\n    } else if(axisIndex === 2){\n        SAPBroadphase.insertionSortZ(axisList);\n    }\n};\n\n/**\n * Check if the bounds of two bodies overlap, along the given SAP axis.\n * @static\n * @method checkBounds\n * @param  {Body} bi\n * @param  {Body} bj\n * @param  {Number} axisIndex\n * @return {Boolean}\n */\nSAPBroadphase.checkBounds = function(bi, bj, axisIndex){\n    var biPos;\n    var bjPos;\n\n    if(axisIndex === 0){\n        biPos = bi.position.x;\n        bjPos = bj.position.x;\n    } else if(axisIndex === 1){\n        biPos = bi.position.y;\n        bjPos = bj.position.y;\n    } else if(axisIndex === 2){\n        biPos = bi.position.z;\n        bjPos = bj.position.z;\n    }\n\n    var ri = bi.boundingRadius,\n        rj = bj.boundingRadius,\n        boundA1 = biPos - ri,\n        boundA2 = biPos + ri,\n        boundB1 = bjPos - rj,\n        boundB2 = bjPos + rj;\n\n    return boundB1 < boundA2;\n};\n\n/**\n * Computes the variance of the body positions and estimates the best\n * axis to use. Will automatically set property .axisIndex.\n * @method autoDetectAxis\n */\nSAPBroadphase.prototype.autoDetectAxis = function(){\n    var sumX=0,\n        sumX2=0,\n        sumY=0,\n        sumY2=0,\n        sumZ=0,\n        sumZ2=0,\n        bodies = this.axisList,\n        N = bodies.length,\n        invN=1/N;\n\n    for(var i=0; i!==N; i++){\n        var b = bodies[i];\n\n        var centerX = b.position.x;\n        sumX += centerX;\n        sumX2 += centerX*centerX;\n\n        var centerY = b.position.y;\n        sumY += centerY;\n        sumY2 += centerY*centerY;\n\n        var centerZ = b.position.z;\n        sumZ += centerZ;\n        sumZ2 += centerZ*centerZ;\n    }\n\n    var varianceX = sumX2 - sumX*sumX*invN,\n        varianceY = sumY2 - sumY*sumY*invN,\n        varianceZ = sumZ2 - sumZ*sumZ*invN;\n\n    if(varianceX > varianceY){\n        if(varianceX > varianceZ){\n            this.axisIndex = 0;\n        } else{\n            this.axisIndex = 2;\n        }\n    } else if(varianceY > varianceZ){\n        this.axisIndex = 1;\n    } else{\n        this.axisIndex = 2;\n    }\n};\n\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\nSAPBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    result = result || [];\n\n    if(this.dirty){\n        this.sortList();\n        this.dirty = false;\n    }\n\n    var axisIndex = this.axisIndex, axis = 'x';\n    if(axisIndex === 1){ axis = 'y'; }\n    if(axisIndex === 2){ axis = 'z'; }\n\n    var axisList = this.axisList;\n    var lower = aabb.lowerBound[axis];\n    var upper = aabb.upperBound[axis];\n    for(var i = 0; i < axisList.length; i++){\n        var b = axisList[i];\n\n        if(b.aabbNeedsUpdate){\n            b.computeAABB();\n        }\n\n        if(b.aabb.overlaps(aabb)){\n            result.push(b);\n        }\n    }\n\n    return result;\n};","module.exports = Quaternion;\n\nvar Vec3 = require('./Vec3');\n\n/**\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\n * @class Quaternion\n * @constructor\n * @param {Number} x Multiplier of the imaginary basis vector i.\n * @param {Number} y Multiplier of the imaginary basis vector j.\n * @param {Number} z Multiplier of the imaginary basis vector k.\n * @param {Number} w Multiplier of the real part.\n * @see http://en.wikipedia.org/wiki/Quaternion\n */\nfunction Quaternion(x,y,z,w){\n    /**\n     * @property {Number} x\n     */\n    this.x = x!==undefined ? x : 0;\n\n    /**\n     * @property {Number} y\n     */\n    this.y = y!==undefined ? y : 0;\n\n    /**\n     * @property {Number} z\n     */\n    this.z = z!==undefined ? z : 0;\n\n    /**\n     * The multiplier of the real quaternion basis vector.\n     * @property {Number} w\n     */\n    this.w = w!==undefined ? w : 1;\n}\n\n/**\n * Set the value of the quaternion.\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {Number} w\n */\nQuaternion.prototype.set = function(x,y,z,w){\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n};\n\n/**\n * Convert to a readable format\n * @method toString\n * @return string\n */\nQuaternion.prototype.toString = function(){\n    return this.x+\",\"+this.y+\",\"+this.z+\",\"+this.w;\n};\n\n/**\n * Convert to an Array\n * @method toArray\n * @return Array\n */\nQuaternion.prototype.toArray = function(){\n    return [this.x, this.y, this.z, this.w];\n};\n\n/**\n * Set the quaternion components given an axis and an angle.\n * @method setFromAxisAngle\n * @param {Vec3} axis\n * @param {Number} angle in radians\n */\nQuaternion.prototype.setFromAxisAngle = function(axis,angle){\n    var s = Math.sin(angle*0.5);\n    this.x = axis.x * s;\n    this.y = axis.y * s;\n    this.z = axis.z * s;\n    this.w = Math.cos(angle*0.5);\n    return this;\n};\n\n/**\n * Converts the quaternion to axis/angle representation.\n * @method toAxisAngle\n * @param {Vec3} [targetAxis] A vector object to reuse for storing the axis.\n * @return {Array} An array, first elemnt is the axis and the second is the angle in radians.\n */\nQuaternion.prototype.toAxisAngle = function(targetAxis){\n    targetAxis = targetAxis || new Vec3();\n    this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\n    var angle = 2 * Math.acos(this.w);\n    var s = Math.sqrt(1-this.w*this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\n    if (s < 0.001) { // test to avoid divide by zero, s is always positive due to sqrt\n        // if s close to zero then direction of axis not important\n        targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\n        targetAxis.y = this.y;\n        targetAxis.z = this.z;\n    } else {\n        targetAxis.x = this.x / s; // normalise axis\n        targetAxis.y = this.y / s;\n        targetAxis.z = this.z / s;\n    }\n    return [targetAxis,angle];\n};\n\nvar sfv_t1 = new Vec3(),\n    sfv_t2 = new Vec3();\n\n/**\n * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\n * @method setFromVectors\n * @param {Vec3} u\n * @param {Vec3} v\n */\nQuaternion.prototype.setFromVectors = function(u,v){\n    if(u.isAntiparallelTo(v)){\n        var t1 = sfv_t1;\n        var t2 = sfv_t2;\n\n        u.tangents(t1,t2);\n        this.setFromAxisAngle(t1,Math.PI);\n    } else {\n        var a = u.cross(v);\n        this.x = a.x;\n        this.y = a.y;\n        this.z = a.z;\n        this.w = Math.sqrt(Math.pow(u.norm(),2) * Math.pow(v.norm(),2)) + u.dot(v);\n        this.normalize();\n    }\n    return this;\n};\n\n/**\n * Quaternion multiplication\n * @method mult\n * @param {Quaternion} q\n * @param {Quaternion} target Optional.\n * @return {Quaternion}\n */\nvar Quaternion_mult_va = new Vec3();\nvar Quaternion_mult_vb = new Vec3();\nvar Quaternion_mult_vaxvb = new Vec3();\nQuaternion.prototype.mult = function(q,target){\n    target = target || new Quaternion();\n\n    var ax = this.x, ay = this.y, az = this.z, aw = this.w,\n        bx = q.x, by = q.y, bz = q.z, bw = q.w;\n\n    target.x = ax * bw + aw * bx + ay * bz - az * by;\n    target.y = ay * bw + aw * by + az * bx - ax * bz;\n    target.z = az * bw + aw * bz + ax * by - ay * bx;\n    target.w = aw * bw - ax * bx - ay * by - az * bz;\n\n    return target;\n};\n\n/**\n * Get the inverse quaternion rotation.\n * @method inverse\n * @param {Quaternion} target\n * @return {Quaternion}\n */\nQuaternion.prototype.inverse = function(target){\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n    target = target || new Quaternion();\n\n    this.conjugate(target);\n    var inorm2 = 1/(x*x + y*y + z*z + w*w);\n    target.x *= inorm2;\n    target.y *= inorm2;\n    target.z *= inorm2;\n    target.w *= inorm2;\n\n    return target;\n};\n\n/**\n * Get the quaternion conjugate\n * @method conjugate\n * @param {Quaternion} target\n * @return {Quaternion}\n */\nQuaternion.prototype.conjugate = function(target){\n    target = target || new Quaternion();\n\n    target.x = -this.x;\n    target.y = -this.y;\n    target.z = -this.z;\n    target.w = this.w;\n\n    return target;\n};\n\n/**\n * Normalize the quaternion. Note that this changes the values of the quaternion.\n * @method normalize\n */\nQuaternion.prototype.normalize = function(){\n    var l = Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);\n    if ( l === 0 ) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n    } else {\n        l = 1 / l;\n        this.x *= l;\n        this.y *= l;\n        this.z *= l;\n        this.w *= l;\n    }\n    return this;\n};\n\n/**\n * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\n * @method normalizeFast\n * @see http://jsperf.com/fast-quaternion-normalization\n * @author unphased, https://github.com/unphased\n */\nQuaternion.prototype.normalizeFast = function () {\n    var f = (3.0-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2.0;\n    if ( f === 0 ) {\n        this.x = 0;\n        this.y = 0;\n        this.z = 0;\n        this.w = 0;\n    } else {\n        this.x *= f;\n        this.y *= f;\n        this.z *= f;\n        this.w *= f;\n    }\n    return this;\n};\n\n/**\n * Multiply the quaternion by a vector\n * @method vmult\n * @param {Vec3} v\n * @param {Vec3} target Optional\n * @return {Vec3}\n */\nQuaternion.prototype.vmult = function(v,target){\n    target = target || new Vec3();\n\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n\n    var qx = this.x,\n        qy = this.y,\n        qz = this.z,\n        qw = this.w;\n\n    // q*v\n    var ix =  qw * x + qy * z - qz * y,\n    iy =  qw * y + qz * x - qx * z,\n    iz =  qw * z + qx * y - qy * x,\n    iw = -qx * x - qy * y - qz * z;\n\n    target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\n    return target;\n};\n\n/**\n * Copies value of source to this quaternion.\n * @method copy\n * @param {Quaternion} source\n * @return {Quaternion} this\n */\nQuaternion.prototype.copy = function(source){\n    this.x = source.x;\n    this.y = source.y;\n    this.z = source.z;\n    this.w = source.w;\n    return this;\n};\n\n/**\n * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: http://www.euclideanspace.com/maths/standards/index.htm\n * @method toEuler\n * @param {Vec3} target\n * @param string order Three-character string e.g. \"YZX\", which also is default.\n */\nQuaternion.prototype.toEuler = function(target,order){\n    order = order || \"YZX\";\n\n    var heading, attitude, bank;\n    var x = this.x, y = this.y, z = this.z, w = this.w;\n\n    switch(order){\n    case \"YZX\":\n        var test = x*y + z*w;\n        if (test > 0.499) { // singularity at north pole\n            heading = 2 * Math.atan2(x,w);\n            attitude = Math.PI/2;\n            bank = 0;\n        }\n        if (test < -0.499) { // singularity at south pole\n            heading = -2 * Math.atan2(x,w);\n            attitude = - Math.PI/2;\n            bank = 0;\n        }\n        if(isNaN(heading)){\n            var sqx = x*x;\n            var sqy = y*y;\n            var sqz = z*z;\n            heading = Math.atan2(2*y*w - 2*x*z , 1 - 2*sqy - 2*sqz); // Heading\n            attitude = Math.asin(2*test); // attitude\n            bank = Math.atan2(2*x*w - 2*y*z , 1 - 2*sqx - 2*sqz); // bank\n        }\n        break;\n    default:\n        throw new Error(\"Euler order \"+order+\" not supported yet.\");\n    }\n\n    target.y = heading;\n    target.z = attitude;\n    target.x = bank;\n};\n\n/**\n * See http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n * @method setFromEuler\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {String} order The order to apply angles: 'XYZ' or 'YXZ' or any other combination\n */\nQuaternion.prototype.setFromEuler = function ( x, y, z, order ) {\n    order = order || \"XYZ\";\n\n    var c1 = Math.cos( x / 2 );\n    var c2 = Math.cos( y / 2 );\n    var c3 = Math.cos( z / 2 );\n    var s1 = Math.sin( x / 2 );\n    var s2 = Math.sin( y / 2 );\n    var s3 = Math.sin( z / 2 );\n\n    if ( order === 'XYZ' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'YXZ' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( order === 'ZXY' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'ZYX' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    } else if ( order === 'YZX' ) {\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 + s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    } else if ( order === 'XZY' ) {\n\n        this.x = s1 * c2 * c3 - c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    }\n\n    return this;\n};\n\n/**\n * @method clone\n * @return {Quaternion}\n */\nQuaternion.prototype.clone = function(){\n    return new Quaternion(this.x, this.y, this.z, this.w);\n};\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @method slerp\n * @param {Quaternion} toQuat second operand\n * @param {Number} t interpolation amount between the self quaternion and toQuat\n * @param {Quaternion} [target] A quaternion to store the result in. If not provided, a new one will be created.\n * @returns {Quaternion} The \"target\" object\n */\nQuaternion.prototype.slerp = function (toQuat, t, target) {\n    target = target || new Quaternion();\n\n    var ax = this.x,\n        ay = this.y,\n        az = this.z,\n        aw = this.w,\n        bx = toQuat.x,\n        by = toQuat.y,\n        bz = toQuat.z,\n        bw = toQuat.w;\n\n    var omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n\n    // calculate final values\n    target.x = scale0 * ax + scale1 * bx;\n    target.y = scale0 * ay + scale1 * by;\n    target.z = scale0 * az + scale1 * bz;\n    target.w = scale0 * aw + scale1 * bw;\n\n    return target;\n};\n\n/**\n * Rotate an absolute orientation quaternion given an angular velocity and a time step.\n * @param  {Vec3} angularVelocity\n * @param  {number} dt\n * @param  {Vec3} angularFactor\n * @param  {Quaternion} target\n * @return {Quaternion} The \"target\" object\n */\nQuaternion.prototype.integrate = function(angularVelocity, dt, angularFactor, target){\n    target = target || new Quaternion();\n\n    var ax = angularVelocity.x * angularFactor.x,\n        ay = angularVelocity.y * angularFactor.y,\n        az = angularVelocity.z * angularFactor.z,\n        bx = this.x,\n        by = this.y,\n        bz = this.z,\n        bw = this.w;\n\n    var half_dt = dt * 0.5;\n\n    target.x += half_dt * (ax * bw + ay * bz - az * by);\n    target.y += half_dt * (ay * bw + az * bx - ax * bz);\n    target.z += half_dt * (az * bw + ax * by - ay * bx);\n    target.w += half_dt * (- ax * bx - ay * by - az * bz);\n\n    return target;\n};","/**\n * Flat-shaded ocean primitive.\n *\n * Based on a Codrops tutorial:\n * http://tympanus.net/codrops/2016/04/26/the-aviator-animating-basic-3d-scene-threejs/\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-ocean', {\n  defaultComponents: {\n    ocean: {},\n    rotation: {x: -90, y: 0, z: 0}\n  },\n  mappings: {\n    width: 'ocean.width',\n    depth: 'ocean.depth',\n    density: 'ocean.density',\n    amplitude: 'ocean.amplitude',\n    amplitudeVariance: 'ocean.amplitudeVariance',\n    speed: 'ocean.speed',\n    speedVariance: 'ocean.speedVariance',\n    color: 'ocean.color',\n    opacity: 'ocean.opacity'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('ocean', {\n  schema: {\n    // Dimensions of the ocean area.\n    width: {default: 10, min: 0},\n    depth: {default: 10, min: 0},\n\n    // Density of waves.\n    density: {default: 10},\n\n    // Wave amplitude and variance.\n    amplitude: {default: 0.1},\n    amplitudeVariance: {default: 0.3},\n\n    // Wave speed and variance.\n    speed: {default: 1},\n    speedVariance: {default: 2},\n\n    // Material.\n    color: {default: '#7AD2F7', type: 'color'},\n    opacity: {default: 0.8}\n  },\n\n  /**\n   * Use play() instead of init(), because component mappings – unavailable as dependencies – are\n   * not guaranteed to have parsed when this component is initialized.\n   */\n  play: function () {\n    const el = this.el,\n        data = this.data;\n    let material = el.components.material;\n\n    const geometry = new THREE.PlaneGeometry(data.width, data.depth, data.density, data.density);\n    geometry.mergeVertices();\n    this.waves = [];\n    for (let v, i = 0, l = geometry.vertices.length; i < l; i++) {\n      v = geometry.vertices[i];\n      this.waves.push({\n        z: v.z,\n        ang: Math.random() * Math.PI * 2,\n        amp: data.amplitude + Math.random() * data.amplitudeVariance,\n        speed: (data.speed + Math.random() * data.speedVariance) / 1000 // radians / frame\n      });\n    }\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial({\n        color: data.color,\n        transparent: data.opacity < 1,\n        opacity: data.opacity,\n        shading: THREE.FlatShading,\n      });\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    el.setObject3D('mesh', this.mesh);\n  },\n\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  },\n\n  tick: function (t, dt) {\n    if (!dt) return;\n\n    const verts = this.mesh.geometry.vertices;\n    for (let v, vprops, i = 0; (v = verts[i]); i++){\n      vprops = this.waves[i];\n      v.z = vprops.z + Math.sin(vprops.ang) * vprops.amp;\n      vprops.ang += vprops.speed * dt;\n    }\n    this.mesh.geometry.verticesNeedUpdate = true;\n  }\n});\n","var Body = require('./body');\n\n/**\n * Static body.\n *\n * Solid body with a fixed position. Unaffected by gravity and collisions, but\n * other objects may collide with it.\n */\nvar StaticBody = AFRAME.utils.extend({}, Body.definition);\n\nStaticBody.schema = AFRAME.utils.extend({}, Body.definition.schema, {\n  type: {default: 'static', oneOf: ['static', 'dynamic']},\n  mass: {default: 0}\n});\n\nmodule.exports = AFRAME.registerComponent('static-body', StaticBody);\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","require('./animation-mixer');\nrequire('./fbx-model');\nrequire('./gltf-model-legacy');\nrequire('./json-model');\nrequire('./object-model');\nrequire('./ply-model');\n","var Body = require('../objects/Body');\nvar Vec3 = require('../math/Vec3');\nvar Quaternion = require('../math/Quaternion');\nvar Shape = require('../shapes/Shape');\nvar Plane = require('../shapes/Plane');\n\nmodule.exports = Broadphase;\n\n/**\n * Base class for broadphase implementations\n * @class Broadphase\n * @constructor\n * @author schteppe\n */\nfunction Broadphase(){\n    /**\n    * The world to search for collisions in.\n    * @property world\n    * @type {World}\n    */\n    this.world = null;\n\n    /**\n     * If set to true, the broadphase uses bounding boxes for intersection test, else it uses bounding spheres.\n     * @property useBoundingBoxes\n     * @type {Boolean}\n     */\n    this.useBoundingBoxes = false;\n\n    /**\n     * Set to true if the objects in the world moved.\n     * @property {Boolean} dirty\n     */\n    this.dirty = true;\n}\n\n/**\n * Get the collision pairs from the world\n * @method collisionPairs\n * @param {World} world The world to search in\n * @param {Array} p1 Empty array to be filled with body objects\n * @param {Array} p2 Empty array to be filled with body objects\n */\nBroadphase.prototype.collisionPairs = function(world,p1,p2){\n    throw new Error(\"collisionPairs not implemented for this BroadPhase class!\");\n};\n\n/**\n * Check if a body pair needs to be intersection tested at all.\n * @method needBroadphaseCollision\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {bool}\n */\nBroadphase.prototype.needBroadphaseCollision = function(bodyA,bodyB){\n\n    // Check collision filter masks\n    if( (bodyA.collisionFilterGroup & bodyB.collisionFilterMask)===0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask)===0){\n        return false;\n    }\n\n    // Check types\n    if(((bodyA.type & Body.STATIC)!==0 || bodyA.sleepState === Body.SLEEPING) &&\n       ((bodyB.type & Body.STATIC)!==0 || bodyB.sleepState === Body.SLEEPING)) {\n        // Both bodies are static or sleeping. Skip.\n        return false;\n    }\n\n    return true;\n};\n\n/**\n * Check if the bounding volumes of two bodies intersect.\n * @method intersectionTest\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {array} pairs1\n * @param {array} pairs2\n  */\nBroadphase.prototype.intersectionTest = function(bodyA, bodyB, pairs1, pairs2){\n    if(this.useBoundingBoxes){\n        this.doBoundingBoxBroadphase(bodyA,bodyB,pairs1,pairs2);\n    } else {\n        this.doBoundingSphereBroadphase(bodyA,bodyB,pairs1,pairs2);\n    }\n};\n\n/**\n * Check if the bounding spheres of two bodies are intersecting.\n * @method doBoundingSphereBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1 bodyA is appended to this array if intersection\n * @param {Array} pairs2 bodyB is appended to this array if intersection\n */\nvar Broadphase_collisionPairs_r = new Vec3(), // Temp objects\n    Broadphase_collisionPairs_normal =  new Vec3(),\n    Broadphase_collisionPairs_quat =  new Quaternion(),\n    Broadphase_collisionPairs_relpos  =  new Vec3();\nBroadphase.prototype.doBoundingSphereBroadphase = function(bodyA,bodyB,pairs1,pairs2){\n    var r = Broadphase_collisionPairs_r;\n    bodyB.position.vsub(bodyA.position,r);\n    var boundingRadiusSum2 = Math.pow(bodyA.boundingRadius + bodyB.boundingRadius, 2);\n    var norm2 = r.norm2();\n    if(norm2 < boundingRadiusSum2){\n        pairs1.push(bodyA);\n        pairs2.push(bodyB);\n    }\n};\n\n/**\n * Check if the bounding boxes of two bodies are intersecting.\n * @method doBoundingBoxBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nBroadphase.prototype.doBoundingBoxBroadphase = function(bodyA,bodyB,pairs1,pairs2){\n    if(bodyA.aabbNeedsUpdate){\n        bodyA.computeAABB();\n    }\n    if(bodyB.aabbNeedsUpdate){\n        bodyB.computeAABB();\n    }\n\n    // Check AABB / AABB\n    if(bodyA.aabb.overlaps(bodyB.aabb)){\n        pairs1.push(bodyA);\n        pairs2.push(bodyB);\n    }\n};\n\n/**\n * Removes duplicate pairs from the pair arrays.\n * @method makePairsUnique\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\nvar Broadphase_makePairsUnique_temp = { keys:[] },\n    Broadphase_makePairsUnique_p1 = [],\n    Broadphase_makePairsUnique_p2 = [];\nBroadphase.prototype.makePairsUnique = function(pairs1,pairs2){\n    var t = Broadphase_makePairsUnique_temp,\n        p1 = Broadphase_makePairsUnique_p1,\n        p2 = Broadphase_makePairsUnique_p2,\n        N = pairs1.length;\n\n    for(var i=0; i!==N; i++){\n        p1[i] = pairs1[i];\n        p2[i] = pairs2[i];\n    }\n\n    pairs1.length = 0;\n    pairs2.length = 0;\n\n    for(var i=0; i!==N; i++){\n        var id1 = p1[i].id,\n            id2 = p2[i].id;\n        var key = id1 < id2 ? id1+\",\"+id2 :  id2+\",\"+id1;\n        t[key] = i;\n        t.keys.push(key);\n    }\n\n    for(var i=0; i!==t.keys.length; i++){\n        var key = t.keys.pop(),\n            pairIndex = t[key];\n        pairs1.push(p1[pairIndex]);\n        pairs2.push(p2[pairIndex]);\n        delete t[key];\n    }\n};\n\n/**\n * To be implemented by subcasses\n * @method setWorld\n * @param {World} world\n */\nBroadphase.prototype.setWorld = function(world){\n};\n\n/**\n * Check if the bounding spheres of two bodies overlap.\n * @method boundingSphereCheck\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {boolean}\n */\nvar bsc_dist = new Vec3();\nBroadphase.boundingSphereCheck = function(bodyA,bodyB){\n    var dist = bsc_dist;\n    bodyA.position.vsub(bodyB.position,dist);\n    return Math.pow(bodyA.shape.boundingSphereRadius + bodyB.shape.boundingSphereRadius,2) > dist.norm2();\n};\n\n/**\n * Returns all the bodies within the AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param  {array} result An array to store resulting bodies in.\n * @return {array}\n */\nBroadphase.prototype.aabbQuery = function(world, aabb, result){\n    console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\n    return [];\n};","require('./nav-mesh');\nrequire('./nav-agent');\nrequire('./system');\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = {\n  INIT: 'init',\n  STEP: 'step',\n\n  // Bodies.\n  ADD_BODY: 'add-body',\n  REMOVE_BODY: 'remove-body',\n  APPLY_BODY_METHOD: 'apply-body-method',\n  UPDATE_BODY_PROPERTIES: 'update-body-properties',\n\n  // Materials.\n  ADD_MATERIAL: 'add-material',\n  ADD_CONTACT_MATERIAL: 'add-contact-material',\n\n  // Constraints.\n  ADD_CONSTRAINT: 'add-constraint',\n  REMOVE_CONSTRAINT: 'remove-constraint'\n};\n","function GamepadButtonEvent (type, index, details) {\n  this.type = type;\n  this.index = index;\n  this.pressed = details.pressed;\n  this.value = details.value;\n}\n\nmodule.exports = GamepadButtonEvent;\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","var CANNON = require('cannon'),\n    CONSTANTS = require('./constants'),\n    C_GRAV = CONSTANTS.GRAVITY,\n    C_MAT = CONSTANTS.CONTACT_MATERIAL;\n\nvar LocalDriver = require('./drivers/local-driver'),\n    WorkerDriver = require('./drivers/worker-driver'),\n    NetworkDriver = require('./drivers/network-driver'),\n    AmmoDriver = require('./drivers/ammo-driver');\n\n/**\n * Physics system.\n */\nmodule.exports = AFRAME.registerSystem('physics', {\n  schema: {\n    // CANNON.js driver type\n    driver:                         { default: 'local', oneOf: ['local', 'worker', 'network', 'ammo'] },\n    networkUrl:                     { default: '', if: {driver: 'network'} },\n    workerFps:                      { default: 60, if: {driver: 'worker'} },\n    workerInterpolate:              { default: true, if: {driver: 'worker'} },\n    workerInterpBufferSize:         { default: 2, if: {driver: 'worker'} },\n    workerEngine:                   { default: 'cannon', if: {driver: 'worker'}, oneOf: ['cannon'] },\n    workerDebug:                    { default: false, if: {driver: 'worker'} },\n\n    gravity:                        { default: C_GRAV },\n    iterations:                     { default: CONSTANTS.ITERATIONS },\n    friction:                       { default: C_MAT.friction },\n    restitution:                    { default: C_MAT.restitution },\n    contactEquationStiffness:       { default: C_MAT.contactEquationStiffness },\n    contactEquationRelaxation:      { default: C_MAT.contactEquationRelaxation },\n    frictionEquationStiffness:      { default: C_MAT.frictionEquationStiffness },\n    frictionEquationRegularization: { default: C_MAT.frictionEquationRegularization },\n\n    // Never step more than four frames at once. Effectively pauses the scene\n    // when out of focus, and prevents weird \"jumps\" when focus returns.\n    maxInterval:                    { default: 4 / 60 },\n\n    // If true, show wireframes around physics bodies.\n    debug:                          { default: false },\n  },\n\n  /**\n   * Initializes the physics system.\n   */\n  init: function () {\n    var data = this.data;\n\n    // If true, show wireframes around physics bodies.\n    this.debug = data.debug;\n\n    this.callbacks = {beforeStep: [], step: [], afterStep: []};\n\n    this.listeners = {};\n\n    this.driver = null;\n    switch (data.driver) {\n      case 'local':\n        this.driver = new LocalDriver();\n        break;\n\n      case 'network':\n        this.driver = new NetworkDriver(data.networkUrl);\n        break;\n\n      case 'worker':\n        this.driver = new WorkerDriver({\n          fps: data.workerFps,\n          engine: data.workerEngine,\n          interpolate: data.workerInterpolate,\n          interpolationBufferSize: data.workerInterpBufferSize,\n          debug: data.workerDebug\n        });\n        break;\n\n      default:\n        throw new Error('[physics] Driver not recognized: \"%s\".', data.driver);\n    }\n\n    this.driver.init({\n      quatNormalizeSkip: 0,\n      quatNormalizeFast: false,\n      solverIterations: data.iterations,\n      gravity: data.gravity\n    });\n\n    this.driver.addMaterial({name: 'defaultMaterial'});\n    this.driver.addMaterial({name: 'staticMaterial'});\n    this.driver.addContactMaterial('defaultMaterial', 'defaultMaterial', {\n      friction: data.friction,\n      restitution: data.restitution,\n      contactEquationStiffness: data.contactEquationStiffness,\n      contactEquationRelaxation: data.contactEquationRelaxation,\n      frictionEquationStiffness: data.frictionEquationStiffness,\n      frictionEquationRegularization: data.frictionEquationRegularization\n    });\n    this.driver.addContactMaterial('staticMaterial', 'defaultMaterial', {\n      friction: 1.0,\n      restitution: 0.0,\n      contactEquationStiffness: data.contactEquationStiffness,\n      contactEquationRelaxation: data.contactEquationRelaxation,\n      frictionEquationStiffness: data.frictionEquationStiffness,\n      frictionEquationRegularization: data.frictionEquationRegularization\n    });\n  },\n\n  /**\n   * Updates the physics world on each tick of the A-Frame scene. It would be\n   * entirely possible to separate the two – updating physics more or less\n   * frequently than the scene – if greater precision or performance were\n   * necessary.\n   * @param  {number} t\n   * @param  {number} dt\n   */\n  tick: function (t, dt) {\n    if (!dt) return;\n\n    var i;\n    var callbacks = this.callbacks;\n\n    for (i = 0; i < this.callbacks.beforeStep.length; i++) {\n      this.callbacks.beforeStep[i].beforeStep(t, dt);\n    }\n\n    this.driver.step(Math.min(dt / 1000, this.data.maxInterval));\n\n    for (i = 0; i < callbacks.step.length; i++) {\n      callbacks.step[i].step(t, dt);\n    }\n\n    for (i = 0; i < callbacks.afterStep.length; i++) {\n      callbacks.afterStep[i].afterStep(t, dt);\n    }\n  },\n\n  /**\n   * Adds a body to the scene, and binds proxied methods to the driver.\n   * @param {CANNON.Body} body\n   */\n  addBody: function (body) {\n    var driver = this.driver;\n\n    body.__applyImpulse = body.applyImpulse;\n    body.applyImpulse = function () {\n      driver.applyBodyMethod(body, 'applyImpulse', arguments);\n    };\n\n    body.__applyForce = body.applyForce;\n    body.applyForce = function () {\n      driver.applyBodyMethod(body, 'applyForce', arguments);\n    };\n\n    body.updateProperties = function () {\n      driver.updateBodyProperties(body);\n    };\n\n    this.listeners[body.id] = function (e) { body.el.emit('collide', e); };\n    body.addEventListener('collide', this.listeners[body.id]);\n\n    this.driver.addBody(body);\n  },\n\n  /**\n   * Removes a body and its proxied methods.\n   * @param {CANNON.Body} body\n   */\n  removeBody: function (body) {\n    this.driver.removeBody(body);\n\n    body.removeEventListener('collide', this.listeners[body.id]);\n    delete this.listeners[body.id];\n\n    body.applyImpulse = body.__applyImpulse;\n    delete body.__applyImpulse;\n\n    body.applyForce = body.__applyForce;\n    delete body.__applyForce;\n\n    delete body.updateProperties;\n  },\n\n  /** @param {CANNON.Constraint} constraint */\n  addConstraint: function (constraint) {\n    if (!constraint.type) {\n      if (constraint instanceof CANNON.LockConstraint) {\n        constraint.type = 'LockConstraint';\n      } else if (constraint instanceof CANNON.DistanceConstraint) {\n        constraint.type = 'DistanceConstraint';\n      } else if (constraint instanceof CANNON.HingeConstraint) {\n        constraint.type = 'HingeConstraint';\n      } else if (constraint instanceof CANNON.ConeTwistConstraint) {\n        constraint.type = 'ConeTwistConstraint';\n      } else if (constraint instanceof CANNON.PointToPointConstraint) {\n        constraint.type = 'PointToPointConstraint';\n      }\n    }\n    this.driver.addConstraint(constraint);\n  },\n\n  /** @param {CANNON.Constraint} constraint */\n  removeConstraint: function (constraint) {\n    this.driver.removeConstraint(constraint);\n  },\n\n  /**\n   * Adds a component instance to the system and schedules its update methods to be called\n   * the given phase.\n   * @param {Component} component\n   * @param {string} phase\n   */\n  addComponent: function (component) {\n    var callbacks = this.callbacks;\n    if (component.beforeStep) callbacks.beforeStep.push(component);\n    if (component.step)       callbacks.step.push(component);\n    if (component.afterStep)  callbacks.afterStep.push(component);\n  },\n\n  /**\n   * Removes a component instance from the system.\n   * @param {Component} component\n   * @param {string} phase\n   */\n  removeComponent: function (component) {\n    var callbacks = this.callbacks;\n    if (component.beforeStep) {\n      callbacks.beforeStep.splice(callbacks.beforeStep.indexOf(component), 1);\n    }\n    if (component.step) {\n      callbacks.step.splice(callbacks.step.indexOf(component), 1);\n    }\n    if (component.afterStep) {\n      callbacks.afterStep.splice(callbacks.afterStep.indexOf(component), 1);\n    }\n  },\n\n  /** @return {Array<object>} */\n  getContacts: function () {\n    return this.driver.getContacts();\n  },\n\n  getMaterial: function (name) {\n    return this.driver.getMaterial(name);\n  }\n});\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var Vec3 = require('../math/Vec3');\nvar Utils = require('../utils/Utils');\n\nmodule.exports = AABB;\n\n/**\n * Axis aligned bounding box class.\n * @class AABB\n * @constructor\n * @param {Object} [options]\n * @param {Vec3}   [options.upperBound]\n * @param {Vec3}   [options.lowerBound]\n */\nfunction AABB(options){\n    options = options || {};\n\n    /**\n     * The lower bound of the bounding box.\n     * @property lowerBound\n     * @type {Vec3}\n     */\n    this.lowerBound = new Vec3();\n    if(options.lowerBound){\n        this.lowerBound.copy(options.lowerBound);\n    }\n\n    /**\n     * The upper bound of the bounding box.\n     * @property upperBound\n     * @type {Vec3}\n     */\n    this.upperBound = new Vec3();\n    if(options.upperBound){\n        this.upperBound.copy(options.upperBound);\n    }\n}\n\nvar tmp = new Vec3();\n\n/**\n * Set the AABB bounds from a set of points.\n * @method setFromPoints\n * @param {Array} points An array of Vec3's.\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {number} skinSize\n * @return {AABB} The self object\n */\nAABB.prototype.setFromPoints = function(points, position, quaternion, skinSize){\n    var l = this.lowerBound,\n        u = this.upperBound,\n        q = quaternion;\n\n    // Set to the first point\n    l.copy(points[0]);\n    if(q){\n        q.vmult(l, l);\n    }\n    u.copy(l);\n\n    for(var i = 1; i<points.length; i++){\n        var p = points[i];\n\n        if(q){\n            q.vmult(p, tmp);\n            p = tmp;\n        }\n\n        if(p.x > u.x){ u.x = p.x; }\n        if(p.x < l.x){ l.x = p.x; }\n        if(p.y > u.y){ u.y = p.y; }\n        if(p.y < l.y){ l.y = p.y; }\n        if(p.z > u.z){ u.z = p.z; }\n        if(p.z < l.z){ l.z = p.z; }\n    }\n\n    // Add offset\n    if (position) {\n        position.vadd(l, l);\n        position.vadd(u, u);\n    }\n\n    if(skinSize){\n        l.x -= skinSize;\n        l.y -= skinSize;\n        l.z -= skinSize;\n        u.x += skinSize;\n        u.y += skinSize;\n        u.z += skinSize;\n    }\n\n    return this;\n};\n\n/**\n * Copy bounds from an AABB to this AABB\n * @method copy\n * @param  {AABB} aabb Source to copy from\n * @return {AABB} The this object, for chainability\n */\nAABB.prototype.copy = function(aabb){\n    this.lowerBound.copy(aabb.lowerBound);\n    this.upperBound.copy(aabb.upperBound);\n    return this;\n};\n\n/**\n * Clone an AABB\n * @method clone\n */\nAABB.prototype.clone = function(){\n    return new AABB().copy(this);\n};\n\n/**\n * Extend this AABB so that it covers the given AABB too.\n * @method extend\n * @param  {AABB} aabb\n */\nAABB.prototype.extend = function(aabb){\n    this.lowerBound.x = Math.min(this.lowerBound.x, aabb.lowerBound.x);\n    this.upperBound.x = Math.max(this.upperBound.x, aabb.upperBound.x);\n    this.lowerBound.y = Math.min(this.lowerBound.y, aabb.lowerBound.y);\n    this.upperBound.y = Math.max(this.upperBound.y, aabb.upperBound.y);\n    this.lowerBound.z = Math.min(this.lowerBound.z, aabb.lowerBound.z);\n    this.upperBound.z = Math.max(this.upperBound.z, aabb.upperBound.z);\n};\n\n/**\n * Returns true if the given AABB overlaps this AABB.\n * @method overlaps\n * @param  {AABB} aabb\n * @return {Boolean}\n */\nAABB.prototype.overlaps = function(aabb){\n    var l1 = this.lowerBound,\n        u1 = this.upperBound,\n        l2 = aabb.lowerBound,\n        u2 = aabb.upperBound;\n\n    //      l2        u2\n    //      |---------|\n    // |--------|\n    // l1       u1\n\n    var overlapsX = ((l2.x <= u1.x && u1.x <= u2.x) || (l1.x <= u2.x && u2.x <= u1.x));\n    var overlapsY = ((l2.y <= u1.y && u1.y <= u2.y) || (l1.y <= u2.y && u2.y <= u1.y));\n    var overlapsZ = ((l2.z <= u1.z && u1.z <= u2.z) || (l1.z <= u2.z && u2.z <= u1.z));\n\n    return overlapsX && overlapsY && overlapsZ;\n};\n\n// Mostly for debugging\nAABB.prototype.volume = function(){\n    var l = this.lowerBound,\n        u = this.upperBound;\n    return (u.x - l.x) * (u.y - l.y) * (u.z - l.z);\n};\n\n\n/**\n * Returns true if the given AABB is fully contained in this AABB.\n * @method contains\n * @param {AABB} aabb\n * @return {Boolean}\n */\nAABB.prototype.contains = function(aabb){\n    var l1 = this.lowerBound,\n        u1 = this.upperBound,\n        l2 = aabb.lowerBound,\n        u2 = aabb.upperBound;\n\n    //      l2        u2\n    //      |---------|\n    // |---------------|\n    // l1              u1\n\n    return (\n        (l1.x <= l2.x && u1.x >= u2.x) &&\n        (l1.y <= l2.y && u1.y >= u2.y) &&\n        (l1.z <= l2.z && u1.z >= u2.z)\n    );\n};\n\n/**\n * @method getCorners\n * @param {Vec3} a\n * @param {Vec3} b\n * @param {Vec3} c\n * @param {Vec3} d\n * @param {Vec3} e\n * @param {Vec3} f\n * @param {Vec3} g\n * @param {Vec3} h\n */\nAABB.prototype.getCorners = function(a, b, c, d, e, f, g, h){\n    var l = this.lowerBound,\n        u = this.upperBound;\n\n    a.copy(l);\n    b.set( u.x, l.y, l.z );\n    c.set( u.x, u.y, l.z );\n    d.set( l.x, u.y, u.z );\n    e.set( u.x, l.y, l.z );\n    f.set( l.x, u.y, l.z );\n    g.set( l.x, l.y, u.z );\n    h.copy(u);\n};\n\nvar transformIntoFrame_corners = [\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3()\n];\n\n/**\n * Get the representation of an AABB in another frame.\n * @method toLocalFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\nAABB.prototype.toLocalFrame = function(frame, target){\n\n    var corners = transformIntoFrame_corners;\n    var a = corners[0];\n    var b = corners[1];\n    var c = corners[2];\n    var d = corners[3];\n    var e = corners[4];\n    var f = corners[5];\n    var g = corners[6];\n    var h = corners[7];\n\n    // Get corners in current frame\n    this.getCorners(a, b, c, d, e, f, g, h);\n\n    // Transform them to new local frame\n    for(var i=0; i !== 8; i++){\n        var corner = corners[i];\n        frame.pointToLocal(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n};\n\n/**\n * Get the representation of an AABB in the global frame.\n * @method toWorldFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\nAABB.prototype.toWorldFrame = function(frame, target){\n\n    var corners = transformIntoFrame_corners;\n    var a = corners[0];\n    var b = corners[1];\n    var c = corners[2];\n    var d = corners[3];\n    var e = corners[4];\n    var f = corners[5];\n    var g = corners[6];\n    var h = corners[7];\n\n    // Get corners in current frame\n    this.getCorners(a, b, c, d, e, f, g, h);\n\n    // Transform them to new local frame\n    for(var i=0; i !== 8; i++){\n        var corner = corners[i];\n        frame.pointToWorld(corner, corner);\n    }\n\n    return target.setFromPoints(corners);\n};\n\n/**\n * Check if the AABB is hit by a ray.\n * @param  {Ray} ray\n * @return {number}\n */\nAABB.prototype.overlapsRay = function(ray){\n    var t = 0;\n\n    // ray.direction is unit direction vector of ray\n    var dirFracX = 1 / ray._direction.x;\n    var dirFracY = 1 / ray._direction.y;\n    var dirFracZ = 1 / ray._direction.z;\n\n    // this.lowerBound is the corner of AABB with minimal coordinates - left bottom, rt is maximal corner\n    var t1 = (this.lowerBound.x - ray.from.x) * dirFracX;\n    var t2 = (this.upperBound.x - ray.from.x) * dirFracX;\n    var t3 = (this.lowerBound.y - ray.from.y) * dirFracY;\n    var t4 = (this.upperBound.y - ray.from.y) * dirFracY;\n    var t5 = (this.lowerBound.z - ray.from.z) * dirFracZ;\n    var t6 = (this.upperBound.z - ray.from.z) * dirFracZ;\n\n    // var tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)));\n    // var tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)));\n    var tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\n    var tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6));\n\n    // if tmax < 0, ray (line) is intersecting AABB, but whole AABB is behing us\n    if (tmax < 0){\n        //t = tmax;\n        return false;\n    }\n\n    // if tmin > tmax, ray doesn't intersect AABB\n    if (tmin > tmax){\n        //t = tmax;\n        return false;\n    }\n\n    return true;\n};","/**\n * @author Wei Meng / http://about.me/menway\n *\n * Description: A THREE loader for PLY ASCII files (known as the Polygon File Format or the Stanford Triangle Format).\n *\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *  var loader = new THREE.PLYLoader();\n *  loader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *    scene.add( new THREE.Mesh( geometry ) );\n *\n *  } );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *  diffuse_red: 'red',\n *  diffuse_green: 'green',\n *  diffuse_blue: 'blue'\n * } );\n *\n */\n\nmodule.exports = THREE.PLYLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n  this.propertyNameMapping = {};\n\n};\n\nTHREE.PLYLoader.prototype = {\n\n  constructor: THREE.PLYLoader,\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var loader = new THREE.XHRLoader( this.manager );\n    loader.setResponseType( 'arraybuffer' );\n    loader.load( url, function ( text ) {\n\n      onLoad( scope.parse( text ) );\n\n    }, onProgress, onError );\n\n  },\n\n  setPropertyNameMapping: function ( mapping ) {\n\n    this.propertyNameMapping = mapping;\n\n  },\n\n  bin2str: function ( buf ) {\n\n    var array_buffer = new Uint8Array( buf );\n    var str = '';\n    for ( var i = 0; i < buf.byteLength; i ++ ) {\n\n      str += String.fromCharCode( array_buffer[ i ] ); // implicitly assumes little-endian\n\n    }\n\n    return str;\n\n  },\n\n  isASCII: function( data ) {\n\n    var header = this.parseHeader( this.bin2str( data ) );\n\n    return header.format === \"ascii\";\n\n  },\n\n  parse: function ( data ) {\n\n    if ( data instanceof ArrayBuffer ) {\n\n      return this.isASCII( data )\n        ? this.parseASCII( this.bin2str( data ) )\n        : this.parseBinary( data );\n\n    } else {\n\n      return this.parseASCII( data );\n\n    }\n\n  },\n\n  parseHeader: function ( data ) {\n\n    var patternHeader = /ply([\\s\\S]*)end_header\\s/;\n    var headerText = \"\";\n    var headerLength = 0;\n    var result = patternHeader.exec( data );\n    if ( result !== null ) {\n\n      headerText = result [ 1 ];\n      headerLength = result[ 0 ].length;\n\n    }\n\n    var header = {\n      comments: [],\n      elements: [],\n      headerLength: headerLength\n    };\n\n    var lines = headerText.split( '\\n' );\n    var currentElement = undefined;\n    var lineType, lineValues;\n\n    function make_ply_element_property( propertValues, propertyNameMapping ) {\n\n      var property = {\n        type: propertValues[ 0 ]\n      };\n\n      if ( property.type === 'list' ) {\n\n        property.name = propertValues[ 3 ];\n        property.countType = propertValues[ 1 ];\n        property.itemType = propertValues[ 2 ];\n\n      } else {\n\n        property.name = propertValues[ 1 ];\n\n      }\n\n      if ( property.name in propertyNameMapping ) {\n\n        property.name = propertyNameMapping[ property.name ];\n\n      }\n\n      return property;\n\n    }\n\n    for ( var i = 0; i < lines.length; i ++ ) {\n\n      var line = lines[ i ];\n      line = line.trim();\n      if ( line === \"\" ) {\n\n        continue;\n\n      }\n      lineValues = line.split( /\\s+/ );\n      lineType = lineValues.shift();\n      line = lineValues.join( \" \" );\n\n      switch ( lineType ) {\n\n      case \"format\":\n\n        header.format = lineValues[ 0 ];\n        header.version = lineValues[ 1 ];\n\n        break;\n\n      case \"comment\":\n\n        header.comments.push( line );\n\n        break;\n\n      case \"element\":\n\n        if ( ! ( currentElement === undefined ) ) {\n\n          header.elements.push( currentElement );\n\n        }\n\n        currentElement = Object();\n        currentElement.name = lineValues[ 0 ];\n        currentElement.count = parseInt( lineValues[ 1 ] );\n        currentElement.properties = [];\n\n        break;\n\n      case \"property\":\n\n        currentElement.properties.push( make_ply_element_property( lineValues, this.propertyNameMapping ) );\n\n        break;\n\n\n      default:\n\n        console.log( \"unhandled\", lineType, lineValues );\n\n      }\n\n    }\n\n    if ( ! ( currentElement === undefined ) ) {\n\n      header.elements.push( currentElement );\n\n    }\n\n    return header;\n\n  },\n\n  parseASCIINumber: function ( n, type ) {\n\n    switch ( type ) {\n\n    case 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\n    case 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\n\n      return parseInt( n );\n\n    case 'float': case 'double': case 'float32': case 'float64':\n\n      return parseFloat( n );\n\n    }\n\n  },\n\n  parseASCIIElement: function ( properties, line ) {\n\n    var values = line.split( /\\s+/ );\n\n    var element = Object();\n\n    for ( var i = 0; i < properties.length; i ++ ) {\n\n      if ( properties[ i ].type === \"list\" ) {\n\n        var list = [];\n        var n = this.parseASCIINumber( values.shift(), properties[ i ].countType );\n\n        for ( var j = 0; j < n; j ++ ) {\n\n          list.push( this.parseASCIINumber( values.shift(), properties[ i ].itemType ) );\n\n        }\n\n        element[ properties[ i ].name ] = list;\n\n      } else {\n\n        element[ properties[ i ].name ] = this.parseASCIINumber( values.shift(), properties[ i ].type );\n\n      }\n\n    }\n\n    return element;\n\n  },\n\n  parseASCII: function ( data ) {\n\n    // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n    var geometry = new THREE.Geometry();\n\n    var result;\n\n    var header = this.parseHeader( data );\n\n    var patternBody = /end_header\\s([\\s\\S]*)$/;\n    var body = \"\";\n    if ( ( result = patternBody.exec( data ) ) !== null ) {\n\n      body = result [ 1 ];\n\n    }\n\n    var lines = body.split( '\\n' );\n    var currentElement = 0;\n    var currentElementCount = 0;\n    geometry.useColor = false;\n\n    for ( var i = 0; i < lines.length; i ++ ) {\n\n      var line = lines[ i ];\n      line = line.trim();\n      if ( line === \"\" ) {\n\n        continue;\n\n      }\n\n      if ( currentElementCount >= header.elements[ currentElement ].count ) {\n\n        currentElement ++;\n        currentElementCount = 0;\n\n      }\n\n      var element = this.parseASCIIElement( header.elements[ currentElement ].properties, line );\n\n      this.handleElement( geometry, header.elements[ currentElement ].name, element );\n\n      currentElementCount ++;\n\n    }\n\n    return this.postProcess( geometry );\n\n  },\n\n  postProcess: function ( geometry ) {\n\n    if ( geometry.useColor ) {\n\n      for ( var i = 0; i < geometry.faces.length; i ++ ) {\n\n        geometry.faces[ i ].vertexColors = [\n          geometry.colors[ geometry.faces[ i ].a ],\n          geometry.colors[ geometry.faces[ i ].b ],\n          geometry.colors[ geometry.faces[ i ].c ]\n        ];\n\n      }\n\n      geometry.elementsNeedUpdate = true;\n\n    }\n\n    geometry.computeBoundingSphere();\n\n    return geometry;\n\n  },\n\n  handleElement: function ( geometry, elementName, element ) {\n\n    if ( elementName === \"vertex\" ) {\n\n      geometry.vertices.push(\n        new THREE.Vector3( element.x, element.y, element.z )\n      );\n\n      if ( 'red' in element && 'green' in element && 'blue' in element ) {\n\n        geometry.useColor = true;\n\n        var color = new THREE.Color();\n        color.setRGB( element.red / 255.0, element.green / 255.0, element.blue / 255.0 );\n        geometry.colors.push( color );\n\n      }\n\n    } else if ( elementName === \"face\" ) {\n\n      // BEGIN: Edits by donmccurdy.\n      var vertex_indices = element.vertex_indices || element.vertex_index;\n      // END: Edits by donmccurdy.\n\n      if ( vertex_indices.length === 3 ) {\n\n        geometry.faces.push(\n          new THREE.Face3( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] )\n        );\n\n      } else if ( vertex_indices.length === 4 ) {\n\n        geometry.faces.push(\n          new THREE.Face3( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] ),\n          new THREE.Face3( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] )\n        );\n\n      }\n\n    }\n\n  },\n\n  binaryRead: function ( dataview, at, type, little_endian ) {\n\n    switch ( type ) {\n\n      // corespondences for non-specific length types here match rply:\n    case 'int8':    case 'char':   return [ dataview.getInt8( at ), 1 ];\n\n    case 'uint8':   case 'uchar':  return [ dataview.getUint8( at ), 1 ];\n\n    case 'int16':   case 'short':  return [ dataview.getInt16( at, little_endian ), 2 ];\n\n    case 'uint16':  case 'ushort': return [ dataview.getUint16( at, little_endian ), 2 ];\n\n    case 'int32':   case 'int':    return [ dataview.getInt32( at, little_endian ), 4 ];\n\n    case 'uint32':  case 'uint':   return [ dataview.getUint32( at, little_endian ), 4 ];\n\n    case 'float32': case 'float':  return [ dataview.getFloat32( at, little_endian ), 4 ];\n\n    case 'float64': case 'double': return [ dataview.getFloat64( at, little_endian ), 8 ];\n\n    }\n\n  },\n\n  binaryReadElement: function ( dataview, at, properties, little_endian ) {\n\n    var element = Object();\n    var result, read = 0;\n\n    for ( var i = 0; i < properties.length; i ++ ) {\n\n      if ( properties[ i ].type === \"list\" ) {\n\n        var list = [];\n\n        result = this.binaryRead( dataview, at + read, properties[ i ].countType, little_endian );\n        var n = result[ 0 ];\n        read += result[ 1 ];\n\n        for ( var j = 0; j < n; j ++ ) {\n\n          result = this.binaryRead( dataview, at + read, properties[ i ].itemType, little_endian );\n          list.push( result[ 0 ] );\n          read += result[ 1 ];\n\n        }\n\n        element[ properties[ i ].name ] = list;\n\n      } else {\n\n        result = this.binaryRead( dataview, at + read, properties[ i ].type, little_endian );\n        element[ properties[ i ].name ] = result[ 0 ];\n        read += result[ 1 ];\n\n      }\n\n    }\n\n    return [ element, read ];\n\n  },\n\n  parseBinary: function ( data ) {\n\n    var geometry = new THREE.Geometry();\n\n    var header = this.parseHeader( this.bin2str( data ) );\n    var little_endian = ( header.format === \"binary_little_endian\" );\n    var body = new DataView( data, header.headerLength );\n    var result, loc = 0;\n\n    for ( var currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\n\n      for ( var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount ++ ) {\n\n        result = this.binaryReadElement( body, loc, header.elements[ currentElement ].properties, little_endian );\n        loc += result[ 1 ];\n        var element = result[ 0 ];\n\n        this.handleElement( geometry, header.elements[ currentElement ].name, element );\n\n      }\n\n    }\n\n    return this.postProcess( geometry );\n\n  }\n\n};\n","var Driver = require('./driver');\n\nfunction AmmoDriver () {\n  throw new Error('[AmmoDriver] Driver not implemented.');\n}\n\nAmmoDriver.prototype = new Driver();\nAmmoDriver.prototype.constructor = AmmoDriver;\n\nmodule.exports = AmmoDriver;\n","var CANNON = require('cannon');\n\nmodule.exports = AFRAME.registerComponent('constraint', {\n\n  multiple: true,\n\n  schema: {\n    // Type of constraint.\n    type: {default: 'lock', oneOf: ['coneTwist', 'distance', 'hinge', 'lock', 'pointToPoint']},\n\n    // Target (other) body for the constraint.\n    target: {type: 'selector'},\n\n    // Maximum force that should be applied to constraint the bodies.\n    maxForce: {default: 1e6, min: 0},\n\n    // If true, bodies can collide when they are connected.\n    collideConnected: {default: true},\n\n    // Wake up bodies when connected.\n    wakeUpBodies: {default: true},\n\n    // The distance to be kept between the bodies. If 0, will be set to current distance.\n    distance: {default: 0, min: 0},\n\n    // Offset of the hinge or point-to-point constraint, defined locally in the body.\n    pivot: {type: 'vec3'},\n    targetPivot: {type: 'vec3'},\n\n    // An axis that each body can rotate around, defined locally to that body.\n    axis: {type: 'vec3', default: { x: 0, y: 0, z: 1 }},\n    targetAxis: {type: 'vec3', default: { x: 0, y: 0, z: 1}}\n  },\n\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n    this.constraint = /* {CANNON.Constraint} */ null;\n  },\n\n  remove: function () {\n    if (!this.constraint) return;\n\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n\n  update: function () {\n    var el = this.el,\n        data = this.data;\n\n    this.remove();\n\n    if (!el.body || !data.target.body) {\n      (el.body ? data.target : el).addEventListener('body-loaded', this.update.bind(this, {}));\n      return;\n    }\n\n    this.constraint = this.createConstraint();\n    this.system.addConstraint(this.constraint);\n  },\n\n  /**\n   * Creates a new constraint, given current component data. The CANNON.js constructors are a bit\n   * different for each constraint type. A `.type` property is added to each constraint, because\n   * `instanceof` checks are not reliable for some types. These types are needed for serialization.\n   * @return {CANNON.Constraint}\n   */\n  createConstraint: function () {\n    var constraint,\n        data = this.data,\n        pivot = new CANNON.Vec3(data.pivot.x, data.pivot.y, data.pivot.z),\n        targetPivot = new CANNON.Vec3(data.targetPivot.x, data.targetPivot.y, data.targetPivot.z),\n        axis = new CANNON.Vec3(data.axis.x, data.axis.y, data.axis.z),\n        targetAxis= new CANNON.Vec3(data.targetAxis.x, data.targetAxis.y, data.targetAxis.z);\n\n    var constraint;\n\n    switch (data.type) {\n      case 'lock':\n        constraint = new CANNON.LockConstraint(\n          this.el.body,\n          data.target.body,\n          {maxForce: data.maxForce}\n        );\n        constraint.type = 'LockConstraint';\n        break;\n\n      case 'distance':\n        constraint = new CANNON.DistanceConstraint(\n          this.el.body,\n          data.target.body,\n          data.distance,\n          data.maxForce\n        );\n        constraint.type = 'DistanceConstraint';\n        break;\n\n      case 'hinge':\n        constraint = new CANNON.HingeConstraint(\n          this.el.body,\n          data.target.body, {\n            pivotA: pivot,\n            pivotB: targetPivot,\n            axisA: axis,\n            axisB: targetAxis,\n            maxForce: data.maxForce\n          });\n        constraint.type = 'HingeConstraint';\n        break;\n\n      case 'coneTwist':\n        constraint = new CANNON.ConeTwistConstraint(\n          this.el.body,\n          data.target.body, {\n            pivotA: pivot,\n            pivotB: targetPivot,\n            axisA: axis,\n            axisB: targetAxis,\n            maxForce: data.maxForce\n          });\n        constraint.type = 'ConeTwistConstraint';\n        break;\n\n      case 'pointToPoint':\n        constraint = new CANNON.PointToPointConstraint(\n          this.el.body,\n          pivot,\n          data.target.body,\n          targetPivot,\n          data.maxForce);\n        constraint.type = 'PointToPointConstraint';\n        break;\n\n      default:\n        throw new Error('[constraint] Unexpected type: ' + data.type);\n    }\n\n    constraint.collideConnected = data.collideConnected;\n    return constraint;\n  }\n});\n","module.exports = Plane;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\n\n/**\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a RigidBody and rotate that body. See the demos.\n * @class Plane\n * @constructor\n * @extends Shape\n * @author schteppe\n */\nfunction Plane(){\n    Shape.call(this);\n    this.type = Shape.types.PLANE;\n\n    // World oriented normal\n    this.worldNormal = new Vec3();\n    this.worldNormalNeedsUpdate = true;\n\n    this.boundingSphereRadius = Number.MAX_VALUE;\n}\nPlane.prototype = new Shape();\nPlane.prototype.constructor = Plane;\n\nPlane.prototype.computeWorldNormal = function(quat){\n    var n = this.worldNormal;\n    n.set(0,0,1);\n    quat.vmult(n,n);\n    this.worldNormalNeedsUpdate = false;\n};\n\nPlane.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    return target;\n};\n\nPlane.prototype.volume = function(){\n    return Number.MAX_VALUE; // The plane is infinite...\n};\n\nvar tempNormal = new Vec3();\nPlane.prototype.calculateWorldAABB = function(pos, quat, min, max){\n    // The plane AABB is infinite, except if the normal is pointing along any axis\n    tempNormal.set(0,0,1); // Default plane normal is z\n    quat.vmult(tempNormal,tempNormal);\n    var maxVal = Number.MAX_VALUE;\n    min.set(-maxVal, -maxVal, -maxVal);\n    max.set(maxVal, maxVal, maxVal);\n\n    if(tempNormal.x === 1){ max.x = pos.x; }\n    if(tempNormal.y === 1){ max.y = pos.y; }\n    if(tempNormal.z === 1){ max.z = pos.z; }\n\n    if(tempNormal.x === -1){ min.x = pos.x; }\n    if(tempNormal.y === -1){ min.y = pos.y; }\n    if(tempNormal.z === -1){ min.z = pos.z; }\n};\n\nPlane.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = Number.MAX_VALUE;\n};","var Body = require('./body');\n\n/**\n * Dynamic body.\n *\n * Moves according to physics simulation, and may collide with other objects.\n */\nvar DynamicBody = AFRAME.utils.extend({}, Body.definition);\n\nmodule.exports = AFRAME.registerComponent('dynamic-body', DynamicBody);\n","/**\n * ply-model\n *\n * Wraps THREE.PLYLoader.\n */\nTHREE.PLYLoader = require('../../lib/PLYLoader');\n\n/**\n * Loads, caches, resolves geometries.\n *\n * @member cache - Promises that resolve geometries keyed by `src`.\n */\nmodule.exports.System = AFRAME.registerSystem('ply-model', {\n  init: function () {\n    this.cache = {};\n  },\n\n  /**\n   * @returns {Promise}\n   */\n  getOrLoadGeometry: function (src, skipCache) {\n    const cache = this.cache;\n    const cacheItem = cache[src];\n\n    if (!skipCache && cacheItem) {\n      return cacheItem;\n    }\n\n    cache[src] = new Promise(function (resolve) {\n      const loader = new THREE.PLYLoader();\n      loader.load(src, function (geometry) {\n        resolve(geometry);\n      });\n    });\n    return cache[src];\n  },\n});\n\nmodule.exports.Component = AFRAME.registerComponent('ply-model', {\n  schema: {\n    skipCache: {type: 'boolean', default: false},\n    src: {type: 'asset'}\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    const data = this.data;\n    const el = this.el;\n\n    if (!data.src) {\n      console.warn('[%s] `src` property is required.', this.name);\n      return;\n    }\n\n    // Get geometry from system, create and set mesh.\n    this.system.getOrLoadGeometry(data.src, data.skipCache).then((geometry) => {\n      const model = createModel(geometry);\n      el.setObject3D('mesh', model);\n      el.emit('model-loaded', {format: 'ply', model: model});\n    });\n  },\n\n  remove: function () {\n    if (this.model) { this.el.removeObject3D('mesh'); }\n  }\n});\n\nfunction createModel (geometry) {\n  return new THREE.Mesh(geometry, new THREE.MeshPhongMaterial({\n    color: 0xFFFFFF,\n    shading: THREE.FlatShading,\n    vertexColors: THREE.VertexColors,\n    shininess: 0\n  }));\n}\n","const fetchScript = require('../../lib/fetch-script')();\n\nconst LOADER_SRC = 'https://rawgit.com/mrdoob/three.js/r86/examples/js/loaders/GLTFLoader.js';\n\nconst loadLoader = (function () {\n  let promise;\n  return function () {\n    promise = promise || fetchScript(LOADER_SRC);\n    return promise;\n  };\n}());\n\n/**\n * Legacy loader for glTF 1.0 models.\n * Asynchronously loads THREE.GLTFLoader from rawgit.\n */\nmodule.exports = AFRAME.registerComponent('gltf-model-legacy', {\n  schema: {type: 'model'},\n\n  init: function () {\n    this.model = null;\n    this.loader = null;\n    this.loaderPromise = loadLoader().then(() => {\n      this.loader = new THREE.GLTFLoader();\n      this.loader.setCrossOrigin('Anonymous');\n    });\n  },\n\n  update: function () {\n    const self = this;\n    const el = this.el;\n    const src = this.data;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loaderPromise.then(() => {\n      this.loader.load(src, function gltfLoaded (gltfModel) {\n        self.model = gltfModel.scene;\n        self.model.animations = gltfModel.animations;\n        el.setObject3D('mesh', self.model);\n        el.emit('model-loaded', {format: 'gltf', model: self.model});\n      });\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n","module.exports = Body;\n\nvar EventTarget = require('../utils/EventTarget');\nvar Shape = require('../shapes/Shape');\nvar Vec3 = require('../math/Vec3');\nvar Mat3 = require('../math/Mat3');\nvar Quaternion = require('../math/Quaternion');\nvar Material = require('../material/Material');\nvar AABB = require('../collision/AABB');\nvar Box = require('../shapes/Box');\n\n/**\n * Base class for all body types.\n * @class Body\n * @constructor\n * @extends EventTarget\n * @param {object} [options]\n * @param {Vec3} [options.position]\n * @param {Vec3} [options.velocity]\n * @param {Vec3} [options.angularVelocity]\n * @param {Quaternion} [options.quaternion]\n * @param {number} [options.mass]\n * @param {Material} [options.material]\n * @param {number} [options.type]\n * @param {number} [options.linearDamping=0.01]\n * @param {number} [options.angularDamping=0.01]\n * @param {boolean} [options.allowSleep=true]\n * @param {number} [options.sleepSpeedLimit=0.1]\n * @param {number} [options.sleepTimeLimit=1]\n * @param {number} [options.collisionFilterGroup=1]\n * @param {number} [options.collisionFilterMask=1]\n * @param {boolean} [options.fixedRotation=false]\n * @param {Vec3} [options.linearFactor]\n * @param {Vec3} [options.angularFactor]\n * @param {Shape} [options.shape]\n * @example\n *     var body = new Body({\n *         mass: 1\n *     });\n *     var shape = new Sphere(1);\n *     body.addShape(shape);\n *     world.addBody(body);\n */\nfunction Body(options){\n    options = options || {};\n\n    EventTarget.apply(this);\n\n    this.id = Body.idCounter++;\n\n    /**\n     * Reference to the world the body is living in\n     * @property world\n     * @type {World}\n     */\n    this.world = null;\n\n    /**\n     * Callback function that is used BEFORE stepping the system. Use it to apply forces, for example. Inside the function, \"this\" will refer to this Body object.\n     * @property preStep\n     * @type {Function}\n     * @deprecated Use World events instead\n     */\n    this.preStep = null;\n\n    /**\n     * Callback function that is used AFTER stepping the system. Inside the function, \"this\" will refer to this Body object.\n     * @property postStep\n     * @type {Function}\n     * @deprecated Use World events instead\n     */\n    this.postStep = null;\n\n    this.vlambda = new Vec3();\n\n    /**\n     * @property {Number} collisionFilterGroup\n     */\n    this.collisionFilterGroup = typeof(options.collisionFilterGroup) === 'number' ? options.collisionFilterGroup : 1;\n\n    /**\n     * @property {Number} collisionFilterMask\n     */\n    this.collisionFilterMask = typeof(options.collisionFilterMask) === 'number' ? options.collisionFilterMask : 1;\n\n    /**\n     * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n     * @property {Number} collisionResponse\n     */\n\tthis.collisionResponse = true;\n\n    /**\n     * @property position\n     * @type {Vec3}\n     */\n    this.position = new Vec3();\n\n    /**\n     * @property {Vec3} previousPosition\n     */\n    this.previousPosition = new Vec3();\n\n    /**\n     * Interpolated position of the body.\n     * @property {Vec3} interpolatedPosition\n     */\n    this.interpolatedPosition = new Vec3();\n\n    /**\n     * Initial position of the body\n     * @property initPosition\n     * @type {Vec3}\n     */\n    this.initPosition = new Vec3();\n\n    if(options.position){\n        this.position.copy(options.position);\n        this.previousPosition.copy(options.position);\n        this.interpolatedPosition.copy(options.position);\n        this.initPosition.copy(options.position);\n    }\n\n    /**\n     * @property velocity\n     * @type {Vec3}\n     */\n    this.velocity = new Vec3();\n\n    if(options.velocity){\n        this.velocity.copy(options.velocity);\n    }\n\n    /**\n     * @property initVelocity\n     * @type {Vec3}\n     */\n    this.initVelocity = new Vec3();\n\n    /**\n     * Linear force on the body\n     * @property force\n     * @type {Vec3}\n     */\n    this.force = new Vec3();\n\n    var mass = typeof(options.mass) === 'number' ? options.mass : 0;\n\n    /**\n     * @property mass\n     * @type {Number}\n     * @default 0\n     */\n    this.mass = mass;\n\n    /**\n     * @property invMass\n     * @type {Number}\n     */\n    this.invMass = mass > 0 ? 1.0 / mass : 0;\n\n    /**\n     * @property material\n     * @type {Material}\n     */\n    this.material = options.material || null;\n\n    /**\n     * @property linearDamping\n     * @type {Number}\n     */\n    this.linearDamping = typeof(options.linearDamping) === 'number' ? options.linearDamping : 0.01;\n\n    /**\n     * One of: Body.DYNAMIC, Body.STATIC and Body.KINEMATIC.\n     * @property type\n     * @type {Number}\n     */\n    this.type = (mass <= 0.0 ? Body.STATIC : Body.DYNAMIC);\n    if(typeof(options.type) === typeof(Body.STATIC)){\n        this.type = options.type;\n    }\n\n    /**\n     * If true, the body will automatically fall to sleep.\n     * @property allowSleep\n     * @type {Boolean}\n     * @default true\n     */\n    this.allowSleep = typeof(options.allowSleep) !== 'undefined' ? options.allowSleep : true;\n\n    /**\n     * Current sleep state.\n     * @property sleepState\n     * @type {Number}\n     */\n    this.sleepState = 0;\n\n    /**\n     * If the speed (the norm of the velocity) is smaller than this value, the body is considered sleepy.\n     * @property sleepSpeedLimit\n     * @type {Number}\n     * @default 0.1\n     */\n    this.sleepSpeedLimit = typeof(options.sleepSpeedLimit) !== 'undefined' ? options.sleepSpeedLimit : 0.1;\n\n    /**\n     * If the body has been sleepy for this sleepTimeLimit seconds, it is considered sleeping.\n     * @property sleepTimeLimit\n     * @type {Number}\n     * @default 1\n     */\n    this.sleepTimeLimit = typeof(options.sleepTimeLimit) !== 'undefined' ? options.sleepTimeLimit : 1;\n\n    this.timeLastSleepy = 0;\n\n    this._wakeUpAfterNarrowphase = false;\n\n\n    /**\n     * Rotational force on the body, around center of mass\n     * @property {Vec3} torque\n     */\n    this.torque = new Vec3();\n\n    /**\n     * Orientation of the body\n     * @property quaternion\n     * @type {Quaternion}\n     */\n    this.quaternion = new Quaternion();\n\n    /**\n     * @property initQuaternion\n     * @type {Quaternion}\n     */\n    this.initQuaternion = new Quaternion();\n\n    /**\n     * @property {Quaternion} previousQuaternion\n     */\n    this.previousQuaternion = new Quaternion();\n\n    /**\n     * Interpolated orientation of the body.\n     * @property {Quaternion} interpolatedQuaternion\n     */\n    this.interpolatedQuaternion = new Quaternion();\n\n    if(options.quaternion){\n        this.quaternion.copy(options.quaternion);\n        this.initQuaternion.copy(options.quaternion);\n        this.previousQuaternion.copy(options.quaternion);\n        this.interpolatedQuaternion.copy(options.quaternion);\n    }\n\n    /**\n     * @property angularVelocity\n     * @type {Vec3}\n     */\n    this.angularVelocity = new Vec3();\n\n    if(options.angularVelocity){\n        this.angularVelocity.copy(options.angularVelocity);\n    }\n\n    /**\n     * @property initAngularVelocity\n     * @type {Vec3}\n     */\n    this.initAngularVelocity = new Vec3();\n\n    /**\n     * @property shapes\n     * @type {array}\n     */\n    this.shapes = [];\n\n    /**\n     * @property shapeOffsets\n     * @type {array}\n     */\n    this.shapeOffsets = [];\n\n    /**\n     * @property shapeOrientations\n     * @type {array}\n     */\n    this.shapeOrientations = [];\n\n    /**\n     * @property inertia\n     * @type {Vec3}\n     */\n    this.inertia = new Vec3();\n\n    /**\n     * @property {Vec3} invInertia\n     */\n    this.invInertia = new Vec3();\n\n    /**\n     * @property {Mat3} invInertiaWorld\n     */\n    this.invInertiaWorld = new Mat3();\n\n    this.invMassSolve = 0;\n\n    /**\n     * @property {Vec3} invInertiaSolve\n     */\n    this.invInertiaSolve = new Vec3();\n\n    /**\n     * @property {Mat3} invInertiaWorldSolve\n     */\n    this.invInertiaWorldSolve = new Mat3();\n\n    /**\n     * Set to true if you don't want the body to rotate. Make sure to run .updateMassProperties() after changing this.\n     * @property {Boolean} fixedRotation\n     * @default false\n     */\n    this.fixedRotation = typeof(options.fixedRotation) !== \"undefined\" ? options.fixedRotation : false;\n\n    /**\n     * @property {Number} angularDamping\n     */\n    this.angularDamping = typeof(options.angularDamping) !== 'undefined' ? options.angularDamping : 0.01;\n\n    /**\n     * @property {Vec3} linearFactor\n     */\n    this.linearFactor = new Vec3(1,1,1);\n    if(options.linearFactor){\n        this.linearFactor.copy(options.linearFactor);\n    }\n\n    /**\n     * @property {Vec3} angularFactor\n     */\n    this.angularFactor = new Vec3(1,1,1);\n    if(options.angularFactor){\n        this.angularFactor.copy(options.angularFactor);\n    }\n\n    /**\n     * @property aabb\n     * @type {AABB}\n     */\n    this.aabb = new AABB();\n\n    /**\n     * Indicates if the AABB needs to be updated before use.\n     * @property aabbNeedsUpdate\n     * @type {Boolean}\n     */\n    this.aabbNeedsUpdate = true;\n\n    this.wlambda = new Vec3();\n\n    if(options.shape){\n        this.addShape(options.shape);\n    }\n\n    this.updateMassProperties();\n}\nBody.prototype = new EventTarget();\nBody.prototype.constructor = Body;\n\n/**\n * Dispatched after two bodies collide. This event is dispatched on each\n * of the two bodies involved in the collision.\n * @event collide\n * @param {Body} body The body that was involved in the collision.\n * @param {ContactEquation} contact The details of the collision.\n */\nBody.COLLIDE_EVENT_NAME = \"collide\";\n\n/**\n * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\n * @static\n * @property DYNAMIC\n * @type {Number}\n */\nBody.DYNAMIC = 1;\n\n/**\n * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\n * @static\n * @property STATIC\n * @type {Number}\n */\nBody.STATIC = 2;\n\n/**\n * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\n * @static\n * @property KINEMATIC\n * @type {Number}\n */\nBody.KINEMATIC = 4;\n\n\n\n/**\n * @static\n * @property AWAKE\n * @type {number}\n */\nBody.AWAKE = 0;\n\n/**\n * @static\n * @property SLEEPY\n * @type {number}\n */\nBody.SLEEPY = 1;\n\n/**\n * @static\n * @property SLEEPING\n * @type {number}\n */\nBody.SLEEPING = 2;\n\nBody.idCounter = 0;\n\n/**\n * Dispatched after a sleeping body has woken up.\n * @event wakeup\n */\nBody.wakeupEvent = {\n    type: \"wakeup\"\n};\n\n/**\n * Wake the body up.\n * @method wakeUp\n */\nBody.prototype.wakeUp = function(){\n    var s = this.sleepState;\n    this.sleepState = 0;\n    this._wakeUpAfterNarrowphase = false;\n    if(s === Body.SLEEPING){\n        this.dispatchEvent(Body.wakeupEvent);\n    }\n};\n\n/**\n * Force body sleep\n * @method sleep\n */\nBody.prototype.sleep = function(){\n    this.sleepState = Body.SLEEPING;\n    this.velocity.set(0,0,0);\n    this.angularVelocity.set(0,0,0);\n    this._wakeUpAfterNarrowphase = false;\n};\n\n/**\n * Dispatched after a body has gone in to the sleepy state.\n * @event sleepy\n */\nBody.sleepyEvent = {\n    type: \"sleepy\"\n};\n\n/**\n * Dispatched after a body has fallen asleep.\n * @event sleep\n */\nBody.sleepEvent = {\n    type: \"sleep\"\n};\n\n/**\n * Called every timestep to update internal sleep timer and change sleep state if needed.\n * @method sleepTick\n * @param {Number} time The world time in seconds\n */\nBody.prototype.sleepTick = function(time){\n    if(this.allowSleep){\n        var sleepState = this.sleepState;\n        var speedSquared = this.velocity.norm2() + this.angularVelocity.norm2();\n        var speedLimitSquared = Math.pow(this.sleepSpeedLimit,2);\n        if(sleepState===Body.AWAKE && speedSquared < speedLimitSquared){\n            this.sleepState = Body.SLEEPY; // Sleepy\n            this.timeLastSleepy = time;\n            this.dispatchEvent(Body.sleepyEvent);\n        } else if(sleepState===Body.SLEEPY && speedSquared > speedLimitSquared){\n            this.wakeUp(); // Wake up\n        } else if(sleepState===Body.SLEEPY && (time - this.timeLastSleepy ) > this.sleepTimeLimit){\n            this.sleep(); // Sleeping\n            this.dispatchEvent(Body.sleepEvent);\n        }\n    }\n};\n\n/**\n * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\n * @method updateSolveMassProperties\n */\nBody.prototype.updateSolveMassProperties = function(){\n    if(this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC){\n        this.invMassSolve = 0;\n        this.invInertiaSolve.setZero();\n        this.invInertiaWorldSolve.setZero();\n    } else {\n        this.invMassSolve = this.invMass;\n        this.invInertiaSolve.copy(this.invInertia);\n        this.invInertiaWorldSolve.copy(this.invInertiaWorld);\n    }\n};\n\n/**\n * Convert a world point to local body frame.\n * @method pointToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.pointToLocalFrame = function(worldPoint,result){\n    var result = result || new Vec3();\n    worldPoint.vsub(this.position,result);\n    this.quaternion.conjugate().vmult(result,result);\n    return result;\n};\n\n/**\n * Convert a world vector to local body frame.\n * @method vectorToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.vectorToLocalFrame = function(worldVector, result){\n    var result = result || new Vec3();\n    this.quaternion.conjugate().vmult(worldVector,result);\n    return result;\n};\n\n/**\n * Convert a local body point to world frame.\n * @method pointToWorldFrame\n * @param  {Vec3} localPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.pointToWorldFrame = function(localPoint,result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localPoint,result);\n    result.vadd(this.position,result);\n    return result;\n};\n\n/**\n * Convert a local body point to world frame.\n * @method vectorToWorldFrame\n * @param  {Vec3} localVector\n * @param  {Vec3} result\n * @return {Vec3}\n */\nBody.prototype.vectorToWorldFrame = function(localVector, result){\n    var result = result || new Vec3();\n    this.quaternion.vmult(localVector, result);\n    return result;\n};\n\nvar tmpVec = new Vec3();\nvar tmpQuat = new Quaternion();\n\n/**\n * Add a shape to the body with a local offset and orientation.\n * @method addShape\n * @param {Shape} shape\n * @param {Vec3} [_offset]\n * @param {Quaternion} [_orientation]\n * @return {Body} The body object, for chainability.\n */\nBody.prototype.addShape = function(shape, _offset, _orientation){\n    var offset = new Vec3();\n    var orientation = new Quaternion();\n\n    if(_offset){\n        offset.copy(_offset);\n    }\n    if(_orientation){\n        orientation.copy(_orientation);\n    }\n\n    this.shapes.push(shape);\n    this.shapeOffsets.push(offset);\n    this.shapeOrientations.push(orientation);\n    this.updateMassProperties();\n    this.updateBoundingRadius();\n\n    this.aabbNeedsUpdate = true;\n\n    shape.body = this;\n\n    return this;\n};\n\n/**\n * Update the bounding radius of the body. Should be done if any of the shapes are changed.\n * @method updateBoundingRadius\n */\nBody.prototype.updateBoundingRadius = function(){\n    var shapes = this.shapes,\n        shapeOffsets = this.shapeOffsets,\n        N = shapes.length,\n        radius = 0;\n\n    for(var i=0; i!==N; i++){\n        var shape = shapes[i];\n        shape.updateBoundingSphereRadius();\n        var offset = shapeOffsets[i].norm(),\n            r = shape.boundingSphereRadius;\n        if(offset + r > radius){\n            radius = offset + r;\n        }\n    }\n\n    this.boundingRadius = radius;\n};\n\nvar computeAABB_shapeAABB = new AABB();\n\n/**\n * Updates the .aabb\n * @method computeAABB\n * @todo rename to updateAABB()\n */\nBody.prototype.computeAABB = function(){\n    var shapes = this.shapes,\n        shapeOffsets = this.shapeOffsets,\n        shapeOrientations = this.shapeOrientations,\n        N = shapes.length,\n        offset = tmpVec,\n        orientation = tmpQuat,\n        bodyQuat = this.quaternion,\n        aabb = this.aabb,\n        shapeAABB = computeAABB_shapeAABB;\n\n    for(var i=0; i!==N; i++){\n        var shape = shapes[i];\n\n        // Get shape world position\n        bodyQuat.vmult(shapeOffsets[i], offset);\n        offset.vadd(this.position, offset);\n\n        // Get shape world quaternion\n        shapeOrientations[i].mult(bodyQuat, orientation);\n\n        // Get shape AABB\n        shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\n\n        if(i === 0){\n            aabb.copy(shapeAABB);\n        } else {\n            aabb.extend(shapeAABB);\n        }\n    }\n\n    this.aabbNeedsUpdate = false;\n};\n\nvar uiw_m1 = new Mat3(),\n    uiw_m2 = new Mat3(),\n    uiw_m3 = new Mat3();\n\n/**\n * Update .inertiaWorld and .invInertiaWorld\n * @method updateInertiaWorld\n */\nBody.prototype.updateInertiaWorld = function(force){\n    var I = this.invInertia;\n    if (I.x === I.y && I.y === I.z && !force) {\n        // If inertia M = s*I, where I is identity and s a scalar, then\n        //    R*M*R' = R*(s*I)*R' = s*R*I*R' = s*R*R' = s*I = M\n        // where R is the rotation matrix.\n        // In other words, we don't have to transform the inertia if all\n        // inertia diagonal entries are equal.\n    } else {\n        var m1 = uiw_m1,\n            m2 = uiw_m2,\n            m3 = uiw_m3;\n        m1.setRotationFromQuaternion(this.quaternion);\n        m1.transpose(m2);\n        m1.scale(I,m1);\n        m1.mmult(m2,this.invInertiaWorld);\n    }\n};\n\n/**\n * Apply force to a world point. This could for example be a point on the Body surface. Applying force this way will add to Body.force and Body.torque.\n * @method applyForce\n * @param  {Vec3} force The amount of force to add.\n * @param  {Vec3} relativePoint A point relative to the center of mass to apply the force on.\n */\nvar Body_applyForce_r = new Vec3();\nvar Body_applyForce_rotForce = new Vec3();\nBody.prototype.applyForce = function(force,relativePoint){\n    if(this.type !== Body.DYNAMIC){ // Needed?\n        return;\n    }\n\n    // Compute produced rotational force\n    var rotForce = Body_applyForce_rotForce;\n    relativePoint.cross(force,rotForce);\n\n    // Add linear force\n    this.force.vadd(force,this.force);\n\n    // Add rotational force\n    this.torque.vadd(rotForce,this.torque);\n};\n\n/**\n * Apply force to a local point in the body.\n * @method applyLocalForce\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\nvar Body_applyLocalForce_worldForce = new Vec3();\nvar Body_applyLocalForce_relativePointWorld = new Vec3();\nBody.prototype.applyLocalForce = function(localForce, localPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    var worldForce = Body_applyLocalForce_worldForce;\n    var relativePointWorld = Body_applyLocalForce_relativePointWorld;\n\n    // Transform the force vector to world space\n    this.vectorToWorldFrame(localForce, worldForce);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n\n    this.applyForce(worldForce, relativePointWorld);\n};\n\n/**\n * Apply impulse to a world point. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.\n * @method applyImpulse\n * @param  {Vec3} impulse The amount of impulse to add.\n * @param  {Vec3} relativePoint A point relative to the center of mass to apply the force on.\n */\nvar Body_applyImpulse_r = new Vec3();\nvar Body_applyImpulse_velo = new Vec3();\nvar Body_applyImpulse_rotVelo = new Vec3();\nBody.prototype.applyImpulse = function(impulse, relativePoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    // Compute point position relative to the body center\n    var r = relativePoint;\n\n    // Compute produced central impulse velocity\n    var velo = Body_applyImpulse_velo;\n    velo.copy(impulse);\n    velo.mult(this.invMass,velo);\n\n    // Add linear impulse\n    this.velocity.vadd(velo, this.velocity);\n\n    // Compute produced rotational impulse velocity\n    var rotVelo = Body_applyImpulse_rotVelo;\n    r.cross(impulse,rotVelo);\n\n    /*\n    rotVelo.x *= this.invInertia.x;\n    rotVelo.y *= this.invInertia.y;\n    rotVelo.z *= this.invInertia.z;\n    */\n    this.invInertiaWorld.vmult(rotVelo,rotVelo);\n\n    // Add rotational Impulse\n    this.angularVelocity.vadd(rotVelo, this.angularVelocity);\n};\n\n/**\n * Apply locally-defined impulse to a local point in the body.\n * @method applyLocalImpulse\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\nvar Body_applyLocalImpulse_worldImpulse = new Vec3();\nvar Body_applyLocalImpulse_relativePoint = new Vec3();\nBody.prototype.applyLocalImpulse = function(localImpulse, localPoint){\n    if(this.type !== Body.DYNAMIC){\n        return;\n    }\n\n    var worldImpulse = Body_applyLocalImpulse_worldImpulse;\n    var relativePointWorld = Body_applyLocalImpulse_relativePoint;\n\n    // Transform the force vector to world space\n    this.vectorToWorldFrame(localImpulse, worldImpulse);\n    this.vectorToWorldFrame(localPoint, relativePointWorld);\n\n    this.applyImpulse(worldImpulse, relativePointWorld);\n};\n\nvar Body_updateMassProperties_halfExtents = new Vec3();\n\n/**\n * Should be called whenever you change the body shape or mass.\n * @method updateMassProperties\n */\nBody.prototype.updateMassProperties = function(){\n    var halfExtents = Body_updateMassProperties_halfExtents;\n\n    this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\n    var I = this.inertia;\n    var fixed = this.fixedRotation;\n\n    // Approximate with AABB box\n    this.computeAABB();\n    halfExtents.set(\n        (this.aabb.upperBound.x-this.aabb.lowerBound.x) / 2,\n        (this.aabb.upperBound.y-this.aabb.lowerBound.y) / 2,\n        (this.aabb.upperBound.z-this.aabb.lowerBound.z) / 2\n    );\n    Box.calculateInertia(halfExtents, this.mass, I);\n\n    this.invInertia.set(\n        I.x > 0 && !fixed ? 1.0 / I.x : 0,\n        I.y > 0 && !fixed ? 1.0 / I.y : 0,\n        I.z > 0 && !fixed ? 1.0 / I.z : 0\n    );\n    this.updateInertiaWorld(true);\n};\n\n/**\n * Get world velocity of a point in the body.\n * @method getVelocityAtWorldPoint\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3} The result vector.\n */\nBody.prototype.getVelocityAtWorldPoint = function(worldPoint, result){\n    var r = new Vec3();\n    worldPoint.vsub(this.position, r);\n    this.angularVelocity.cross(r, result);\n    this.velocity.vadd(result, result);\n    return result;\n};\n\nvar torque = new Vec3();\nvar invI_tau_dt = new Vec3();\nvar w = new Quaternion();\nvar wq = new Quaternion();\n\n/**\n * Move the body forward in time.\n * @param {number} dt Time step\n * @param {boolean} quatNormalize Set to true to normalize the body quaternion\n * @param {boolean} quatNormalizeFast If the quaternion should be normalized using \"fast\" quaternion normalization\n */\nBody.prototype.integrate = function(dt, quatNormalize, quatNormalizeFast){\n\n    // Save previous position\n    this.previousPosition.copy(this.position);\n    this.previousQuaternion.copy(this.quaternion);\n\n    if(!(this.type === Body.DYNAMIC || this.type === Body.KINEMATIC) || this.sleepState === Body.SLEEPING){ // Only for dynamic\n        return;\n    }\n\n    var velo = this.velocity,\n        angularVelo = this.angularVelocity,\n        pos = this.position,\n        force = this.force,\n        torque = this.torque,\n        quat = this.quaternion,\n        invMass = this.invMass,\n        invInertia = this.invInertiaWorld,\n        linearFactor = this.linearFactor;\n\n    var iMdt = invMass * dt;\n    velo.x += force.x * iMdt * linearFactor.x;\n    velo.y += force.y * iMdt * linearFactor.y;\n    velo.z += force.z * iMdt * linearFactor.z;\n\n    var e = invInertia.elements;\n    var angularFactor = this.angularFactor;\n    var tx = torque.x * angularFactor.x;\n    var ty = torque.y * angularFactor.y;\n    var tz = torque.z * angularFactor.z;\n    angularVelo.x += dt * (e[0] * tx + e[1] * ty + e[2] * tz);\n    angularVelo.y += dt * (e[3] * tx + e[4] * ty + e[5] * tz);\n    angularVelo.z += dt * (e[6] * tx + e[7] * ty + e[8] * tz);\n\n    // Use new velocity  - leap frog\n    pos.x += velo.x * dt;\n    pos.y += velo.y * dt;\n    pos.z += velo.z * dt;\n\n    quat.integrate(this.angularVelocity, dt, this.angularFactor, quat);\n\n    if(quatNormalize){\n        if(quatNormalizeFast){\n            quat.normalizeFast();\n        } else {\n            quat.normalize();\n        }\n    }\n\n    this.aabbNeedsUpdate = true;\n\n    // Update world inertia\n    this.updateInertiaWorld();\n};\n","module.exports = Box;\n\nvar Shape = require('./Shape');\nvar Vec3 = require('../math/Vec3');\nvar ConvexPolyhedron = require('./ConvexPolyhedron');\n\n/**\n * A 3d box shape.\n * @class Box\n * @constructor\n * @param {Vec3} halfExtents\n * @author schteppe\n * @extends Shape\n */\nfunction Box(halfExtents){\n    Shape.call(this);\n\n    this.type = Shape.types.BOX;\n\n    /**\n     * @property halfExtents\n     * @type {Vec3}\n     */\n    this.halfExtents = halfExtents;\n\n    /**\n     * Used by the contact generator to make contacts with other convex polyhedra for example\n     * @property convexPolyhedronRepresentation\n     * @type {ConvexPolyhedron}\n     */\n    this.convexPolyhedronRepresentation = null;\n\n    this.updateConvexPolyhedronRepresentation();\n    this.updateBoundingSphereRadius();\n}\nBox.prototype = new Shape();\nBox.prototype.constructor = Box;\n\n/**\n * Updates the local convex polyhedron representation used for some collisions.\n * @method updateConvexPolyhedronRepresentation\n */\nBox.prototype.updateConvexPolyhedronRepresentation = function(){\n    var sx = this.halfExtents.x;\n    var sy = this.halfExtents.y;\n    var sz = this.halfExtents.z;\n    var V = Vec3;\n\n    var vertices = [\n        new V(-sx,-sy,-sz),\n        new V( sx,-sy,-sz),\n        new V( sx, sy,-sz),\n        new V(-sx, sy,-sz),\n        new V(-sx,-sy, sz),\n        new V( sx,-sy, sz),\n        new V( sx, sy, sz),\n        new V(-sx, sy, sz)\n    ];\n\n    var indices = [\n        [3,2,1,0], // -z\n        [4,5,6,7], // +z\n        [5,4,0,1], // -y\n        [2,3,7,6], // +y\n        [0,4,7,3], // -x\n        [1,2,6,5], // +x\n    ];\n\n    var axes = [\n        new V(0, 0, 1),\n        new V(0, 1, 0),\n        new V(1, 0, 0)\n    ];\n\n    var h = new ConvexPolyhedron(vertices, indices);\n    this.convexPolyhedronRepresentation = h;\n    h.material = this.material;\n};\n\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\nBox.prototype.calculateLocalInertia = function(mass,target){\n    target = target || new Vec3();\n    Box.calculateInertia(this.halfExtents, mass, target);\n    return target;\n};\n\nBox.calculateInertia = function(halfExtents,mass,target){\n    var e = halfExtents;\n    target.x = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.z*2*e.z );\n    target.y = 1.0 / 12.0 * mass * (   2*e.x*2*e.x + 2*e.z*2*e.z );\n    target.z = 1.0 / 12.0 * mass * (   2*e.y*2*e.y + 2*e.x*2*e.x );\n};\n\n/**\n * Get the box 6 side normals\n * @method getSideNormals\n * @param {array}      sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\n * @param {Quaternion} quat             Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\n * @return {array}\n */\nBox.prototype.getSideNormals = function(sixTargetVectors,quat){\n    var sides = sixTargetVectors;\n    var ex = this.halfExtents;\n    sides[0].set(  ex.x,     0,     0);\n    sides[1].set(     0,  ex.y,     0);\n    sides[2].set(     0,     0,  ex.z);\n    sides[3].set( -ex.x,     0,     0);\n    sides[4].set(     0, -ex.y,     0);\n    sides[5].set(     0,     0, -ex.z);\n\n    if(quat!==undefined){\n        for(var i=0; i!==sides.length; i++){\n            quat.vmult(sides[i],sides[i]);\n        }\n    }\n\n    return sides;\n};\n\nBox.prototype.volume = function(){\n    return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\n};\n\nBox.prototype.updateBoundingSphereRadius = function(){\n    this.boundingSphereRadius = this.halfExtents.norm();\n};\n\nvar worldCornerTempPos = new Vec3();\nvar worldCornerTempNeg = new Vec3();\nBox.prototype.forEachWorldCorner = function(pos,quat,callback){\n\n    var e = this.halfExtents;\n    var corners = [[  e.x,  e.y,  e.z],\n                   [ -e.x,  e.y,  e.z],\n                   [ -e.x, -e.y,  e.z],\n                   [ -e.x, -e.y, -e.z],\n                   [  e.x, -e.y, -e.z],\n                   [  e.x,  e.y, -e.z],\n                   [ -e.x,  e.y, -e.z],\n                   [  e.x, -e.y,  e.z]];\n    for(var i=0; i<corners.length; i++){\n        worldCornerTempPos.set(corners[i][0],corners[i][1],corners[i][2]);\n        quat.vmult(worldCornerTempPos,worldCornerTempPos);\n        pos.vadd(worldCornerTempPos,worldCornerTempPos);\n        callback(worldCornerTempPos.x,\n                 worldCornerTempPos.y,\n                 worldCornerTempPos.z);\n    }\n};\n\nvar worldCornersTemp = [\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3(),\n    new Vec3()\n];\nBox.prototype.calculateWorldAABB = function(pos,quat,min,max){\n\n    var e = this.halfExtents;\n    worldCornersTemp[0].set(e.x, e.y, e.z);\n    worldCornersTemp[1].set(-e.x,  e.y, e.z);\n    worldCornersTemp[2].set(-e.x, -e.y, e.z);\n    worldCornersTemp[3].set(-e.x, -e.y, -e.z);\n    worldCornersTemp[4].set(e.x, -e.y, -e.z);\n    worldCornersTemp[5].set(e.x,  e.y, -e.z);\n    worldCornersTemp[6].set(-e.x,  e.y, -e.z);\n    worldCornersTemp[7].set(e.x, -e.y,  e.z);\n\n    var wc = worldCornersTemp[0];\n    quat.vmult(wc, wc);\n    pos.vadd(wc, wc);\n    max.copy(wc);\n    min.copy(wc);\n    for(var i=1; i<8; i++){\n        var wc = worldCornersTemp[i];\n        quat.vmult(wc, wc);\n        pos.vadd(wc, wc);\n        var x = wc.x;\n        var y = wc.y;\n        var z = wc.z;\n        if(x > max.x){\n            max.x = x;\n        }\n        if(y > max.y){\n            max.y = y;\n        }\n        if(z > max.z){\n            max.z = z;\n        }\n\n        if(x < min.x){\n            min.x = x;\n        }\n        if(y < min.y){\n            min.y = y;\n        }\n        if(z < min.z){\n            min.z = z;\n        }\n    }\n\n    // Get each axis max\n    // min.set(Infinity,Infinity,Infinity);\n    // max.set(-Infinity,-Infinity,-Infinity);\n    // this.forEachWorldCorner(pos,quat,function(x,y,z){\n    //     if(x > max.x){\n    //         max.x = x;\n    //     }\n    //     if(y > max.y){\n    //         max.y = y;\n    //     }\n    //     if(z > max.z){\n    //         max.z = z;\n    //     }\n\n    //     if(x < min.x){\n    //         min.x = x;\n    //     }\n    //     if(y < min.y){\n    //         min.y = y;\n    //     }\n    //     if(z < min.z){\n    //         min.z = z;\n    //     }\n    // });\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","module.exports = {\n  'velocity':   require('./velocity'),\n\n  registerAll: function (AFRAME) {\n    if (this._registered) return;\n\n    AFRAME = AFRAME || window.AFRAME;\n\n    if (!AFRAME.components['velocity'])    AFRAME.registerComponent('velocity',   this.velocity);\n\n    this._registered = true;\n  }\n};\n","function Utils(){}\n\nmodule.exports = Utils;\n\n/**\n * Extend an options object with default values.\n * @static\n * @method defaults\n * @param  {object} options The options object. May be falsy: in this case, a new object is created and returned.\n * @param  {object} defaults An object containing default values.\n * @return {object} The modified options object.\n */\nUtils.defaults = function(options, defaults){\n    options = options || {};\n\n    for(var key in defaults){\n        if(!(key in options)){\n            options[key] = defaults[key];\n        }\n    }\n\n    return options;\n};\n","/**\n * 3dof (Gear VR, Daydream) controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('trackpad-controls', {\n  schema: {\n    enabled: { default: true }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.zVel      = 0;\n    this.bindMethods();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.addEventListener('axismove', this.onAxisMove);\n    sceneEl.addEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.addEventListener('trackpadtouchend', this.onTouchEnd);\n\n  },\n\n  removeEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.removeEventListener('axismove', this.onAxisMove);\n    sceneEl.removeEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadtouchend', this.onTouchEnd);\n\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -this.zVel : 1;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onAxisMove = this.onAxisMove.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    this.isMoving = true;\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    this.isMoving = false;\n    e.preventDefault();\n  },\n\n  onAxisMove: function(e){\n    var axis_data = e.detail.axis;\n\n    if(axis_data[1] < 0){\n      this.zVel = 1;\n    }\n\n    if(axis_data[1] > 0){\n      this.zVel = -1;\n    }\n\n  }\n\n});\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var vg=module.exports={VERSION:\"0.1.1\",PI:Math.PI,TAU:2*Math.PI,DEG_TO_RAD:.0174532925,RAD_TO_DEG:57.2957795,SQRT3:Math.sqrt(3),TILE:\"tile\",ENT:\"entity\",STR:\"structure\",HEX:\"hex\",SQR:\"square\",ABS:\"abstract\"};vg.Board=function(e,t){if(!e)throw new Error(\"You must pass in a grid system for the board to use.\");this.tiles=[],this.tileGroup=null,this.group=new THREE.Object3D,this.grid=null,this.overlay=null,this.finder=new vg.AStarFinder(t),vg.Loader.init(),this.setGrid(e)},vg.Board.prototype={setEntityOnTile:function(e,t){var i=this.grid.cellToPixel(t.cell);e.position.copy(i),e.position.y+=e.heightOffset||0,e.tile&&(e.tile.entity=null),e.tile=t,t.entity=e},addTile:function(e){var t=this.tiles.indexOf(e);-1===t&&(this.tiles.push(e),this.snapTileToGrid(e),e.position.y=0,this.tileGroup.add(e.mesh),this.grid.add(e.cell),e.cell.tile=e)},removeTile:function(e){if(e){var t=this.tiles.indexOf(e);this.grid.remove(e.cell),-1!==t&&this.tiles.splice(t,1),e.dispose()}},removeAllTiles:function(){if(this.tileGroup)for(var e=this.tileGroup.children,t=0;t<e.length;t++)this.tileGroup.remove(e[t])},getTileAtCell:function(e){var t=this.grid.cellToHash(e);return e.tile||(\"undefined\"!=typeof this.grid.cells[t]?this.grid.cells[t].tile:null)},snapToGrid:function(e){var t=this.grid.pixelToCell(e);e.copy(this.grid.cellToPixel(t))},snapTileToGrid:function(e){if(e.cell)e.position.copy(this.grid.cellToPixel(e.cell));else{var t=this.grid.pixelToCell(e.position);e.position.copy(this.grid.cellToPixel(t))}return e},getRandomTile:function(){var e=vg.Tools.randomInt(0,this.tiles.length-1);return this.tiles[e]},findPath:function(e,t,i){return this.finder.findPath(e.cell,t.cell,i,this.grid)},setGrid:function(e){this.group.remove(this.tileGroup),this.grid&&e!==this.grid&&(this.removeAllTiles(),this.tiles.forEach(function(e){this.grid.remove(e.cell),e.dispose()}),this.grid.dispose()),this.grid=e,this.tiles=[],this.tileGroup=new THREE.Object3D,this.group.add(this.tileGroup)},generateOverlay:function(e){var t=new THREE.LineBasicMaterial({color:0,opacity:.3});this.overlay&&this.group.remove(this.overlay),this.overlay=new THREE.Object3D,this.grid.generateOverlay(e,this.overlay,t),this.group.add(this.overlay)},generateTilemap:function(e){this.reset();var t=this.grid.generateTiles(e);this.tiles=t,this.tileGroup=new THREE.Object3D;for(var i=0;i<t.length;i++)this.tileGroup.add(t[i].mesh);this.group.add(this.tileGroup)},reset:function(){this.removeAllTiles(),this.tileGroup&&this.group.remove(this.tileGroup)}},vg.Board.prototype.constructor=vg.Board,vg.Cell=function(e,t,i,s){this.q=e||0,this.r=t||0,this.s=i||0,this.h=s||1,this.tile=null,this.userData={},this.walkable=!0,this._calcCost=0,this._priority=0,this._visited=!1,this._parent=null,this.uniqueID=vg.LinkedList.generateID()},vg.Cell.prototype={set:function(e,t,i){return this.q=e,this.r=t,this.s=i,this},copy:function(e){return this.q=e.q,this.r=e.r,this.s=e.s,this.h=e.h,this.tile=e.tile||null,this.userData=e.userData||{},this.walkable=e.walkable,this},add:function(e){return this.q+=e.q,this.r+=e.r,this.s+=e.s,this},equals:function(e){return this.q===e.q&&this.r===e.r&&this.s===e.s}},vg.Cell.prototype.constructor=vg.Cell,vg.HexGrid=function(e){e=e||{},this.type=vg.HEX,this.size=5,this.cellSize=\"undefined\"==typeof e.cellSize?10:e.cellSize,this.cells={},this.numCells=0,this.extrudeSettings=null,this.autogenerated=!1;var t,i=[];for(t=0;6>t;t++)i.push(this._createVertex(t));for(this.cellShape=new THREE.Shape,this.cellShape.moveTo(i[0].x,i[0].y),t=1;6>t;t++)this.cellShape.lineTo(i[t].x,i[t].y);this.cellShape.lineTo(i[0].x,i[0].y),this.cellShape.autoClose=!0,this.cellGeo=new THREE.Geometry,this.cellGeo.vertices=i,this.cellGeo.verticesNeedUpdate=!0,this.cellShapeGeo=new THREE.ShapeGeometry(this.cellShape),this._cellWidth=2*this.cellSize,this._cellLength=.5*vg.SQRT3*this._cellWidth,this._hashDelimeter=\".\",this._directions=[new vg.Cell(1,-1,0),new vg.Cell(1,0,-1),new vg.Cell(0,1,-1),new vg.Cell(-1,1,0),new vg.Cell(-1,0,1),new vg.Cell(0,-1,1)],this._diagonals=[new vg.Cell(2,-1,-1),new vg.Cell(1,1,-2),new vg.Cell(-1,2,-1),new vg.Cell(-2,1,1),new vg.Cell(-1,-1,2),new vg.Cell(1,-2,1)],this._list=[],this._vec3=new THREE.Vector3,this._cel=new vg.Cell,this._conversionVec=new THREE.Vector3,this._geoCache=[],this._matCache=[]},vg.HexGrid.TWO_THIRDS=2/3,vg.HexGrid.prototype={cellToPixel:function(e){return this._vec3.x=e.q*this._cellWidth*.75,this._vec3.y=e.h,this._vec3.z=-((e.s-e.r)*this._cellLength*.5),this._vec3},pixelToCell:function(e){var t=e.x*(vg.HexGrid.TWO_THIRDS/this.cellSize),i=(-e.x/3+vg.SQRT3/3*e.z)/this.cellSize;return this._cel.set(t,i,-t-i),this._cubeRound(this._cel)},getCellAt:function(e){var t=e.x*(vg.HexGrid.TWO_THIRDS/this.cellSize),i=(-e.x/3+vg.SQRT3/3*e.z)/this.cellSize;return this._cel.set(t,i,-t-i),this._cubeRound(this._cel),this.cells[this.cellToHash(this._cel)]},getNeighbors:function(e,t,i){var s,n,l=this._directions.length;for(this._list.length=0,s=0;l>s;s++)this._cel.copy(e),this._cel.add(this._directions[s]),n=this.cells[this.cellToHash(this._cel)],!n||i&&!i(e,n)||this._list.push(n);if(t)for(s=0;l>s;s++)this._cel.copy(e),this._cel.add(this._diagonals[s]),n=this.cells[this.cellToHash(this._cel)],!n||i&&!i(e,n)||this._list.push(n);return this._list},getRandomCell:function(){var e,t=0,i=vg.Tools.randomInt(0,this.numCells);for(e in this.cells){if(t===i)return this.cells[e];t++}return this.cells[e]},cellToHash:function(e){return e.q+this._hashDelimeter+e.r+this._hashDelimeter+e.s},distance:function(e,t){var i=Math.max(Math.abs(e.q-t.q),Math.abs(e.r-t.r),Math.abs(e.s-t.s));return i+=t.h-e.h},clearPath:function(){var e,t;for(e in this.cells)t=this.cells[e],t._calcCost=0,t._priority=0,t._parent=null,t._visited=!1},traverse:function(e){var t;for(t in this.cells)e(this.cells[t])},generateTile:function(e,t,i){var s=Math.abs(e.h);1>s&&(s=1);var n=this._geoCache[s];n||(this.extrudeSettings.amount=s,n=new THREE.ExtrudeGeometry(this.cellShape,this.extrudeSettings),this._geoCache[s]=n);var l=new vg.Tile({size:this.cellSize,scale:t,cell:e,geometry:n,material:i});return e.tile=l,l},generateTiles:function(e){e=e||{};var t=[],i={tileScale:.95,cellSize:this.cellSize,material:null,extrudeSettings:{amount:1,bevelEnabled:!0,bevelSegments:1,steps:1,bevelSize:.5,bevelThickness:.5}};i=vg.Tools.merge(i,e),this.cellSize=i.cellSize,this._cellWidth=2*this.cellSize,this._cellLength=.5*vg.SQRT3*this._cellWidth,this.autogenerated=!0,this.extrudeSettings=i.extrudeSettings;var s,n,l;for(s in this.cells)l=this.cells[s],n=this.generateTile(l,i.tileScale,i.material),n.position.copy(this.cellToPixel(l)),n.position.y=0,t.push(n);return t},generateTilePoly:function(e){e||(e=new THREE.MeshBasicMaterial({color:2405631}));var t=new THREE.Mesh(this.cellShapeGeo,e);return this._vec3.set(1,0,0),t.rotateOnAxis(this._vec3,vg.PI/2),t},generate:function(e){e=e||{},this.size=\"undefined\"==typeof e.size?this.size:e.size;var t,i,s,n;for(t=-this.size;t<this.size+1;t++)for(i=-this.size;i<this.size+1;i++)s=-t-i,Math.abs(t)<=this.size&&Math.abs(i)<=this.size&&Math.abs(s)<=this.size&&(n=new vg.Cell(t,i,s),this.add(n))},generateOverlay:function(e,t,i){var s,n,l,r=this.cellShape.createPointsGeometry();for(s=-e;e+1>s;s++)for(n=-e;e+1>n;n++)if(l=-s-n,Math.abs(s)<=e&&Math.abs(n)<=e&&Math.abs(l)<=e){this._cel.set(s,n,l);var h=new THREE.Line(r,i);h.position.copy(this.cellToPixel(this._cel)),h.rotation.x=90*vg.DEG_TO_RAD,t.add(h)}},add:function(e){var t=this.cellToHash(e);if(!this.cells[t])return this.cells[t]=e,this.numCells++,e},remove:function(e){var t=this.cellToHash(e);this.cells[t]&&(delete this.cells[t],this.numCells--)},dispose:function(){this.cells=null,this.numCells=0,this.cellShape=null,this.cellGeo.dispose(),this.cellGeo=null,this.cellShapeGeo.dispose(),this.cellShapeGeo=null,this._list=null,this._vec3=null,this._conversionVec=null,this._geoCache=null,this._matCache=null},load:function(e,t,i){var s=this;vg.Tools.getJSON({url:e,callback:function(e){s.fromJSON(e),t.call(i||null,e)},cache:!1,scope:s})},fromJSON:function(e){var t,i,s=e.cells;for(this.cells={},this.numCells=0,this.size=e.size,this.cellSize=e.cellSize,this._cellWidth=2*this.cellSize,this._cellLength=.5*vg.SQRT3*this._cellWidth,this.extrudeSettings=e.extrudeSettings,this.autogenerated=e.autogenerated,t=0;t<s.length;t++)i=new vg.Cell,i.copy(s[t]),this.add(i)},toJSON:function(){var e,t,i={size:this.size,cellSize:this.cellSize,extrudeSettings:this.extrudeSettings,autogenerated:this.autogenerated},s=[];for(t in this.cells)e=this.cells[t],s.push({q:e.q,r:e.r,s:e.s,h:e.h,walkable:e.walkable,userData:e.userData});return i.cells=s,i},_createVertex:function(e){var t=vg.TAU/6*e;return new THREE.Vector3(this.cellSize*Math.cos(t),this.cellSize*Math.sin(t),0)},_cubeRound:function(e){var t=Math.round(e.q),i=Math.round(e.r),s=Math.round(e.s),n=Math.abs(t-e.q),l=Math.abs(i-e.r),r=Math.abs(s-e.s);return n>l&&n>r?t=-i-s:l>r?i=-t-s:s=-t-i,this._cel.set(t,i,s)}},vg.HexGrid.prototype.constructor=vg.HexGrid,vg.SqrGrid=function(e){e=e||{},this.type=vg.SQR,this.size=5,this.cellSize=\"undefined\"==typeof e.cellSize?10:e.cellSize,this.cells={},this.numCells=0,this.extrudeSettings=null,this.autogenerated=!1;var t=[];t.push(new THREE.Vector3),t.push(new THREE.Vector3(-this.cellSize,this.cellSize)),t.push(new THREE.Vector3(this.cellSize,this.cellSize)),t.push(new THREE.Vector3(this.cellSize,-this.cellSize)),this.cellShape=new THREE.Shape,this.cellShape.moveTo(-this.cellSize,-this.cellSize),this.cellShape.lineTo(-this.cellSize,this.cellSize),this.cellShape.lineTo(this.cellSize,this.cellSize),this.cellShape.lineTo(this.cellSize,-this.cellSize),this.cellShape.lineTo(-this.cellSize,-this.cellSize),this.cellGeo=new THREE.Geometry,this.cellGeo.vertices=t,this.cellGeo.verticesNeedUpdate=!0,this.cellShapeGeo=new THREE.ShapeGeometry(this.cellShape),this._fullCellSize=2*this.cellSize,this._hashDelimeter=\".\",this._directions=[new vg.Cell(1,0,0),new vg.Cell(0,-1,0),new vg.Cell(-1,0,0),new vg.Cell(0,1,0)],this._diagonals=[new vg.Cell(-1,-1,0),new vg.Cell(-1,1,0),new vg.Cell(1,1,0),new vg.Cell(1,-1,0)],this._list=[],this._vec3=new THREE.Vector3,this._cel=new vg.Cell,this._conversionVec=new THREE.Vector3,this._geoCache=[],this._matCache=[]},vg.SqrGrid.prototype={cellToPixel:function(e){return this._vec3.x=e.q*this._fullCellSize,this._vec3.y=e.h,this._vec3.z=e.r*this._fullCellSize,this._vec3},pixelToCell:function(e){var t=Math.round(e.x/this._fullCellSize),i=Math.round(e.z/this._fullCellSize);return this._cel.set(t,i,0)},getCellAt:function(e){var t=Math.round(e.x/this._fullCellSize),i=Math.round(e.z/this._fullCellSize);return this._cel.set(t,i),this.cells[this.cellToHash(this._cel)]},getNeighbors:function(e,t,i){var s,n,l=this._directions.length;for(this._list.length=0,s=0;l>s;s++)this._cel.copy(e),this._cel.add(this._directions[s]),n=this.cells[this.cellToHash(this._cel)],!n||i&&!i(e,n)||this._list.push(n);if(t)for(s=0;l>s;s++)this._cel.copy(e),this._cel.add(this._diagonals[s]),n=this.cells[this.cellToHash(this._cel)],!n||i&&!i(e,n)||this._list.push(n);return this._list},getRandomCell:function(){var e,t=0,i=vg.Tools.randomInt(0,this.numCells);for(e in this.cells){if(t===i)return this.cells[e];t++}return this.cells[e]},cellToHash:function(e){return e.q+this._hashDelimeter+e.r},distance:function(e,t){var i=Math.max(Math.abs(e.q-t.q),Math.abs(e.r-t.r));return i+=t.h-e.h},clearPath:function(){var e,t;for(e in this.cells)t=this.cells[e],t._calcCost=0,t._priority=0,t._parent=null,t._visited=!1},traverse:function(e){var t;for(t in this.cells)e(this.cells[t])},generateTile:function(e,t,i){var s=Math.abs(e.h);1>s&&(s=1);var n=this._geoCache[s];n||(this.extrudeSettings.amount=s,n=new THREE.ExtrudeGeometry(this.cellShape,this.extrudeSettings),this._geoCache[s]=n);var l=new vg.Tile({size:this.cellSize,scale:t,cell:e,geometry:n,material:i});return e.tile=l,l},generateTiles:function(e){e=e||{};var t=[],i={tileScale:.95,cellSize:this.cellSize,material:null,extrudeSettings:{amount:1,bevelEnabled:!0,bevelSegments:1,steps:1,bevelSize:.5,bevelThickness:.5}};i=vg.Tools.merge(i,e),this.cellSize=i.cellSize,this._fullCellSize=2*this.cellSize,this.autogenerated=!0,this.extrudeSettings=i.extrudeSettings;var s,n,l;for(s in this.cells)l=this.cells[s],n=this.generateTile(l,i.tileScale,i.material),n.position.copy(this.cellToPixel(l)),n.position.y=0,t.push(n);return t},generateTilePoly:function(e){e||(e=new THREE.MeshBasicMaterial({color:2405631}));var t=new THREE.Mesh(this.cellShapeGeo,e);return this._vec3.set(1,0,0),t.rotateOnAxis(this._vec3,vg.PI/2),t},generate:function(e){e=e||{},this.size=\"undefined\"==typeof e.size?this.size:e.size;var t,i,s,n=Math.ceil(this.size/2);for(t=-n;n>t;t++)for(i=-n;n>i;i++)s=new vg.Cell(t,i+1),this.add(s)},generateOverlay:function(e,t,i){var s,n,l=Math.ceil(e/2);for(s=-l;l>s;s++)for(n=-l;l>n;n++){this._cel.set(s,n);var r=new THREE.Line(this.cellGeo,i);r.position.copy(this.cellToPixel(this._cel)),r.rotation.x=90*vg.DEG_TO_RAD,t.add(r)}},add:function(e){var t=this.cellToHash(e);if(!this.cells[t])return this.cells[t]=e,this.numCells++,e},remove:function(e){var t=this.cellToHash(e);this.cells[t]&&(delete this.cells[t],this.numCells--)},dispose:function(){this.cells=null,this.numCells=0,this.cellShape=null,this.cellGeo.dispose(),this.cellGeo=null,this.cellShapeGeo.dispose(),this.cellShapeGeo=null,this._list=null,this._vec3=null,this._conversionVec=null,this._geoCache=null,this._matCache=null},load:function(e,t,i){vg.Tools.getJSON({url:e,callback:function(e){this.fromJSON(e),t.call(i||null,e)},cache:!1,scope:this})},fromJSON:function(e){var t,i,s=e.cells;for(this.cells={},this.numCells=0,this.size=e.size,this.cellSize=e.cellSize,this._fullCellSize=2*this.cellSize,this.extrudeSettings=e.extrudeSettings,this.autogenerated=e.autogenerated,t=0;t<s.length;t++)i=new vg.Cell,i.copy(s[t]),this.add(i)},toJSON:function(){var e,t,i={size:this.size,cellSize:this.cellSize,extrudeSettings:this.extrudeSettings,autogenerated:this.autogenerated},s=[];for(t in this.cells)e=this.cells[t],s.push({q:e.q,r:e.r,s:e.s,h:e.h,walkable:e.walkable,userData:e.userData});return i.cells=s,i}},vg.SqrGrid.prototype.constructor=vg.SqrGrid,vg.Tile=function(e){e=e||{};var t={cell:null,geometry:null,material:null};if(t=vg.Tools.merge(t,e),!t.cell||!t.geometry)throw new Error(\"Missing vg.Tile configuration\");this.cell=t.cell,this.cell.tile&&this.cell.tile!==this&&this.cell.tile.dispose(),this.cell.tile=this,this.uniqueID=vg.Tools.generateID(),this.geometry=t.geometry,this.material=t.material,this.material||(this.material=new THREE.MeshPhongMaterial({color:vg.Tools.randomizeRGB(\"30, 30, 30\",13)})),this.objectType=vg.TILE,this.entity=null,this.userData={},this.selected=!1,this.highlight=\"0x0084cc\",this.mesh=new THREE.Mesh(this.geometry,this.material),this.mesh.userData.structure=this,this.position=this.mesh.position,this.rotation=this.mesh.rotation,this.rotation.x=-90*vg.DEG_TO_RAD,this.mesh.scale.set(t.scale,t.scale,1),this.material.emissive?this._emissive=this.material.emissive.getHex():this._emissive=null},vg.Tile.prototype={select:function(){return this.material.emissive&&this.material.emissive.setHex(this.highlight),this.selected=!0,this},deselect:function(){return null!==this._emissive&&this.material.emissive&&this.material.emissive.setHex(this._emissive),this.selected=!1,this},toggle:function(){return this.selected?this.deselect():this.select(),this},dispose:function(){this.cell&&this.cell.tile&&(this.cell.tile=null),this.cell=null,this.position=null,this.rotation=null,this.mesh.parent&&this.mesh.parent.remove(this.mesh),this.mesh.userData.structure=null,this.mesh=null,this.material=null,this.userData=null,this.entity=null,this.geometry=null,this._emissive=null}},vg.Tile.prototype.constructor=vg.Tile,function(){var e=function(){this.obj=null,this.next=null,this.prev=null,this.free=!0},t=function(){this.first=null,this.last=null,this.length=0,this.objToNodeMap={},this.uniqueID=Date.now()+\"\"+Math.floor(1e3*Math.random()),this.sortArray=[]};t.generateID=function(){return Math.random().toString(36).slice(2)+Date.now()},t.prototype={getNode:function(e){return this.objToNodeMap[e.uniqueID]},addNode:function(i){var s=new e;if(!i.uniqueID)try{i.uniqueID=t.generateID()}catch(n){return console.error(\"[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier\"),null}return s.obj=i,s.free=!1,this.objToNodeMap[i.uniqueID]=s,s},swapObjects:function(e,t){this.objToNodeMap[e.obj.uniqueID]=null,this.objToNodeMap[t.uniqueID]=e,e.obj=t},add:function(e){var t=this.objToNodeMap[e.uniqueID];if(t){if(t.free===!1)return;t.obj=e,t.free=!1,t.next=null,t.prev=null}else t=this.addNode(e);if(this.first){if(!this.last)throw new Error(\"[LinkedList.add] No last in the list -- that shouldn't happen here\");this.last.next=t,t.prev=this.last,this.last=t,t.next=null}else this.first=t,this.last=t,t.next=null,t.prev=null;this.length++,this.showDebug&&this.dump(\"after add\")},has:function(e){return!!this.objToNodeMap[e.uniqueID]},moveUp:function(e){this.dump(\"before move up\");var t=this.getNode(e);if(!t)throw\"Oops, trying to move an object that isn't in the list\";if(t.prev){var i=t.prev,s=i.prev;t==this.last&&(this.last=i);var n=t.next;s&&(s.next=t),t.next=i,t.prev=i.prev,i.next=n,i.prev=t,this.first==i&&(this.first=t)}},moveDown:function(e){var t=this.getNode(e);if(!t)throw\"Oops, trying to move an object that isn't in the list\";if(t.next){var i=t.next;this.moveUp(i.obj),this.last==i&&(this.last=t)}},sort:function(e){var t,i,s=this.sortArray,n=this.first;for(s.length=0;n;)s.push(n.obj),n=n.next;for(this.clear(),s.sort(e),i=s.length,t=0;i>t;t++)this.add(s[t])},remove:function(e){var t=this.getNode(e);return!t||t.free?!1:(t.prev&&(t.prev.next=t.next),t.next&&(t.next.prev=t.prev),t.prev||(this.first=t.next),t.next||(this.last=t.prev),t.free=!0,t.prev=null,t.next=null,this.length--,!0)},shift:function(){var e=this.first;return 0===this.length?null:(e.prev&&(e.prev.next=e.next),e.next&&(e.next.prev=e.prev),this.first=e.next,e.next||(this.last=null),e.free=!0,e.prev=null,e.next=null,this.length--,e.obj)},pop:function(){var e=this.last;return 0===this.length?null:(e.prev&&(e.prev.next=e.next),e.next&&(e.next.prev=e.prev),this.last=e.prev,e.prev||(this.first=null),e.free=!0,e.prev=null,e.next=null,this.length--,e.obj)},concat:function(e){for(var t=e.first;t;)this.add(t.obj),t=t.next},clear:function(){for(var e=this.first;e;)e.free=!0,e=e.next;this.first=null,this.length=0},dispose:function(){for(var e=this.first;e;)e.obj=null,e=e.next;this.first=null,this.objToNodeMap=null},dump:function(e){console.log(\"====================\"+e+\"=====================\");for(var t=this.first;t;)console.log(\"{\"+t.obj.toString()+\"} previous=\"+(t.prev?t.prev.obj:\"NULL\")),t=t.next();console.log(\"===================================\"),console.log(\"Last: {\"+(this.last?this.last.obj:\"NULL\")+\"} First: {\"+(this.first?this.first.obj:\"NULL\")+\"}\")}},t.prototype.constructor=t,vg.LinkedList=t}(),function(){var e=function(e,t,i,s,n){this._listener=t,this.isOnce=i,this.context=s,this.signal=e,this._priority=n||0};e.prototype={active:!0,params:null,execute:function(e){var t,i;return this.active&&this._listener&&(i=this.params?this.params.concat(e):e,t=this._listener.apply(this.context,i),this.isOnce&&this.detach()),t},detach:function(){return this.isBound()?this.signal.remove(this._listener,this.context):null},isBound:function(){return!!this.signal&&!!this._listener},_destroy:function(){delete this.signal,delete this._listener,delete this.context},toString:function(){return\"[SignalBinding isOnce:\"+this.isOnce+\", isBound:\"+this.isBound()+\", active:\"+this.active+\"]\"}},e.prototype.constructor=e;var t=function(){this._bindings=[],this._prevParams=null;var e=this;this.dispatch=function(){t.prototype.dispatch.apply(e,arguments)}};t.prototype={memorize:!1,_shouldPropagate:!0,active:!0,validateListener:function(e,t){if(\"function\"!=typeof e)throw new Error(\"Signal: listener is a required param of {fn}() and should be a Function.\".replace(\"{fn}\",t))},_registerListener:function(t,i,s,n){var l,r=this._indexOfListener(t,s);if(-1!==r){if(l=this._bindings[r],l.isOnce!==i)throw new Error(\"You cannot add\"+(i?\"\":\"Once\")+\"() then add\"+(i?\"Once\":\"\")+\"() the same listener without removing the relationship first.\")}else l=new e(this,t,i,s,n),this._addBinding(l);return this.memorize&&this._prevParams&&l.execute(this._prevParams),l},_addBinding:function(e){var t=this._bindings.length;do t--;while(this._bindings[t]&&e._priority<=this._bindings[t]._priority);this._bindings.splice(t+1,0,e)},_indexOfListener:function(e,t){for(var i,s=this._bindings.length;s--;)if(i=this._bindings[s],i._listener===e&&i.context===t)return s;return-1},has:function(e,t){return-1!==this._indexOfListener(e,t)},add:function(e,t,i){return this.validateListener(e,\"add\"),this._registerListener(e,!1,t,i)},addOnce:function(e,t,i){return this.validateListener(e,\"addOnce\"),this._registerListener(e,!0,t,i)},remove:function(e,t){this.validateListener(e,\"remove\");var i=this._indexOfListener(e,t);return-1!==i&&(this._bindings[i]._destroy(),this._bindings.splice(i,1)),e},removeAll:function(e){\"undefined\"==typeof e&&(e=null);for(var t=this._bindings.length;t--;)e?this._bindings[t].context===e&&(this._bindings[t]._destroy(),this._bindings.splice(t,1)):this._bindings[t]._destroy();e||(this._bindings.length=0)},getNumListeners:function(){return this._bindings.length},halt:function(){this._shouldPropagate=!1},dispatch:function(){if(this.active){var e,t=Array.prototype.slice.call(arguments),i=this._bindings.length;if(this.memorize&&(this._prevParams=t),i){e=this._bindings.slice(),this._shouldPropagate=!0;do i--;while(e[i]&&this._shouldPropagate&&e[i].execute(t)!==!1)}}},forget:function(){this._prevParams=null},dispose:function(){this.removeAll(),delete this._bindings,delete this._prevParams},toString:function(){return\"[Signal active:\"+this.active+\" numListeners:\"+this.getNumListeners()+\"]\"}},t.prototype.constructor=t,vg.Signal=t}(),vg.AStarFinder=function(e){e=e||{};var t={allowDiagonal:!1,heuristicFilter:null};t=vg.Tools.merge(t,e),this.allowDiagonal=t.allowDiagonal,this.heuristicFilter=t.heuristicFilter,this.list=new vg.LinkedList},vg.AStarFinder.prototype={findPath:function(e,t,i,s){var n,l,r,h,o,a;for(i=i||this.heuristicFilter,s.clearPath(),this.list.clear(),this.list.add(e);this.list.length>0;){if(this.list.sort(this.compare),n=this.list.shift(),n._visited=!0,n===t)return vg.PathUtil.backtrace(t);for(r=s.getNeighbors(n,this.allowDiagonal,i),o=0,a=r.length;a>o;o++)if(h=r[o],h.walkable&&(l=n._calcCost+s.distance(n,h),!h._visited||l<h._calcCost)){if(h._visited=!0,h._parent=n,h._calcCost=l,h._priority=l+s.distance(t,h),h===t)return vg.PathUtil.backtrace(t);this.list.add(h)}}return null},compare:function(e,t){return e._priority-t._priority}},vg.AStarFinder.prototype.constructor=vg.AStarFinder,vg.PathUtil={backtrace:function(e){for(var t=[e];e._parent;)e=e._parent,t.push(e);return t.reverse()},biBacktrace:function(e,t){var i=this.backtrace(e),s=this.backtrace(t);return i.concat(s.reverse())},pathLength:function(e){var t,i,s,n,l,r=0;for(t=1;t<e.length;++t)i=e[t-1],s=e[t],n=i[0]-s[0],l=i[1]-s[1],r+=Math.sqrt(n*n+l*l);return r},interpolate:function(e,t,i,s){var n,l,r,h,o,a,c=Math.abs,u=[];for(r=c(i-e),h=c(s-t),n=i>e?1:-1,l=s>t?1:-1,o=r-h;e!==i||t!==s;)u.push([e,t]),a=2*o,a>-h&&(o-=h,e+=n),r>a&&(o+=r,t+=l);return u},expandPath:function(e){var t,i,s,n,l,r,h=[],o=e.length;if(2>o)return h;for(l=0;o-1>l;++l)for(t=e[l],i=e[l+1],s=this.interpolate(t[0],t[1],i[0],i[1]),n=s.length,r=0;n-1>r;++r)h.push(s[r]);return h.push(e[o-1]),h},smoothenPath:function(e,t){var i,s,n,l,r,h,o,a,c,u,d,g,p=t.length,v=t[0][0],f=t[0][1],m=t[p-1][0],_=t[p-1][1];for(i=v,s=f,r=[[i,s]],o=2;p>o;++o){for(c=t[o],n=c[0],l=c[1],u=this.interpolate(i,s,n,l),g=!1,a=1;a<u.length;++a)if(d=u[a],!e.isWalkableAt(d[0],d[1])){g=!0;break}g&&(h=t[o-1],r.push(h),i=h[0],s=h[1])}return r.push([m,_]),r},compressPath:function(e){if(e.length<3)return e;var t,i,s,n,l,r,h=[],o=e[0][0],a=e[0][1],c=e[1][0],u=e[1][1],d=c-o,g=u-a;for(l=Math.sqrt(d*d+g*g),d/=l,g/=l,h.push([o,a]),r=2;r<e.length;r++)t=c,i=u,s=d,n=g,c=e[r][0],u=e[r][1],d=c-t,g=u-i,l=Math.sqrt(d*d+g*g),d/=l,g/=l,(d!==s||g!==n)&&h.push([t,i]);return h.push([c,u]),h}},vg.Loader={manager:null,imageLoader:null,crossOrigin:!1,init:function(e){this.crossOrigin=e||!1,this.manager=new THREE.LoadingManager(function(){},function(){},function(){console.warn(\"Error loading images\")}),this.imageLoader=new THREE.ImageLoader(this.manager),this.imageLoader.crossOrigin=e},loadTexture:function(e,t,i,s){var n=new THREE.Texture(null,t);return this.imageLoader.load(e,function(e){n.image=e,n.needsUpdate=!0,i&&i(n)},null,function(e){s&&s(e)}),n.sourceFile=e,n}},vg.MouseCaster=function(e,t,i){this.down=!1,this.rightDown=!1,this.pickedObject=null,this.selectedObject=null,this.allHits=null,this.active=!0,this.shift=!1,this.ctrl=!1,this.wheel=0,this.position=new THREE.Vector3,this.screenPosition=new THREE.Vector2,this.signal=new vg.Signal,this.group=e,this._camera=t,this._raycaster=new THREE.Raycaster,this._preventDefault=!1,i=i||document,i.addEventListener(\"mousemove\",this._onDocumentMouseMove.bind(this),!1),i.addEventListener(\"mousedown\",this._onDocumentMouseDown.bind(this),!1),i.addEventListener(\"mouseup\",this._onDocumentMouseUp.bind(this),!1),i.addEventListener(\"mousewheel\",this._onMouseWheel.bind(this),!1),i.addEventListener(\"DOMMouseScroll\",this._onMouseWheel.bind(this),!1)},vg.MouseCaster.OVER=\"over\",vg.MouseCaster.OUT=\"out\",vg.MouseCaster.DOWN=\"down\",vg.MouseCaster.UP=\"up\",vg.MouseCaster.CLICK=\"click\",vg.MouseCaster.WHEEL=\"wheel\",vg.MouseCaster.prototype={update:function(){if(this.active){this._raycaster.setFromCamera(this.screenPosition,this._camera);var e,t,i=this._raycaster.intersectObject(this.group,!0);i.length>0?(e=i[0],t=e.object.userData.structure,this.pickedObject!=t&&(this.pickedObject&&this.signal.dispatch(vg.MouseCaster.OUT,this.pickedObject),this.pickedObject=t,this.selectedObject=null,this.signal.dispatch(vg.MouseCaster.OVER,this.pickedObject)),this.position.copy(e.point),this.screenPosition.z=e.distance):(this.pickedObject&&this.signal.dispatch(vg.MouseCaster.OUT,this.pickedObject),this.pickedObject=null,this.selectedObject=null),this.allHits=i}},preventDefault:function(){this._preventDefault=!0},_onDocumentMouseDown:function(e){return e=e||window.event,e.preventDefault(),this._preventDefault?(this._preventDefault=!1,!1):(this.pickedObject&&(this.selectedObject=this.pickedObject),this.shift=e.shiftKey,this.ctrl=e.ctrlKey,this.down=1===e.which,this.rightDown=3===e.which,void this.signal.dispatch(vg.MouseCaster.DOWN,this.pickedObject))},_onDocumentMouseUp:function(e){return e.preventDefault(),this._preventDefault?(this._preventDefault=!1,!1):(this.shift=e.shiftKey,this.ctrl=e.ctrlKey,this.signal.dispatch(vg.MouseCaster.UP,this.pickedObject),this.selectedObject&&this.pickedObject&&this.selectedObject.uniqueID===this.pickedObject.uniqueID&&this.signal.dispatch(vg.MouseCaster.CLICK,this.pickedObject),this.down=1===e.which?!1:this.down,void(this.rightDown=3===e.which?!1:this.rightDown))},_onDocumentMouseMove:function(e){e.preventDefault(),this.screenPosition.x=e.clientX/window.innerWidth*2-1,this.screenPosition.y=2*-(e.clientY/window.innerHeight)+1},_onMouseWheel:function(e){if(this.active){e.preventDefault(),e.stopPropagation();var t=0;void 0!==e.wheelDelta?t=e.wheelDelta:void 0!==e.detail&&(t=-e.detail),t>0?this.wheel++:this.wheel--,this.signal.dispatch(vg.MouseCaster.WHEEL,this.wheel)}}},vg.MouseCaster.prototype.constructor=vg.MouseCaster,vg.Scene=function(e,t){var i={element:document.body,alpha:!0,antialias:!0,clearColor:\"#fff\",sortObjects:!1,fog:null,light:new THREE.DirectionalLight(16777215),lightPosition:null,cameraType:\"PerspectiveCamera\",cameraPosition:null,orthoZoom:4},s={minDistance:100,maxDistance:1e3,zoomSpeed:2,noZoom:!1};if(i=vg.Tools.merge(i,e),\"boolean\"!=typeof t&&(s=vg.Tools.merge(s,t)),this.renderer=new THREE.WebGLRenderer({alpha:i.alpha,antialias:i.antialias}),this.renderer.setClearColor(i.clearColor,0),this.renderer.sortObjects=i.sortObjects,this.width=window.innerWidth,this.height=window.innerHeight,this.orthoZoom=i.orthoZoom,this.container=new THREE.Scene,this.container.fog=i.fog,this.container.add(new THREE.AmbientLight(14540253)),i.lightPosition||i.light.position.set(-1,1,-1).normalize(),this.container.add(i.light),\"OrthographicCamera\"===i.cameraType){var n=window.innerWidth/this.orthoZoom,l=window.innerHeight/this.orthoZoom;this.camera=new THREE.OrthographicCamera(n/-2,n/2,l/2,l/-2,1,5e3)}else this.camera=new THREE.PerspectiveCamera(50,this.width/this.height,1,5e3);this.contolled=!!t,this.contolled&&(this.controls=new THREE.OrbitControls(this.camera,this.renderer.domElement),this.controls.minDistance=s.minDistance,this.controls.maxDistance=s.maxDistance,this.controls.zoomSpeed=s.zoomSpeed,this.controls.noZoom=s.noZoom),i.cameraPosition&&this.camera.position.copy(i.cameraPosition),window.addEventListener(\"resize\",function(){if(this.width=window.innerWidth,this.height=window.innerHeight,\"OrthographicCamera\"===this.camera.type){var e=this.width/this.orthoZoom,t=this.height/this.orthoZoom;this.camera.left=e/-2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=t/-2}else this.camera.aspect=this.width/this.height;this.camera.updateProjectionMatrix(),this.renderer.setSize(this.width,this.height)}.bind(this),!1),this.attachTo(i.element)},vg.Scene.prototype={attachTo:function(e){e.style.width=this.width+\"px\",e.style.height=this.height+\"px\",this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.width,this.height),e.appendChild(this.renderer.domElement)},add:function(e){this.container.add(e)},remove:function(e){this.container.remove(e)},render:function(){this.contolled&&this.controls.update(),this.renderer.render(this.container,this.camera)},updateOrthoZoom:function(){if(this.orthoZoom<=0)return void(this.orthoZoom=0);var e=this.width/this.orthoZoom,t=this.height/this.orthoZoom;this.camera.left=e/-2,this.camera.right=e/2,this.camera.top=t/2,this.camera.bottom=t/-2,this.camera.updateProjectionMatrix()},focusOn:function(e){this.camera.lookAt(e.position)}},vg.Scene.prototype.constructor=vg.Scene,vg.SelectionManager=function(e){this.mouse=e,this.onSelect=new vg.Signal,this.onDeselect=new vg.Signal,this.selected=null,this.toggleSelection=!1,this.mouse.signal.add(this.onMouse,this)},vg.SelectionManager.prototype={select:function(e,t){e&&(t=t||!0,this.selected!==e&&this.clearSelection(t),e.selected?this.toggleSelection&&(t&&this.onDeselect.dispatch(e),e.deselect()):e.select(),this.selected=e,t&&this.onSelect.dispatch(e))},clearSelection:function(e){e=e||!0,this.selected&&(e&&this.onDeselect.dispatch(this.selected),this.selected.deselect()),this.selected=null},onMouse:function(e,t){switch(e){case vg.MouseCaster.DOWN:t||this.clearSelection();break;case vg.MouseCaster.CLICK:this.select(t)}}},vg.SelectionManager.prototype.constructor=vg.SelectionManager,vg.Tools={clamp:function(e,t,i){return Math.max(t,Math.min(i,e))},sign:function(e){return e&&e/Math.abs(e)},random:function(e,t){return 1===arguments.length?Math.random()*e-.5*e:Math.random()*(t-e)+e},randomInt:function(e,t){return 1===arguments.length?Math.random()*e-.5*e|0:Math.random()*(t-e+1)+e|0},normalize:function(e,t,i){return(e-t)/(i-t)},getShortRotation:function(e){return e%=this.TAU,e>this.PI?e-=this.TAU:e<-this.PI&&(e+=this.TAU),e},generateID:function(){return Math.random().toString(36).slice(2)+Date.now()},isPlainObject:function(e){if(\"object\"!=typeof e||e.nodeType||e===e.window)return!1;try{if(e.constructor&&!Object.prototype.hasOwnProperty.call(e.constructor.prototype,\"isPrototypeOf\"))return!1}catch(t){return!1}return!0},merge:function(e,t){var i=this,s=Array.isArray(t),n=s&&[]||{};return s?(e=e||[],n=n.concat(e),t.forEach(function(t,s){\"undefined\"==typeof n[s]?n[s]=t:i.isPlainObject(t)?n[s]=i.merge(e[s],t):-1===e.indexOf(t)&&n.push(t)}),n):(e&&i.isPlainObject(e)&&Object.keys(e).forEach(function(t){n[t]=e[t];\n}),Object.keys(t).forEach(function(s){t[s]&&i.isPlainObject(t[s])&&e[s]?n[s]=i.merge(e[s],t[s]):n[s]=t[s]}),n)},now:function(){return window.nwf?window.nwf.system.Performance.elapsedTime:window.performance.now()},empty:function(e){for(;e.lastChild;)e.removeChild(e.lastChild)},radixSort:function(e,t,i,s){if(t=t||0,i=i||e.length,s=s||31,!(t>=i-1||0>s)){for(var n=t,l=i,r=1<<s;l>n;)if(e[n]&r){--l;var h=e[n];e[n]=e[l],e[l]=h}else++n;this.radixSort(e,t,l,s-1),this.radixSort(e,l,i,s-1)}},randomizeRGB:function(e,t){var i,s,n=e.split(\",\"),l=\"rgb(\";for(t=this.randomInt(t),i=0;3>i;i++)s=parseInt(n[i])+t,0>s?s=0:s>255&&(s=255),l+=s+\",\";return l=l.substring(0,l.length-1),l+=\")\"},getJSON:function(e){var t=new XMLHttpRequest,i=\"undefined\"==typeof e.cache?!1:e.cache,s=i?e.url:e.url+\"?t=\"+Math.floor(1e4*Math.random())+Date.now();t.onreadystatechange=function(){if(200===this.status){var t=null;try{t=JSON.parse(this.responseText)}catch(i){return}return void e.callback.call(e.scope||null,t)}0!==this.status&&console.warn(\"[Tools.getJSON] Error: \"+this.status+\" (\"+this.statusText+\") :: \"+e.url)},t.open(\"GET\",s,!0),t.setRequestHeader(\"Accept\",\"application/json\"),t.setRequestHeader(\"Content-Type\",\"application/json\"),t.send(\"\")}};\n//# sourceMappingURL=hex-grid.min.js.map\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","/**\n * json-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.JsonLoader, which typically\n * includes only a single mesh.\n *\n * Check the console for errors, if in doubt. You may need to use `object-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('json-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    loader = new THREE.JSONLoader();\n    if (data.crossorigin) loader.crossOrigin = data.crossorigin;\n    loader.load(data.src, (geometry, materials) => {\n\n      // Attempt to automatically detect common material options.\n      materials.forEach((mat) => {\n        mat.vertexColors = (geometry.faces[0] || {}).color ? THREE.FaceColors : THREE.NoColors;\n        mat.skinning = !!(geometry.bones || []).length;\n        mat.morphTargets = !!(geometry.morphTargets || []).length;\n        mat.morphNormals = !!(geometry.morphNormals || []).length;\n      });\n\n      const model = (geometry.bones || []).length\n        ? new THREE.SkinnedMesh(geometry, new THREE.MultiMaterial(materials))\n        : new THREE.Mesh(geometry, new THREE.MultiMaterial(materials));\n\n      this.load(model);\n    });\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'json', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n","var Vec3 = require('../math/Vec3');\n\nmodule.exports = RaycastResult;\n\n/**\n * Storage for Ray casting data.\n * @class RaycastResult\n * @constructor\n */\nfunction RaycastResult(){\n\n\t/**\n\t * @property {Vec3} rayFromWorld\n\t */\n\tthis.rayFromWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} rayToWorld\n\t */\n\tthis.rayToWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} hitNormalWorld\n\t */\n\tthis.hitNormalWorld = new Vec3();\n\n\t/**\n\t * @property {Vec3} hitPointWorld\n\t */\n\tthis.hitPointWorld = new Vec3();\n\n\t/**\n\t * @property {boolean} hasHit\n\t */\n\tthis.hasHit = false;\n\n\t/**\n\t * The hit shape, or null.\n\t * @property {Shape} shape\n\t */\n\tthis.shape = null;\n\n\t/**\n\t * The hit body, or null.\n\t * @property {Body} body\n\t */\n\tthis.body = null;\n\n\t/**\n\t * The index of the hit triangle, if the hit shape was a trimesh.\n\t * @property {number} hitFaceIndex\n\t * @default -1\n\t */\n\tthis.hitFaceIndex = -1;\n\n\t/**\n\t * Distance to the hit. Will be set to -1 if there was no hit.\n\t * @property {number} distance\n\t * @default -1\n\t */\n\tthis.distance = -1;\n\n\t/**\n\t * If the ray should stop traversing the bodies.\n\t * @private\n\t * @property {Boolean} _shouldStop\n\t * @default false\n\t */\n\tthis._shouldStop = false;\n}\n\n/**\n * Reset all result data.\n * @method reset\n */\nRaycastResult.prototype.reset = function () {\n\tthis.rayFromWorld.setZero();\n\tthis.rayToWorld.setZero();\n\tthis.hitNormalWorld.setZero();\n\tthis.hitPointWorld.setZero();\n\tthis.hasHit = false;\n\tthis.shape = null;\n\tthis.body = null;\n\tthis.hitFaceIndex = -1;\n\tthis.distance = -1;\n\tthis._shouldStop = false;\n};\n\n/**\n * @method abort\n */\nRaycastResult.prototype.abort = function(){\n\tthis._shouldStop = true;\n};\n\n/**\n * @method set\n * @param {Vec3} rayFromWorld\n * @param {Vec3} rayToWorld\n * @param {Vec3} hitNormalWorld\n * @param {Vec3} hitPointWorld\n * @param {Shape} shape\n * @param {Body} body\n * @param {number} distance\n */\nRaycastResult.prototype.set = function(\n\trayFromWorld,\n\trayToWorld,\n\thitNormalWorld,\n\thitPointWorld,\n\tshape,\n\tbody,\n\tdistance\n){\n\tthis.rayFromWorld.copy(rayFromWorld);\n\tthis.rayToWorld.copy(rayToWorld);\n\tthis.hitNormalWorld.copy(hitNormalWorld);\n\tthis.hitPointWorld.copy(hitPointWorld);\n\tthis.shape = shape;\n\tthis.body = body;\n\tthis.distance = distance;\n};"],"sourceRoot":""}